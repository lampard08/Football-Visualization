<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='EURO2024_team_LBP' inline='true' name='federated.0w793r30yfe3nk1b5vwnb1nrctgu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EURO2024_team_LBP' name='textscan.1thwmdx0calhjh14gxle80uv7ymp'>
            <connection class='textscan' directory='E:/Python/Football-Viz with Python/Case Study' filename='EURO2024_team_LBP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1thwmdx0calhjh14gxle80uv7ymp' name='EURO2024_team_LBP.csv' table='[EURO2024_team_LBP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='team_name' ordinal='0' />
            <column datatype='integer' name='LBP Attempts' ordinal='1' />
            <column datatype='integer' name='Successful LBP' ordinal='2' />
            <column datatype='integer' name='Matches' ordinal='3' />
            <column datatype='integer' name='Total Passes' ordinal='4' />
            <column datatype='real' name='Success Rate' ordinal='5' />
            <column datatype='real' name='LBP Attempt per Match' ordinal='6' />
            <column datatype='real' name='Pass Per Match' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1thwmdx0calhjh14gxle80uv7ymp' name='EURO2024_team_LBP.csv' table='[EURO2024_team_LBP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='team_name' ordinal='0' />
            <column datatype='integer' name='LBP Attempts' ordinal='1' />
            <column datatype='integer' name='Successful LBP' ordinal='2' />
            <column datatype='integer' name='Matches' ordinal='3' />
            <column datatype='integer' name='Total Passes' ordinal='4' />
            <column datatype='real' name='Success Rate' ordinal='5' />
            <column datatype='real' name='LBP Attempt per Match' ordinal='6' />
            <column datatype='real' name='Pass Per Match' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team_name]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP Attempts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LBP Attempts]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>LBP Attempts</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Successful LBP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Successful LBP]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>Successful LBP</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Matches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Matches]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>Matches</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Passes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Passes]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>Total Passes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Success Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Success Rate]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>Success Rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP Attempt per Match</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LBP Attempt per Match]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>LBP Attempt per Match</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pass Per Match</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pass Per Match]</local-name>
            <parent-name>[EURO2024_team_LBP.csv]</parent-name>
            <remote-alias>Pass Per Match</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='EURO2024_team_LBP.csv' datatype='table' name='[__tableau_internal_object_id__].[EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46]' role='measure' type='quantitative' />
      <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
      <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:team_name:nk]' palette='EURO2024' type='shape'>
            <map to='EURO2024/ALB.png'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='EURO2024/AUT.png'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='EURO2024/BEL.png'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='EURO2024/CRO.png'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='EURO2024/CZE.png'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='EURO2024/DEN.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='EURO2024/ENG.png'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='EURO2024/ESP.png'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='EURO2024/FRA.png'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='EURO2024/GEO.png'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='EURO2024/GER.png'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='EURO2024/HUN.png'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='EURO2024/ITA.png'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='EURO2024/NED.png'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='EURO2024/POL.png'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='EURO2024/POR.png'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='EURO2024/ROU.png'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='EURO2024/SCO.png'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='EURO2024/SRB.png'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='EURO2024/SUI.png'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='EURO2024/SVK.png'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='EURO2024/SVN.png'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='EURO2024/TUR.png'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='EURO2024/UKR.png'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EURO2024_team_LBP.csv' id='EURO2024_team_LBP.csv_E548FB7C7FAC42AEA5550D6B84FBFB46'>
            <properties context=''>
              <relation connection='textscan.1thwmdx0calhjh14gxle80uv7ymp' name='EURO2024_team_LBP.csv' table='[EURO2024_team_LBP#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='team_name' ordinal='0' />
                  <column datatype='integer' name='LBP Attempts' ordinal='1' />
                  <column datatype='integer' name='Successful LBP' ordinal='2' />
                  <column datatype='integer' name='Matches' ordinal='3' />
                  <column datatype='integer' name='Total Passes' ordinal='4' />
                  <column datatype='real' name='Success Rate' ordinal='5' />
                  <column datatype='real' name='LBP Attempt per Match' ordinal='6' />
                  <column datatype='real' name='Pass Per Match' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='EURO2024_player_LBP' inline='true' name='federated.1a86w5g0dhintc10j2guu0rcr9kk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EURO2024_player_LBP' name='textscan.0nnbgjc17myzw11d4vl3w1f4ih0h'>
            <connection class='textscan' directory='E:/Python/Football-Viz with Python/Case Study' filename='EURO2024_player_LBP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0nnbgjc17myzw11d4vl3w1f4ih0h' name='EURO2024_player_LBP.csv' table='[EURO2024_player_LBP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='player_name' ordinal='0' />
            <column datatype='string' name='team_name' ordinal='1' />
            <column datatype='integer' name='Total Passes' ordinal='2' />
            <column datatype='real' name='LBP Attempts' ordinal='3' />
            <column datatype='real' name='Successful LBP' ordinal='4' />
            <column datatype='integer' name='minutes_played' ordinal='5' />
            <column datatype='string' name='position' ordinal='6' />
            <column datatype='real' name='LBP Attempted per90' ordinal='7' />
            <column datatype='real' name='LBP Success Rate' ordinal='8' />
            <column datatype='real' name='LBP Received' ordinal='9' />
            <column datatype='real' name='LBP_Received_per90' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0nnbgjc17myzw11d4vl3w1f4ih0h' name='EURO2024_player_LBP.csv' table='[EURO2024_player_LBP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='player_name' ordinal='0' />
            <column datatype='string' name='team_name' ordinal='1' />
            <column datatype='integer' name='Total Passes' ordinal='2' />
            <column datatype='real' name='LBP Attempts' ordinal='3' />
            <column datatype='real' name='Successful LBP' ordinal='4' />
            <column datatype='integer' name='minutes_played' ordinal='5' />
            <column datatype='string' name='position' ordinal='6' />
            <column datatype='real' name='LBP Attempted per90' ordinal='7' />
            <column datatype='real' name='LBP Success Rate' ordinal='8' />
            <column datatype='real' name='LBP Received' ordinal='9' />
            <column datatype='real' name='LBP_Received_per90' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_name]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>player_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team_name]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Passes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Passes]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>Total Passes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP Attempts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LBP Attempts]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>LBP Attempts</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Successful LBP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Successful LBP]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>Successful LBP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minutes_played</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minutes_played]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>minutes_played</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[position]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>position</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP Attempted per90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LBP Attempted per90]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>LBP Attempted per90</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP Success Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LBP Success Rate]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>LBP Success Rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP Received</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LBP Received]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>LBP Received</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LBP_Received_per90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LBP_Received_per90]</local-name>
            <parent-name>[EURO2024_player_LBP.csv]</parent-name>
            <remote-alias>LBP_Received_per90</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Passes per90' datatype='real' name='[Calculation_2418714495562670080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='90*[Total Passes]/[minutes_played]' />
      </column>
      <column caption='LBP Received per90' datatype='real' name='[LBP_Received_per90]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='EURO2024_player_LBP.csv' datatype='table' name='[__tableau_internal_object_id__].[EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE]' role='measure' type='quantitative' />
      <column caption='Minutes Played' datatype='integer' name='[minutes_played]' role='measure' type='quantitative' />
      <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Abdülkerim Bardakcı&quot;' value='A.Bardakcı' />
          <alias key='&quot;Adam Buksa&quot;' value='A.Buksa' />
          <alias key='&quot;Adam Gnezda Čerin&quot;' value='A.Čerin' />
          <alias key='&quot;Adam Hložek&quot;' value='A.Hložek' />
          <alias key='&quot;Ádám Lang&quot;' value='Á.Lang' />
          <alias key='&quot;Ádám Nagy&quot;' value='Á.Nagy' />
          <alias key='&quot;Adam Obert&quot;' value='A.Obert' />
          <alias key='&quot;Adrián Rus&quot;' value='A.Rus' />
          <alias key='&quot;Adrien Rabiot&quot;' value='A.Rabiot' />
          <alias key='&quot;Alejandro Baena Rodríguez&quot;' value='Alex Baena' />
          <alias key='&quot;Alejandro Grimaldo García&quot;' value='Grimaldo' />
          <alias key='&quot;Aleksandar Mitrović&quot;' value='A.Mitrović' />
          <alias key='&quot;Alessandro Bastoni&quot;' value='A.Bastoni' />
          <alias key='&quot;Alexander Hartmann Bah&quot;' value='A.Bah' />
          <alias key='&quot;Alexander Prass&quot;' value='A.Prass' />
          <alias key='&quot;Alexandru Cicâldău&quot;' value='A.Cicâldău' />
          <alias key='&quot;Altay Bayındır&quot;' value='A.Bayındır' />
          <alias key='&quot;Álvaro Borja Morata Martín&quot;' value='Á.Morata' />
          <alias key='&quot;Amadou Onana&quot;' value='A.Onana' />
          <alias key='&quot;Anatolii Trubin&quot;' value='A.Trubin' />
          <alias key='&quot;András Schäfer&quot;' value='A.Schäfer' />
          <alias key='&quot;Andraž Šporar&quot;' value='A.Šporar' />
          <alias key='&quot;Andrea Cambiaso&quot;' value='A.Cambiaso' />
          <alias key='&quot;Andreas Christensen&quot;' value='A.Christensen' />
          <alias key='&quot;Andreas Skov Olsen&quot;' value='A.Olsen' />
          <alias key='&quot;Andrei Burcă Andonie&quot;' value='A.Burcă' />
          <alias key='&quot;Andrei Florin Ratiu&quot;' value='A.Ratiu' />
          <alias key='&quot;Andrej Kramarić&quot;' value='A.Kramarić' />
          <alias key='&quot;Andrew Robertson&quot;' value='A.Robertson' />
          <alias key='&quot;Andrija Živković&quot;' value='A.Živković' />
          <alias key='&quot;Andriy Lunin&quot;' value='A.Lunin' />
          <alias key='&quot;Andriy Yarmolenko&quot;' value='A.Yarmolenko' />
          <alias key='&quot;Angus Gunn&quot;' value='A.Gunn' />
          <alias key='&quot;Ante Budimir&quot;' value='A.Budimir' />
          <alias key='&quot;Anthony Gordon&quot;' value='A.Gordon' />
          <alias key='&quot;Anthony Ralston&quot;' value='A.Ralston' />
          <alias key='&quot;Antoine Griezmann&quot;' value='A.Griezmann' />
          <alias key='&quot;Antonín Barák&quot;' value='A.Barák' />
          <alias key='&quot;António João Pereira Albuquerque Tavares Silva&quot;' value='A.Silva' />
          <alias key='&quot;Antonio Rüdiger&quot;' value='A.Rüdiger' />
          <alias key='&quot;Anzor Mekvabishvili&quot;' value='A.Mekvabishvili' />
          <alias key='&quot;Arbër Hoxha&quot;' value='A.Hoxha' />
          <alias key='&quot;Arda Güler&quot;' value='A.Güler' />
          <alias key='&quot;Arlind Afrim Ajeti&quot;' value='A.Ajeti' />
          <alias key='&quot;Armando Broja&quot;' value='A.Broja' />
          <alias key='&quot;Artem Dovbyk&quot;' value='A.Dovbyk' />
          <alias key='&quot;Arthur Theate&quot;' value='A.Theate' />
          <alias key='&quot;Attila Fiola&quot;' value='A.Fiola' />
          <alias key='&quot;Attila Szalai&quot;' value='A.Szalai' />
          <alias key='&quot;Aurélien Djani Tchouaméni&quot;' value='A.Tchouaméni' />
          <alias key='&quot;Aymeric Laporte&quot;' value='A.Laporte' />
          <alias key='&quot;Ayoze Pérez Gutiérrez&quot;' value='A.Pérez' />
          <alias key='&quot;Barış Alper Yılmaz&quot;' value='B.Yılmaz' />
          <alias key='&quot;Barnabás Varga&quot;' value='B.Varga' />
          <alias key='&quot;Bart Verbruggen&quot;' value='B.Verbruggen' />
          <alias key='&quot;Bartosz Bereszyński&quot;' value='B.Bereszyński' />
          <alias key='&quot;Bartosz Salamon&quot;' value='B.Salamon' />
          <alias key='&quot;Bartosz Slisz&quot;' value='B.Slisz' />
          <alias key='&quot;Bendegúz Bolla&quot;' value='B.Bolla' />
          <alias key='&quot;Benjamin Henrichs&quot;' value='B.Henrichs' />
          <alias key='&quot;Benjamin Šeško&quot;' value='B.Šeško' />
          <alias key='&quot;Benjamin Verbič&quot;' value='B.Verbič' />
          <alias key='&quot;Berat Djimsiti&quot;' value='B.Djimsiti' />
          <alias key='&quot;Bernardo Mota Veiga de Carvalho e Silva&quot;' value='B.Silva' />
          <alias key='&quot;Billy Gilmour&quot;' value='B.Gilmour' />
          <alias key='&quot;Bogdan Racovițan&quot;' value='B.Racovițan' />
          <alias key='&quot;Borna Sosa&quot;' value='B.Sosa' />
          <alias key='&quot;Bradley Barcola&quot;' value='B.Barcola' />
          <alias key='&quot;Breel-Donald Embolo&quot;' value='B.Embolo' />
          <alias key='&quot;Bruno Miguel Borges Fernandes&quot;' value='B.Fernandes' />
          <alias key='&quot;Bruno Petković&quot;' value='B.Petković' />
          <alias key='&quot;Bryan Cristante&quot;' value='B.Cristante' />
          <alias key='&quot;Budu Zivzivadze&quot;' value='B.Zivzivadze' />
          <alias key='&quot;Bukayo Saka&quot;' value='B.Saka' />
          <alias key='&quot;Callum McGregor&quot;' value='C.McGregor' />
          <alias key='&quot;Callum Styles&quot;' value='C.Styles' />
          <alias key='&quot;Cenk Tosun&quot;' value='C.Tosun' />
          <alias key='&quot;Chris Führich&quot;' value='C.Führich' />
          <alias key='&quot;Christian Dannemann Eriksen&quot;' value='C.Eriksen' />
          <alias key='&quot;Christian Nørgaard&quot;' value='C.Nørgaard' />
          <alias key='&quot;Christoph Baumgartner&quot;' value='C.Baumgartner' />
          <alias key='&quot;Cody Mathès Gakpo&quot;' value='C.Gakpo' />
          <alias key='&quot;Cole Palmer&quot;' value='C.Palmer' />
          <alias key='&quot;Conor Gallagher&quot;' value='C.Gallagher' />
          <alias key='&quot;Cristiano Ronaldo dos Santos Aveiro&quot;' value='Cristiano Ronaldo' />
          <alias key='&quot;Daniel Carvajal Ramos&quot;' value='D.Carvajal' />
          <alias key='&quot;Dániel Gazdag&quot;' value='D.Gazdag' />
          <alias key='&quot;Daniel Olmo Carvajal&quot;' value='D.Olmo' />
          <alias key='&quot;Daniel Vivian Moreno&quot;' value='D.Vivian' />
          <alias key='&quot;Danilo Luís Hélio Pereira&quot;' value='Danilo Pereira' />
          <alias key='&quot;Darius Dumitru Olaru&quot;' value='D.Olaru' />
          <alias key='&quot;David Doudera&quot;' value='D.Doudera' />
          <alias key='&quot;Dávid Ďuriš&quot;' value='D.Ďuriš' />
          <alias key='&quot;Dávid Hancko&quot;' value='D.Hancko' />
          <alias key='&quot;David Jurásek&quot;' value='D.Jurásek' />
          <alias key='&quot;David Raum&quot;' value='D.Raum' />
          <alias key='&quot;David Raya Martin&quot;' value='David Raya' />
          <alias key='&quot;David Strelec&quot;' value='D.Strelec' />
          <alias key='&quot;Davide Frattesi&quot;' value='D.Frattesi' />
          <alias key='&quot;Dayotchanculle Upamecano&quot;' value='D.Upamecano' />
          <alias key='&quot;Declan Rice&quot;' value='D.Rice' />
          <alias key='&quot;Deian Cristian Sorescu&quot;' value='D.Sorescu' />
          <alias key='&quot;Denis Alibec&quot;' value='D.Alibec' />
          <alias key='&quot;Denis Lemi Zakaria Lako Lado&quot;' value='Zakaria' />
          <alias key='&quot;Denis Mihai Drăguş&quot;' value='D.Drăguş' />
          <alias key='&quot;Denis Vavro&quot;' value='D.Vavro' />
          <alias key='&quot;Deniz Undav&quot;' value='D.Undav' />
          <alias key='&quot;Dennis Man&quot;' value='D.Man' />
          <alias key='&quot;Denzel Dumfries&quot;' value='D.Dumfries' />
          <alias key='&quot;Diogo José Teixeira da Silva&quot;' value='Diogo Jota' />
          <alias key='&quot;Diogo Meireles Costa&quot;' value='Diogo Costa' />
          <alias key='&quot;Dodi Lukebakio&quot;' value='D.Lukebakio' />
          <alias key='&quot;Dominik Livaković&quot;' value='D.Livaković' />
          <alias key='&quot;Dominik Szoboszlai&quot;' value='D.Szoboszlai' />
          <alias key='&quot;Donyell Malen&quot;' value='D.Malen' />
          <alias key='&quot;Dušan Tadić&quot;' value='D.Tadić' />
          <alias key='&quot;Dušan Vlahović&quot;' value='D.Vlahović' />
          <alias key='&quot;Eberechi Eze&quot;' value='E.Eze' />
          <alias key='&quot;Eduardo Camavinga&quot;' value='E.Camavinga' />
          <alias key='&quot;Elseid Hysaj&quot;' value='E.Hysaj' />
          <alias key='&quot;Emre Can&quot;' value='E.Can' />
          <alias key='&quot;Endre Botka&quot;' value='E.Botka' />
          <alias key='&quot;Erik Janža&quot;' value='E.Janža' />
          <alias key='&quot;Ernest Muçi&quot;' value='E.Muçi' />
          <alias key='&quot;Ezri Konsa Ngoyo&quot;' value='E.Konsa' />
          <alias key='&quot;Fabian Lukas Schär&quot;' value='F.Schär' />
          <alias key='&quot;Fabian Rieder&quot;' value='F.Rieder' />
          <alias key='&quot;Fabián Ruiz Peña&quot;' value='Fabián Ruiz' />
          <alias key='&quot;Federico Chiesa&quot;' value='F.Chiesa' />
          <alias key='&quot;Federico Dimarco&quot;' value='F.Dimarco' />
          <alias key='&quot;Fehmi Mert Günok&quot;' value='F.Günok' />
          <alias key='&quot;Ferdi Erenay Kadıoğlu&quot;' value='Kadıoğlu' />
          <alias key='&quot;Fermin Lopez Marin&quot;' value='F.Lopez' />
          <alias key='&quot;Ferrán Torres García&quot;' value='F.Torres' />
          <alias key='&quot;Filip Kostić&quot;' value='F.Kostić' />
          <alias key='&quot;Filip Mladenović&quot;' value='F.Mladenović' />
          <alias key='&quot;Florian Grillitsch&quot;' value='F.Grillitsch' />
          <alias key='&quot;Florian Wirtz&quot;' value='F.Wirtz' />
          <alias key='&quot;Florin Constantin Niţă&quot;' value='F.Niţă' />
          <alias key='&quot;Florinel Teodor Coman&quot;' value='F.Coman' />
          <alias key='&quot;Francisco Fernandes Conceição&quot;' value='F.Conceição' />
          <alias key='&quot;George Alexandru Puşcaş&quot;' value='G.Puşcaş' />
          <alias key='&quot;Georges Mikautadze&quot;' value='G.Mikautadze' />
          <alias key='&quot;Georginio Wijnaldum&quot;' value='G.Wijnaldum' />
          <alias key='&quot;Georgiy Sudakov&quot;' value='G.Sudakov' />
          <alias key='&quot;Gernot Trauner&quot;' value='G.Trauner' />
          <alias key='&quot;Giacomo Raspadori&quot;' value='G.Raspadori' />
          <alias key='&quot;Gianluca Mancini&quot;' value='G.Mancini' />
          <alias key='&quot;Gianluca Scamacca&quot;' value='G.Scamacca' />
          <alias key='&quot;Gianluigi Donnarumma&quot;' value='G.Donnarumma' />
          <alias key='&quot;Giorgi Chakvetadze&quot;' value='G.Chakvetadze' />
          <alias key='&quot;Giorgi Gvelesiani&quot;' value='G.Gvelesiani' />
          <alias key='&quot;Giorgi Kochorashvili&quot;' value='G.Kochorashvili' />
          <alias key='&quot;Giorgi Kvilitaia&quot;' value='G.Kvilitaia' />
          <alias key='&quot;Giorgi Mamardashvili&quot;' value='G.Mamardashvili' />
          <alias key='&quot;Giovanni Di Lorenzo&quot;' value='Di Lorenzo' />
          <alias key='&quot;Gonçalo Bernardo Inácio&quot;' value='G.Inácio' />
          <alias key='&quot;Gonçalo Matias Ramos&quot;' value='G.Ramos' />
          <alias key='&quot;Granit Xhaka&quot;' value='G.Xhaka' />
          <alias key='&quot;Grant Campbell Hanley&quot;' value='G.Hanley' />
          <alias key='&quot;Guram Kashia&quot;' value='G.Kashia' />
          <alias key='&quot;Hakan Çalhanoğlu&quot;' value='H.Çalhanoğlu' />
          <alias key='&quot;Heorhii Tsitaishvili&quot;' value='H.Tsitaishvili' />
          <alias key='&quot;Ianis Hagi&quot;' value='I.Hagi' />
          <alias key='&quot;Ikoma Loïs Openda&quot;' value='Openda' />
          <alias key='&quot;İlkay Gündoğan&quot;' value='İ.Gündoğan' />
          <alias key='&quot;Illia Zabarnyi&quot;' value='I.Zabarnyi' />
          <alias key='&quot;İsmail Yüksek&quot;' value='İ.Yüksek' />
          <alias key='&quot;Iván Balliu Campeny&quot;' value='I.Campeny' />
          <alias key='&quot;Ivan Ilić&quot;' value='I.Ilić' />
          <alias key='&quot;Ivan Perišić&quot;' value='I.Perišić' />
          <alias key='&quot;Ivan Schranz&quot;' value='I.Schranz' />
          <alias key='&quot;Ivan Toney&quot;' value='I.Toney' />
          <alias key='&quot;Jack Hendry&quot;' value='J.Hendry' />
          <alias key='&quot;Jacob Bruun Larsen&quot;' value='J.Larsen' />
          <alias key='&quot;Jaka Bijol&quot;' value='J.Bijol' />
          <alias key='&quot;Jakub Moder&quot;' value='J.Moder' />
          <alias key='&quot;Jakub Piotr Kiwior&quot;' value='J.Kiwior' />
          <alias key='&quot;Jakub Piotrowski&quot;' value='J.Piotrowski' />
          <alias key='&quot;Jamal Musiala&quot;' value='J.Musiala' />
          <alias key='&quot;Jan Bednarek&quot;' value='J.Bednarek' />
          <alias key='&quot;Jan Kuchta&quot;' value='J.Kuchta' />
          <alias key='&quot;Jan Mlakar&quot;' value='J.Mlakar' />
          <alias key='&quot;Jan Oblak&quot;' value='J.Oblak' />
          <alias key='&quot;Jan Vertonghen&quot;' value='J.Vertonghen' />
          <alias key='&quot;Jannik Vestergaard&quot;' value='J.Vestergaard' />
          <alias key='&quot;Jarrod Bowen&quot;' value='J.Bowen' />
          <alias key='&quot;Jasir Asani&quot;' value='J.Asani' />
          <alias key='&quot;Jerdy Schouten&quot;' value='J.Schouten' />
          <alias key='&quot;Jeremie Frimpong&quot;' value='J.Frimpong' />
          <alias key='&quot;Jeremy Doku&quot;' value='J.Doku' />
          <alias key='&quot;Jesús Navas González&quot;' value='J.Navas' />
          <alias key='&quot;Jindřich Staněk&quot;' value='J.Staněk' />
          <alias key='&quot;Joachim Andersen&quot;' value='J.Andersen' />
          <alias key='&quot;Joakim Mæhle&quot;' value='J.Mæhle' />
          <alias key='&quot;João Félix Sequeira&quot;' value='João Félix' />
          <alias key='&quot;João Maria Lobo Alves Palhinha Gonçalves&quot;' value='Palhinha' />
          <alias key='&quot;João Pedro Cavaco Cancelo&quot;' value='J.Cancelo' />
          <alias key='&quot;Joey Veerman&quot;' value='J.Veerman' />
          <alias key='&quot;Johan Bakayoko&quot;' value='J.Bakayoko' />
          <alias key='&quot;John McGinn&quot;' value='J.McGinn' />
          <alias key='&quot;John Stones&quot;' value='J.Stones' />
          <alias key='&quot;Jon Gorenc Stankovič&quot;' value='J.Stankovič' />
          <alias key='&quot;Jonas Older Wind&quot;' value='J.Wind' />
          <alias key='&quot;Jonathan Tah&quot;' value='J.Tah' />
          <alias key='&quot;Jordan Pickford&quot;' value='J.Pickford' />
          <alias key='&quot;Jorge Luiz Frello Filho&quot;' value='Jorginho' />
          <alias key='&quot;José Diogo Dalot Teixeira&quot;' value='D.Dalot' />
          <alias key='&quot;José Ignacio Fernández Iglesias&quot;' value='Nacho' />
          <alias key='&quot;José Luis Sanmartín Mato&quot;' value='Joselu' />
          <alias key='&quot;Joshua Kimmich&quot;' value='J.Kimmich' />
          <alias key='&quot;Joshua Zirkzee&quot;' value='J.Zirkzee' />
          <alias key='&quot;Josip Iličić&quot;' value='J.Iličić' />
          <alias key='&quot;Josip Juranović&quot;' value='J.Juranović' />
          <alias key='&quot;Josip Stanišić&quot;' value='J.Stanišić' />
          <alias key='&quot;Josip Šutalo&quot;' value='J.Šutalo' />
          <alias key='&quot;Joško Gvardiol&quot;' value='J.Gvardiol' />
          <alias key='&quot;Jude Bellingham&quot;' value='J.Bellingham' />
          <alias key='&quot;Jules Koundé&quot;' value='J.Koundé' />
          <alias key='&quot;Juraj Kucka&quot;' value='J.Kucka' />
          <alias key='&quot;Jure Balkovec&quot;' value='J.Balkovec' />
          <alias key='&quot;Kaan Ayhan&quot;' value='K.Ayhan' />
          <alias key='&quot;Kacper Urbanski&quot;' value='K.Urbanski' />
          <alias key='&quot;Kai Havertz&quot;' value='K.Havertz' />
          <alias key='&quot;Kamil Grosicki&quot;' value='K.Grosicki' />
          <alias key='&quot;Karol Świderski&quot;' value='K.Świderski' />
          <alias key='&quot;Kasper Dolberg&quot;' value='K.Dolberg' />
          <alias key='&quot;Kasper Schmeichel&quot;' value='K.Schmeichel' />
          <alias key='&quot;Kenan Yildiz&quot;' value='K.Yildiz' />
          <alias key='&quot;Kenneth McLean&quot;' value='K.McLean' />
          <alias key='&quot;Kevin Csoboth&quot;' value='K.Csoboth' />
          <alias key='&quot;Kevin Danso&quot;' value='K.Danso' />
          <alias key='&quot;Kevin De Bruyne&quot;' value='K.De Bruyne' />
          <alias key='&quot;Khvicha Kvaratskhelia&quot;' value='K.Kvaratskhelia' />
          <alias key='&quot;Kieran Tierney&quot;' value='K.Tierney' />
          <alias key='&quot;Kieran Trippier&quot;' value='K.Trippier' />
          <alias key='&quot;Kingsley Coman&quot;' value='K.Coman' />
          <alias key='&quot;Klaus Gjasula&quot;' value='K.Gjasula' />
          <alias key='&quot;Kléper Laveran Lima Ferreira&quot;' value='Pepe' />
          <alias key='&quot;Kobbie Mainoo&quot;' value='K.Mainoo' />
          <alias key='&quot;Koen Casteels&quot;' value='K.Casteels' />
          <alias key='&quot;Konrad Laimer&quot;' value='K.Laimer' />
          <alias key='&quot;Kristjan Asllani&quot;' value='K.Asllani' />
          <alias key='&quot;Krzysztof Piątek&quot;' value='K.Piątek' />
          <alias key='&quot;Kwadwo Duah&quot;' value='K.Duah' />
          <alias key='&quot;Kyle Walker&quot;' value='K.Walker' />
          <alias key='&quot;Kylian Mbappé Lottin&quot;' value='K.Mbappé' />
          <alias key='&quot;Ladislav Krejčí&quot;' value='L.Krejčí' />
          <alias key='&quot;Lamine Yamal Nasraoui Ebana&quot;' value='L.Yamal' />
          <alias key='&quot;Lasha Dvali&quot;' value='L.Dvali' />
          <alias key='&quot;László Bénes&quot;' value='L.Bénes' />
          <alias key='&quot;László Kleinheisler&quot;' value='L.Kleinheisler' />
          <alias key='&quot;Lawrence Shankland&quot;' value='L.Shankland' />
          <alias key='&quot;Lazar Samardžić&quot;' value='L.Samardžić' />
          <alias key='&quot;Leandro Trossard&quot;' value='L.Trossard' />
          <alias key='&quot;Leo Sauer&quot;' value='L.Sauer' />
          <alias key='&quot;Leonidas Stergiou&quot;' value='L.Stergiou' />
          <alias key='&quot;Leopold Querfeld&quot;' value='L.Querfeld' />
          <alias key='&quot;Leroy Sané&quot;' value='L.Sané' />
          <alias key='&quot;Lewis Morgan&quot;' value='L.Morgan' />
          <alias key='&quot;Lorenzo Pellegrini&quot;' value='L.Pellegrini' />
          <alias key='&quot;Lovro Majer&quot;' value='L.Majer' />
          <alias key='&quot;Ľubomír Tupta&quot;' value='Ľ.Tupta' />
          <alias key='&quot;Luka Ivanušec&quot;' value='L.Ivanušec' />
          <alias key='&quot;Luka Jović&quot;' value='L.Jović' />
          <alias key='&quot;Luka Lochoshvili&quot;' value='L.Lochoshvili' />
          <alias key='&quot;Luka Modrić&quot;' value='L.Modrić' />
          <alias key='&quot;Luka Sučić&quot;' value='L.Sučić' />
          <alias key='&quot;Lukáš Haraslín&quot;' value='L.Haraslín' />
          <alias key='&quot;Lukáš Provod&quot;' value='L.Provod' />
          <alias key='&quot;Łukasz Skorupski&quot;' value='Ł.Skorupski' />
          <alias key='&quot;Luke Shaw&quot;' value='L.Shaw' />
          <alias key='&quot;Lutsharel Geertruida&quot;' value='L.Geertruida' />
          <alias key='&quot;Maksym Talovierov&quot;' value='M.Talovierov' />
          <alias key='&quot;Manuel Neuer&quot;' value='M.Neuer' />
          <alias key='&quot;Manuel Obafemi Akanji&quot;' value='M.Akanji' />
          <alias key='&quot;Marc Cucurella Saseta&quot;' value='M.Cucurella' />
          <alias key='&quot;Marc Guehi&quot;' value='M.Guehi' />
          <alias key='&quot;Marcel Sabitzer&quot;' value='M.Sabitzer' />
          <alias key='&quot;Marcelo Brozović&quot;' value='M.Brozović' />
          <alias key='&quot;Marcus Thuram&quot;' value='M.Thuram' />
          <alias key='&quot;Marin Pongracic&quot;' value='M.Pongracic' />
          <alias key='&quot;Mario Mitaj&quot;' value='M.Mitaj' />
          <alias key='&quot;Mario Pašalić&quot;' value='M.Pašalić' />
          <alias key='&quot;Marius Mihai Marin&quot;' value='M.Marin' />
          <alias key='&quot;Marko Arnautović&quot;' value='M.Arnautović' />
          <alias key='&quot;Martin Ádám&quot;' value='M.Ádám' />
          <alias key='&quot;Martin Baturina&quot;' value='M.Baturina' />
          <alias key='&quot;Martin Dúbravka&quot;' value='M.Dúbravka' />
          <alias key='&quot;Martín Zubimendi Ibáñez&quot;' value='M.Zubimendi' />
          <alias key='&quot;Márton Dárdai&quot;' value='M.Dárdai' />
          <alias key='&quot;Matěj Jurásek&quot;' value='M.Jurásek' />
          <alias key='&quot;Matěj Kovář&quot;' value='M.Kovář' />
          <alias key='&quot;Mateo Kovačić&quot;' value='M.Kovačić' />
          <alias key='&quot;Mateo Retegui&quot;' value='M.Retegui' />
          <alias key='&quot;Matheus Luiz Nunes&quot;' value='M.Nunes' />
          <alias key='&quot;Matteo Darmian&quot;' value='M.Darmian' />
          <alias key='&quot;Mattia Zaccagni&quot;' value='M.Zaccagni' />
          <alias key='&quot;Matúš Bero&quot;' value='M.Bero' />
          <alias key='&quot;Maximilian Beier&quot;' value='M.Beier' />
          <alias key='&quot;Maximilian Mittelstädt&quot;' value='M.Mittelstädt' />
          <alias key='&quot;Maximilian Wöber&quot;' value='M.Wöber' />
          <alias key='&quot;Medon Berisha&quot;' value='M.Berisha' />
          <alias key='&quot;Mehmet Zeki Çelik&quot;' value='M.Çelik' />
          <alias key='&quot;Memphis Depay&quot;' value='M.Depay' />
          <alias key='&quot;Merih Demiral&quot;' value='M.Demiral' />
          <alias key='&quot;Mert Müldür&quot;' value='M.Müldür' />
          <alias key='&quot;Michael Gregoritsch&quot;' value='M.Gregoritsch' />
          <alias key='&quot;Michael Ijemuan Folorunsho&quot;' value='M.Folorunsho' />
          <alias key='&quot;Michał Skóraś&quot;' value='M.Skóraś' />
          <alias key='&quot;Michel Aebischer&quot;' value='M.Aebischer' />
          <alias key='&quot;Micky van de Ven&quot;' value='M.van de Ven' />
          <alias key='&quot;Mijat Gaćinović&quot;' value='M.Gaćinović' />
          <alias key='&quot;Mike Maignan&quot;' value='M.Maignan' />
          <alias key='&quot;Mikel Merino Zazón&quot;' value='M.Merino' />
          <alias key='&quot;Mikel Oyarzabal Ugarte&quot;' value='M.Oyarzabal' />
          <alias key='&quot;Mikkel Damsgaard&quot;' value='M.Damsgaard' />
          <alias key='&quot;Milan Škriniar&quot;' value='M.Škriniar' />
          <alias key='&quot;Milos Kerkez&quot;' value='M.Kerkez' />
          <alias key='&quot;Milos Veljkovic&quot;' value='M.Veljkovic' />
          <alias key='&quot;Mirlind Daku&quot;' value='M.Daku' />
          <alias key='&quot;Mohamed Zeki Amdouni&quot;' value='M.Amdouni' />
          <alias key='&quot;Mojmír Chytil&quot;' value='M.Chytil' />
          <alias key='&quot;Morten Hjulmand&quot;' value='M.Hjulmand' />
          <alias key='&quot;Muhammed Kerem Aktürkoğlu&quot;' value='M.Aktürkoğlu' />
          <alias key='&quot;Mykhailo Mudryk&quot;' value='M.Mudryk' />
          <alias key='&quot;Mykola Matvienko&quot;' value='M.Matvienko' />
          <alias key='&quot;Mykola Shaparenko&quot;' value='M.Shaparenko' />
          <alias key='&quot;N&apos;Golo Kanté&quot;' value='N.Kanté' />
          <alias key='&quot;Nathan Aké&quot;' value='N.Aké' />
          <alias key='&quot;Nedim Bajrami&quot;' value='N.Bajrami' />
          <alias key='&quot;Nélson Cabral Semedo&quot;' value='N.Semedo' />
          <alias key='&quot;Nemanja Gudelj&quot;' value='N.Gudelj' />
          <alias key='&quot;Nicholas Williams Arthuer&quot;' value='N.Williams' />
          <alias key='&quot;Niclas Füllkrug&quot;' value='N.Füllkrug' />
          <alias key='&quot;Nico Schlotterbeck&quot;' value='N.Schlotterbeck' />
          <alias key='&quot;Nicola Zalewski&quot;' value='N.Zalewski' />
          <alias key='&quot;Nicolae Claudiu Stanciu&quot;' value='N.Stanciu' />
          <alias key='&quot;Nicolas Seiwald&quot;' value='N.Seiwald' />
          <alias key='&quot;Nicolò Barella&quot;' value='N.Barella' />
          <alias key='&quot;Nicolò Fagioli&quot;' value='N.Fagioli' />
          <alias key='&quot;Nicușor Silviu Bancu&quot;' value='N.Bancu' />
          <alias key='&quot;Nika Kvekveskiri&quot;' value='N.Kvekveskiri' />
          <alias key='&quot;Nikola Milenković&quot;' value='N.Milenković' />
          <alias key='&quot;Norbert Gyömbér&quot;' value='N.Gyömbér' />
          <alias key='&quot;Nuno Mendes&quot;' value='N.Mendes' />
          <alias key='&quot;Okay Yokuşlu&quot;' value='O.Yokuşlu' />
          <alias key='&quot;Oleksandr Svatok&quot;' value='O.Svatok' />
          <alias key='&quot;Oleksandr Tymchyk&quot;' value='O.Tymchyk' />
          <alias key='&quot;Oleksandr Zinchenko&quot;' value='O.Zinchenko' />
          <alias key='&quot;Oleksandr Zubkov&quot;' value='O.Zubkov' />
          <alias key='&quot;Olivier Giroud&quot;' value='O.Giroud' />
          <alias key='&quot;Ollie Watkins&quot;' value='O.Watkins' />
          <alias key='&quot;Ondrej Duda&quot;' value='O.Duda' />
          <alias key='&quot;Ondřej Lingr&quot;' value='O.Lingr' />
          <alias key='&quot;Orel Mangala&quot;' value='O.Mangala' />
          <alias key='&quot;Orkun Kökçü&quot;' value='O.Kökçü' />
          <alias key='&quot;Otar Kakabadze&quot;' value='O.Kakabadze' />
          <alias key='&quot;Otar Kiteishvili&quot;' value='O.Kiteishvili' />
          <alias key='&quot;Ousmane Dembélé&quot;' value='O.Dembélé' />
          <alias key='&quot;Pascal Groß&quot;' value='P.Groß' />
          <alias key='&quot;Patrick Pentz&quot;' value='P.Pentz' />
          <alias key='&quot;Patrick Wimmer&quot;' value='P.Wimmer' />
          <alias key='&quot;Patrik Schick&quot;' value='P.Schick' />
          <alias key='&quot;Pavel Šulc&quot;' value='P.Šulc' />
          <alias key='&quot;Paweł Dawidowicz&quot;' value='P.Dawidowicz' />
          <alias key='&quot;Pedro González López&quot;' value='Pedri' />
          <alias key='&quot;Pedro Lomba Neto&quot;' value='P.Neto' />
          <alias key='&quot;Petar Stojanović&quot;' value='P.Stojanović' />
          <alias key='&quot;Péter Gulácsi&quot;' value='P.Gulácsi' />
          <alias key='&quot;Peter Pekarík&quot;' value='P.Pekarík' />
          <alias key='&quot;Petr Ševčík&quot;' value='P.Ševčík' />
          <alias key='&quot;Phil Foden&quot;' value='P.Foden' />
          <alias key='&quot;Philipp Lienhart&quot;' value='P.Lienhart' />
          <alias key='&quot;Philipp Mwene&quot;' value='P.Mwene' />
          <alias key='&quot;Pierre-Emile Højbjerg&quot;' value='P.Højbjerg' />
          <alias key='&quot;Piotr Zieliński&quot;' value='P.Zieliński' />
          <alias key='&quot;Predrag Rajković&quot;' value='P.Rajković' />
          <alias key='&quot;Przemysław Frankowski&quot;' value='P.Frankowski' />
          <alias key='&quot;Qazim Laçi&quot;' value='Q.Laçi' />
          <alias key='&quot;Radu Drăgușin&quot;' value='R.Drăgușin' />
          <alias key='&quot;Rafael Alexandre Conceição Leão&quot;' value='R.Leão' />
          <alias key='&quot;Randal Kolo Muani&quot;' value='K.Muani' />
          <alias key='&quot;Rasmus Winther Højlund&quot;' value='R.Højlund' />
          <alias key='&quot;Răzvan Gabriel Marin&quot;' value='R.Marin' />
          <alias key='&quot;Remo Freuler&quot;' value='R.Freuler' />
          <alias key='&quot;Renato Steffen&quot;' value='R.Steffen' />
          <alias key='&quot;Rey Manaj&quot;' value='R.Manaj' />
          <alias key='&quot;Ricardo Iván Rodríguez Araya&quot;' value='R.Rodríguez' />
          <alias key='&quot;Riccardo Calafiori&quot;' value='R.Calafiori' />
          <alias key='&quot;Robert Andrich&quot;' value='R.Andrich' />
          <alias key='&quot;Róbert Boženík&quot;' value='R.Boženík' />
          <alias key='&quot;Robert Lewandowski&quot;' value='R.Lewandowski' />
          <alias key='&quot;Robin Aime Robert Le Normand&quot;' value='Le Normand' />
          <alias key='&quot;Robin Hranáč&quot;' value='R.Hranáč' />
          <alias key='&quot;Rodrigo Hernández Cascante&quot;' value='Rodri' />
          <alias key='&quot;Roland Sallai&quot;' value='R.Sallai' />
          <alias key='&quot;Roman Yaremchuk&quot;' value='R.Yaremchuk' />
          <alias key='&quot;Romano Schmid&quot;' value='R.Schmid' />
          <alias key='&quot;Romelu Lukaku Menama&quot;' value='R.Lukaku' />
          <alias key='&quot;Rúben Diogo Da Silva Neves&quot;' value='R.Neves' />
          <alias key='&quot;Rúben Santos Gato Alves Dias&quot;' value='R.Dias' />
          <alias key='&quot;Ruben Vargas&quot;' value='R.Vargas' />
          <alias key='&quot;Ruslan Malinovskiy&quot;' value='R.Malinovskiy' />
          <alias key='&quot;Ryan Christie&quot;' value='R.Christie' />
          <alias key='&quot;Ryan Porteous&quot;' value='R.Porteous' />
          <alias key='&quot;Saba Lobzhanidze&quot;' value='S.Lobzhanidze' />
          <alias key='&quot;Salih Özcan&quot;' value='S.Özcan' />
          <alias key='&quot;Samet Akaydin&quot;' value='S.Akaydin' />
          <alias key='&quot;Sandro Altunashvili&quot;' value='S.Altunashvili' />
          <alias key='&quot;Saša Lukić&quot;' value='S.Lukić' />
          <alias key='&quot;Scott McKenna&quot;' value='S.McKenna' />
          <alias key='&quot;Scott McTominay&quot;' value='S.McTominay' />
          <alias key='&quot;Sebastian Szymański&quot;' value='S.Szymański' />
          <alias key='&quot;Semih Kılıçsoy&quot;' value='S.Kılıçsoy' />
          <alias key='&quot;Sergej Milinković-Savić&quot;' value='Milinković-Savić' />
          <alias key='&quot;Serhii Sydorchuk&quot;' value='S.Sydorchuk' />
          <alias key='&quot;Silvan Widmer&quot;' value='S.Widmer' />
          <alias key='&quot;Solomon Kverkvelia&quot;' value='S.Kverkvelia' />
          <alias key='&quot;Srđan Mijailović&quot;' value='S.Mijailović' />
          <alias key='&quot;Stanislav Lobotka&quot;' value='S.Lobotka' />
          <alias key='&quot;Stefan de Vrij&quot;' value='S.de Vrij' />
          <alias key='&quot;Stefan Posch&quot;' value='S.Posch' />
          <alias key='&quot;Stephan El Shaarawy&quot;' value='S.El Shaarawy' />
          <alias key='&quot;Steven Bergwijn&quot;' value='S.Bergwijn' />
          <alias key='&quot;Steven Zuber&quot;' value='S.Zuber' />
          <alias key='&quot;Strahinja Pavlović&quot;' value='S.Pavlović' />
          <alias key='&quot;Stuart Armstrong&quot;' value='S.Armstrong' />
          <alias key='&quot;Taras Stepanenko&quot;' value='T.Stepanenko' />
          <alias key='&quot;Taras Wiktorowicz Romanczuk&quot;' value='T.Romanczuk' />
          <alias key='&quot;Taulant Sulejmanov&quot;' value='T.Sulejmanov' />
          <alias key='&quot;Theo Bernard François Hernández&quot;' value='T.Hernández' />
          <alias key='&quot;Thomas Delaney&quot;' value='T.Delaney' />
          <alias key='&quot;Thomas Müller&quot;' value='T.Müller' />
          <alias key='&quot;Thomas Strakosha&quot;' value='T.Strakosha' />
          <alias key='&quot;Tijjani Reijnders&quot;' value='T.Reijnders' />
          <alias key='&quot;Timi Elšnik&quot;' value='T.Elšnik' />
          <alias key='&quot;Timothy Castagne&quot;' value='T.Castagne' />
          <alias key='&quot;Tomáš Chorý&quot;' value='T.Chorý' />
          <alias key='&quot;Tomáš Holeš&quot;' value='T.Holeš' />
          <alias key='&quot;Tomáš Souček&quot;' value='T.Souček' />
          <alias key='&quot;Tomáš Suslov&quot;' value='T.Suslov' />
          <alias key='&quot;Toni Kroos&quot;' value='T.Kroos' />
          <alias key='&quot;Trent Alexander-Arnold&quot;' value='T.Alexander-Arnold' />
          <alias key='&quot;Unai Simón Mendibil&quot;' value='Unai Simón' />
          <alias key='&quot;Václav Černý&quot;' value='V.Černý' />
          <alias key='&quot;Valentin Mihai Mihăilă&quot;' value='V.Mihăilă' />
          <alias key='&quot;Vanja Drkušić&quot;' value='V.Drkušić' />
          <alias key='&quot;Vasile Mogoș&quot;' value='V.Mogoș' />
          <alias key='&quot;Veljko Birmančević&quot;' value='V.Birmančević' />
          <alias key='&quot;Victor Bernth Kristansen&quot;' value='V.Kristansen' />
          <alias key='&quot;Viktor Tsygankov&quot;' value='V.Tsygankov' />
          <alias key='&quot;Vincent Sierro&quot;' value='V.Sierro' />
          <alias key='&quot;Virgil van Dijk&quot;' value='Van Dijk' />
          <alias key='&quot;Vitalii Mykolenko&quot;' value='V.Mykolenko' />
          <alias key='&quot;Vitor Machado Ferreira&quot;' value='Vitinha' />
          <alias key='&quot;Vladimír Coufal&quot;' value='V.Coufal' />
          <alias key='&quot;Vladyslav Vanat&quot;' value='V.Vanat' />
          <alias key='&quot;Volodymyr Brazhko&quot;' value='V.Brazhko' />
          <alias key='&quot;Waldemar Anton&quot;' value='W.Anton' />
          <alias key='&quot;Willi Orban&quot;' value='W.Orban' />
          <alias key='&quot;William Saliba&quot;' value='W.Saliba' />
          <alias key='&quot;Wojciech Szczęsny&quot;' value='W.Szczęsny' />
          <alias key='&quot;Wout Faes&quot;' value='W.Faes' />
          <alias key='&quot;Wout Weghorst&quot;' value='W.Weghorst' />
          <alias key='&quot;Xavi Simons&quot;' value='X.Simons' />
          <alias key='&quot;Xherdan Shaqiri&quot;' value='X.Shaqiri' />
          <alias key='&quot;Yann Sommer&quot;' value='Y.Sommer' />
          <alias key='&quot;Yannick Ferreira Carrasco&quot;' value='Y.Carrasco' />
          <alias key='&quot;Ylber Ramadani&quot;' value='Y.Ramadani' />
          <alias key='&quot;Youri Tielemans&quot;' value='Y.Tielemans' />
          <alias key='&quot;Youssouf Fofana&quot;' value='Y.Fofana' />
          <alias key='&quot;Yukhym Konoplya&quot;' value='Y.Konoplya' />
          <alias key='&quot;Yunus Akgün&quot;' value='Y.Akgün' />
          <alias key='&quot;Yussuf Yurary Poulsen&quot;' value='Y.Poulsen' />
          <alias key='&quot;Yusuf Yazıcı&quot;' value='Y.Yazıcı' />
          <alias key='&quot;Žan Celar&quot;' value='Ž.Celar' />
          <alias key='&quot;Žan Karničnik&quot;' value='Ž.Karničnik' />
          <alias key='&quot;Žan Vipotnik&quot;' value='Ž.Vipotnik' />
          <alias key='&quot;Zeno Debast&quot;' value='Z.Debast' />
          <alias key='&quot;Zsolt Nagy&quot;' value='Z.Nagy' />
          <alias key='&quot;Zuriko Davitashvili&quot;' value='Z.Davitashvili' />
        </aliases>
      </column>
      <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
      <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
      <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Player Name,Team Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:player_name:nk]' />
          <groupfilter function='level-members' level='[none:team_name:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:team_name:nk]' palette='EURO2024' type='shape'>
            <map to='EURO2024/ALB.png'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='EURO2024/AUT.png'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='EURO2024/BEL.png'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='EURO2024/CRO.png'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='EURO2024/CZE.png'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='EURO2024/DEN.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='EURO2024/ENG.png'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='EURO2024/ESP.png'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='EURO2024/FRA.png'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='EURO2024/GEO.png'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='EURO2024/GER.png'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='EURO2024/HUN.png'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='EURO2024/ITA.png'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='EURO2024/NED.png'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='EURO2024/POL.png'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='EURO2024/POR.png'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='EURO2024/ROU.png'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='EURO2024/SCO.png'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='EURO2024/SRB.png'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='EURO2024/SUI.png'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='EURO2024/SVK.png'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='EURO2024/SVN.png'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='EURO2024/TUR.png'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='EURO2024/UKR.png'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EURO2024_player_LBP.csv' id='EURO2024_player_LBP.csv_95678D5203BF4069BCFCD3C55A3958FE'>
            <properties context=''>
              <relation connection='textscan.0nnbgjc17myzw11d4vl3w1f4ih0h' name='EURO2024_player_LBP.csv' table='[EURO2024_player_LBP#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='player_name' ordinal='0' />
                  <column datatype='string' name='team_name' ordinal='1' />
                  <column datatype='integer' name='Total Passes' ordinal='2' />
                  <column datatype='real' name='LBP Attempts' ordinal='3' />
                  <column datatype='real' name='Successful LBP' ordinal='4' />
                  <column datatype='integer' name='minutes_played' ordinal='5' />
                  <column datatype='string' name='position' ordinal='6' />
                  <column datatype='real' name='LBP Attempted per90' ordinal='7' />
                  <column datatype='real' name='LBP Success Rate' ordinal='8' />
                  <column datatype='real' name='LBP Received' ordinal='9' />
                  <column datatype='real' name='LBP_Received_per90' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1a86w5g0dhintc10j2guu0rcr9kk'>
      <datasources>
        <datasource caption='EURO2024_player_LBP' name='federated.1a86w5g0dhintc10j2guu0rcr9kk' />
      </datasources>
      <datasource-dependencies datasource='federated.1a86w5g0dhintc10j2guu0rcr9kk' />
      <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[Exclusions (Player Name,Team Name)]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='crossjoin'>
            <groupfilter function='level-members' level='[none:player_name:nk]' />
            <groupfilter function='level-members' level='[none:team_name:nk]' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[none:player_name:nk]' member='&quot;John McGinn&quot;' />
            <groupfilter function='member' level='[none:team_name:nk]' member='&quot;Scotland&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Center Backs'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold' fontsize='18'>Line-Breaking Passes By Midfielders</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>EURO 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EURO2024_player_LBP' name='federated.1a86w5g0dhintc10j2guu0rcr9kk' />
          </datasources>
          <datasource-dependencies datasource='federated.1a86w5g0dhintc10j2guu0rcr9kk'>
            <column caption='Passes per90' datatype='real' name='[Calculation_2418714495562670080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='90*[Total Passes]/[minutes_played]' />
            </column>
            <column datatype='real' name='[LBP Attempted per90]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Passes]' role='measure' type='quantitative' />
            <column caption='Minutes Played' datatype='integer' name='[minutes_played]' role='measure' type='quantitative' />
            <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Abdülkerim Bardakcı&quot;' value='A.Bardakcı' />
                <alias key='&quot;Adam Buksa&quot;' value='A.Buksa' />
                <alias key='&quot;Adam Gnezda Čerin&quot;' value='A.Čerin' />
                <alias key='&quot;Adam Hložek&quot;' value='A.Hložek' />
                <alias key='&quot;Ádám Lang&quot;' value='Á.Lang' />
                <alias key='&quot;Ádám Nagy&quot;' value='Á.Nagy' />
                <alias key='&quot;Adam Obert&quot;' value='A.Obert' />
                <alias key='&quot;Adrián Rus&quot;' value='A.Rus' />
                <alias key='&quot;Adrien Rabiot&quot;' value='A.Rabiot' />
                <alias key='&quot;Alejandro Baena Rodríguez&quot;' value='Alex Baena' />
                <alias key='&quot;Alejandro Grimaldo García&quot;' value='Grimaldo' />
                <alias key='&quot;Aleksandar Mitrović&quot;' value='A.Mitrović' />
                <alias key='&quot;Alessandro Bastoni&quot;' value='A.Bastoni' />
                <alias key='&quot;Alexander Hartmann Bah&quot;' value='A.Bah' />
                <alias key='&quot;Alexander Prass&quot;' value='A.Prass' />
                <alias key='&quot;Alexandru Cicâldău&quot;' value='A.Cicâldău' />
                <alias key='&quot;Altay Bayındır&quot;' value='A.Bayındır' />
                <alias key='&quot;Álvaro Borja Morata Martín&quot;' value='Á.Morata' />
                <alias key='&quot;Amadou Onana&quot;' value='A.Onana' />
                <alias key='&quot;Anatolii Trubin&quot;' value='A.Trubin' />
                <alias key='&quot;András Schäfer&quot;' value='A.Schäfer' />
                <alias key='&quot;Andraž Šporar&quot;' value='A.Šporar' />
                <alias key='&quot;Andrea Cambiaso&quot;' value='A.Cambiaso' />
                <alias key='&quot;Andreas Christensen&quot;' value='A.Christensen' />
                <alias key='&quot;Andreas Skov Olsen&quot;' value='A.Olsen' />
                <alias key='&quot;Andrei Burcă Andonie&quot;' value='A.Burcă' />
                <alias key='&quot;Andrei Florin Ratiu&quot;' value='A.Ratiu' />
                <alias key='&quot;Andrej Kramarić&quot;' value='A.Kramarić' />
                <alias key='&quot;Andrew Robertson&quot;' value='A.Robertson' />
                <alias key='&quot;Andrija Živković&quot;' value='A.Živković' />
                <alias key='&quot;Andriy Lunin&quot;' value='A.Lunin' />
                <alias key='&quot;Andriy Yarmolenko&quot;' value='A.Yarmolenko' />
                <alias key='&quot;Angus Gunn&quot;' value='A.Gunn' />
                <alias key='&quot;Ante Budimir&quot;' value='A.Budimir' />
                <alias key='&quot;Anthony Gordon&quot;' value='A.Gordon' />
                <alias key='&quot;Anthony Ralston&quot;' value='A.Ralston' />
                <alias key='&quot;Antoine Griezmann&quot;' value='A.Griezmann' />
                <alias key='&quot;Antonín Barák&quot;' value='A.Barák' />
                <alias key='&quot;António João Pereira Albuquerque Tavares Silva&quot;' value='A.Silva' />
                <alias key='&quot;Antonio Rüdiger&quot;' value='A.Rüdiger' />
                <alias key='&quot;Anzor Mekvabishvili&quot;' value='A.Mekvabishvili' />
                <alias key='&quot;Arbër Hoxha&quot;' value='A.Hoxha' />
                <alias key='&quot;Arda Güler&quot;' value='A.Güler' />
                <alias key='&quot;Arlind Afrim Ajeti&quot;' value='A.Ajeti' />
                <alias key='&quot;Armando Broja&quot;' value='A.Broja' />
                <alias key='&quot;Artem Dovbyk&quot;' value='A.Dovbyk' />
                <alias key='&quot;Arthur Theate&quot;' value='A.Theate' />
                <alias key='&quot;Attila Fiola&quot;' value='A.Fiola' />
                <alias key='&quot;Attila Szalai&quot;' value='A.Szalai' />
                <alias key='&quot;Aurélien Djani Tchouaméni&quot;' value='A.Tchouaméni' />
                <alias key='&quot;Aymeric Laporte&quot;' value='A.Laporte' />
                <alias key='&quot;Ayoze Pérez Gutiérrez&quot;' value='A.Pérez' />
                <alias key='&quot;Barış Alper Yılmaz&quot;' value='B.Yılmaz' />
                <alias key='&quot;Barnabás Varga&quot;' value='B.Varga' />
                <alias key='&quot;Bart Verbruggen&quot;' value='B.Verbruggen' />
                <alias key='&quot;Bartosz Bereszyński&quot;' value='B.Bereszyński' />
                <alias key='&quot;Bartosz Salamon&quot;' value='B.Salamon' />
                <alias key='&quot;Bartosz Slisz&quot;' value='B.Slisz' />
                <alias key='&quot;Bendegúz Bolla&quot;' value='B.Bolla' />
                <alias key='&quot;Benjamin Henrichs&quot;' value='B.Henrichs' />
                <alias key='&quot;Benjamin Šeško&quot;' value='B.Šeško' />
                <alias key='&quot;Benjamin Verbič&quot;' value='B.Verbič' />
                <alias key='&quot;Berat Djimsiti&quot;' value='B.Djimsiti' />
                <alias key='&quot;Bernardo Mota Veiga de Carvalho e Silva&quot;' value='B.Silva' />
                <alias key='&quot;Billy Gilmour&quot;' value='B.Gilmour' />
                <alias key='&quot;Bogdan Racovițan&quot;' value='B.Racovițan' />
                <alias key='&quot;Borna Sosa&quot;' value='B.Sosa' />
                <alias key='&quot;Bradley Barcola&quot;' value='B.Barcola' />
                <alias key='&quot;Breel-Donald Embolo&quot;' value='B.Embolo' />
                <alias key='&quot;Bruno Miguel Borges Fernandes&quot;' value='B.Fernandes' />
                <alias key='&quot;Bruno Petković&quot;' value='B.Petković' />
                <alias key='&quot;Bryan Cristante&quot;' value='B.Cristante' />
                <alias key='&quot;Budu Zivzivadze&quot;' value='B.Zivzivadze' />
                <alias key='&quot;Bukayo Saka&quot;' value='B.Saka' />
                <alias key='&quot;Callum McGregor&quot;' value='C.McGregor' />
                <alias key='&quot;Callum Styles&quot;' value='C.Styles' />
                <alias key='&quot;Cenk Tosun&quot;' value='C.Tosun' />
                <alias key='&quot;Chris Führich&quot;' value='C.Führich' />
                <alias key='&quot;Christian Dannemann Eriksen&quot;' value='C.Eriksen' />
                <alias key='&quot;Christian Nørgaard&quot;' value='C.Nørgaard' />
                <alias key='&quot;Christoph Baumgartner&quot;' value='C.Baumgartner' />
                <alias key='&quot;Cody Mathès Gakpo&quot;' value='C.Gakpo' />
                <alias key='&quot;Cole Palmer&quot;' value='C.Palmer' />
                <alias key='&quot;Conor Gallagher&quot;' value='C.Gallagher' />
                <alias key='&quot;Cristiano Ronaldo dos Santos Aveiro&quot;' value='Cristiano Ronaldo' />
                <alias key='&quot;Daniel Carvajal Ramos&quot;' value='D.Carvajal' />
                <alias key='&quot;Dániel Gazdag&quot;' value='D.Gazdag' />
                <alias key='&quot;Daniel Olmo Carvajal&quot;' value='D.Olmo' />
                <alias key='&quot;Daniel Vivian Moreno&quot;' value='D.Vivian' />
                <alias key='&quot;Danilo Luís Hélio Pereira&quot;' value='Danilo Pereira' />
                <alias key='&quot;Darius Dumitru Olaru&quot;' value='D.Olaru' />
                <alias key='&quot;David Doudera&quot;' value='D.Doudera' />
                <alias key='&quot;Dávid Ďuriš&quot;' value='D.Ďuriš' />
                <alias key='&quot;Dávid Hancko&quot;' value='D.Hancko' />
                <alias key='&quot;David Jurásek&quot;' value='D.Jurásek' />
                <alias key='&quot;David Raum&quot;' value='D.Raum' />
                <alias key='&quot;David Raya Martin&quot;' value='David Raya' />
                <alias key='&quot;David Strelec&quot;' value='D.Strelec' />
                <alias key='&quot;Davide Frattesi&quot;' value='D.Frattesi' />
                <alias key='&quot;Dayotchanculle Upamecano&quot;' value='D.Upamecano' />
                <alias key='&quot;Declan Rice&quot;' value='D.Rice' />
                <alias key='&quot;Deian Cristian Sorescu&quot;' value='D.Sorescu' />
                <alias key='&quot;Denis Alibec&quot;' value='D.Alibec' />
                <alias key='&quot;Denis Lemi Zakaria Lako Lado&quot;' value='Zakaria' />
                <alias key='&quot;Denis Mihai Drăguş&quot;' value='D.Drăguş' />
                <alias key='&quot;Denis Vavro&quot;' value='D.Vavro' />
                <alias key='&quot;Deniz Undav&quot;' value='D.Undav' />
                <alias key='&quot;Dennis Man&quot;' value='D.Man' />
                <alias key='&quot;Denzel Dumfries&quot;' value='D.Dumfries' />
                <alias key='&quot;Diogo José Teixeira da Silva&quot;' value='Diogo Jota' />
                <alias key='&quot;Diogo Meireles Costa&quot;' value='Diogo Costa' />
                <alias key='&quot;Dodi Lukebakio&quot;' value='D.Lukebakio' />
                <alias key='&quot;Dominik Livaković&quot;' value='D.Livaković' />
                <alias key='&quot;Dominik Szoboszlai&quot;' value='D.Szoboszlai' />
                <alias key='&quot;Donyell Malen&quot;' value='D.Malen' />
                <alias key='&quot;Dušan Tadić&quot;' value='D.Tadić' />
                <alias key='&quot;Dušan Vlahović&quot;' value='D.Vlahović' />
                <alias key='&quot;Eberechi Eze&quot;' value='E.Eze' />
                <alias key='&quot;Eduardo Camavinga&quot;' value='E.Camavinga' />
                <alias key='&quot;Elseid Hysaj&quot;' value='E.Hysaj' />
                <alias key='&quot;Emre Can&quot;' value='E.Can' />
                <alias key='&quot;Endre Botka&quot;' value='E.Botka' />
                <alias key='&quot;Erik Janža&quot;' value='E.Janža' />
                <alias key='&quot;Ernest Muçi&quot;' value='E.Muçi' />
                <alias key='&quot;Ezri Konsa Ngoyo&quot;' value='E.Konsa' />
                <alias key='&quot;Fabian Lukas Schär&quot;' value='F.Schär' />
                <alias key='&quot;Fabian Rieder&quot;' value='F.Rieder' />
                <alias key='&quot;Fabián Ruiz Peña&quot;' value='Fabián Ruiz' />
                <alias key='&quot;Federico Chiesa&quot;' value='F.Chiesa' />
                <alias key='&quot;Federico Dimarco&quot;' value='F.Dimarco' />
                <alias key='&quot;Fehmi Mert Günok&quot;' value='F.Günok' />
                <alias key='&quot;Ferdi Erenay Kadıoğlu&quot;' value='Kadıoğlu' />
                <alias key='&quot;Fermin Lopez Marin&quot;' value='F.Lopez' />
                <alias key='&quot;Ferrán Torres García&quot;' value='F.Torres' />
                <alias key='&quot;Filip Kostić&quot;' value='F.Kostić' />
                <alias key='&quot;Filip Mladenović&quot;' value='F.Mladenović' />
                <alias key='&quot;Florian Grillitsch&quot;' value='F.Grillitsch' />
                <alias key='&quot;Florian Wirtz&quot;' value='F.Wirtz' />
                <alias key='&quot;Florin Constantin Niţă&quot;' value='F.Niţă' />
                <alias key='&quot;Florinel Teodor Coman&quot;' value='F.Coman' />
                <alias key='&quot;Francisco Fernandes Conceição&quot;' value='F.Conceição' />
                <alias key='&quot;George Alexandru Puşcaş&quot;' value='G.Puşcaş' />
                <alias key='&quot;Georges Mikautadze&quot;' value='G.Mikautadze' />
                <alias key='&quot;Georginio Wijnaldum&quot;' value='G.Wijnaldum' />
                <alias key='&quot;Georgiy Sudakov&quot;' value='G.Sudakov' />
                <alias key='&quot;Gernot Trauner&quot;' value='G.Trauner' />
                <alias key='&quot;Giacomo Raspadori&quot;' value='G.Raspadori' />
                <alias key='&quot;Gianluca Mancini&quot;' value='G.Mancini' />
                <alias key='&quot;Gianluca Scamacca&quot;' value='G.Scamacca' />
                <alias key='&quot;Gianluigi Donnarumma&quot;' value='G.Donnarumma' />
                <alias key='&quot;Giorgi Chakvetadze&quot;' value='G.Chakvetadze' />
                <alias key='&quot;Giorgi Gvelesiani&quot;' value='G.Gvelesiani' />
                <alias key='&quot;Giorgi Kochorashvili&quot;' value='G.Kochorashvili' />
                <alias key='&quot;Giorgi Kvilitaia&quot;' value='G.Kvilitaia' />
                <alias key='&quot;Giorgi Mamardashvili&quot;' value='G.Mamardashvili' />
                <alias key='&quot;Giovanni Di Lorenzo&quot;' value='Di Lorenzo' />
                <alias key='&quot;Gonçalo Bernardo Inácio&quot;' value='G.Inácio' />
                <alias key='&quot;Gonçalo Matias Ramos&quot;' value='G.Ramos' />
                <alias key='&quot;Granit Xhaka&quot;' value='G.Xhaka' />
                <alias key='&quot;Grant Campbell Hanley&quot;' value='G.Hanley' />
                <alias key='&quot;Guram Kashia&quot;' value='G.Kashia' />
                <alias key='&quot;Hakan Çalhanoğlu&quot;' value='H.Çalhanoğlu' />
                <alias key='&quot;Heorhii Tsitaishvili&quot;' value='H.Tsitaishvili' />
                <alias key='&quot;Ianis Hagi&quot;' value='I.Hagi' />
                <alias key='&quot;Ikoma Loïs Openda&quot;' value='Openda' />
                <alias key='&quot;İlkay Gündoğan&quot;' value='İ.Gündoğan' />
                <alias key='&quot;Illia Zabarnyi&quot;' value='I.Zabarnyi' />
                <alias key='&quot;İsmail Yüksek&quot;' value='İ.Yüksek' />
                <alias key='&quot;Iván Balliu Campeny&quot;' value='I.Campeny' />
                <alias key='&quot;Ivan Ilić&quot;' value='I.Ilić' />
                <alias key='&quot;Ivan Perišić&quot;' value='I.Perišić' />
                <alias key='&quot;Ivan Schranz&quot;' value='I.Schranz' />
                <alias key='&quot;Ivan Toney&quot;' value='I.Toney' />
                <alias key='&quot;Jack Hendry&quot;' value='J.Hendry' />
                <alias key='&quot;Jacob Bruun Larsen&quot;' value='J.Larsen' />
                <alias key='&quot;Jaka Bijol&quot;' value='J.Bijol' />
                <alias key='&quot;Jakub Moder&quot;' value='J.Moder' />
                <alias key='&quot;Jakub Piotr Kiwior&quot;' value='J.Kiwior' />
                <alias key='&quot;Jakub Piotrowski&quot;' value='J.Piotrowski' />
                <alias key='&quot;Jamal Musiala&quot;' value='J.Musiala' />
                <alias key='&quot;Jan Bednarek&quot;' value='J.Bednarek' />
                <alias key='&quot;Jan Kuchta&quot;' value='J.Kuchta' />
                <alias key='&quot;Jan Mlakar&quot;' value='J.Mlakar' />
                <alias key='&quot;Jan Oblak&quot;' value='J.Oblak' />
                <alias key='&quot;Jan Vertonghen&quot;' value='J.Vertonghen' />
                <alias key='&quot;Jannik Vestergaard&quot;' value='J.Vestergaard' />
                <alias key='&quot;Jarrod Bowen&quot;' value='J.Bowen' />
                <alias key='&quot;Jasir Asani&quot;' value='J.Asani' />
                <alias key='&quot;Jerdy Schouten&quot;' value='J.Schouten' />
                <alias key='&quot;Jeremie Frimpong&quot;' value='J.Frimpong' />
                <alias key='&quot;Jeremy Doku&quot;' value='J.Doku' />
                <alias key='&quot;Jesús Navas González&quot;' value='J.Navas' />
                <alias key='&quot;Jindřich Staněk&quot;' value='J.Staněk' />
                <alias key='&quot;Joachim Andersen&quot;' value='J.Andersen' />
                <alias key='&quot;Joakim Mæhle&quot;' value='J.Mæhle' />
                <alias key='&quot;João Félix Sequeira&quot;' value='João Félix' />
                <alias key='&quot;João Maria Lobo Alves Palhinha Gonçalves&quot;' value='Palhinha' />
                <alias key='&quot;João Pedro Cavaco Cancelo&quot;' value='J.Cancelo' />
                <alias key='&quot;Joey Veerman&quot;' value='J.Veerman' />
                <alias key='&quot;Johan Bakayoko&quot;' value='J.Bakayoko' />
                <alias key='&quot;John McGinn&quot;' value='J.McGinn' />
                <alias key='&quot;John Stones&quot;' value='J.Stones' />
                <alias key='&quot;Jon Gorenc Stankovič&quot;' value='J.Stankovič' />
                <alias key='&quot;Jonas Older Wind&quot;' value='J.Wind' />
                <alias key='&quot;Jonathan Tah&quot;' value='J.Tah' />
                <alias key='&quot;Jordan Pickford&quot;' value='J.Pickford' />
                <alias key='&quot;Jorge Luiz Frello Filho&quot;' value='Jorginho' />
                <alias key='&quot;José Diogo Dalot Teixeira&quot;' value='D.Dalot' />
                <alias key='&quot;José Ignacio Fernández Iglesias&quot;' value='Nacho' />
                <alias key='&quot;José Luis Sanmartín Mato&quot;' value='Joselu' />
                <alias key='&quot;Joshua Kimmich&quot;' value='J.Kimmich' />
                <alias key='&quot;Joshua Zirkzee&quot;' value='J.Zirkzee' />
                <alias key='&quot;Josip Iličić&quot;' value='J.Iličić' />
                <alias key='&quot;Josip Juranović&quot;' value='J.Juranović' />
                <alias key='&quot;Josip Stanišić&quot;' value='J.Stanišić' />
                <alias key='&quot;Josip Šutalo&quot;' value='J.Šutalo' />
                <alias key='&quot;Joško Gvardiol&quot;' value='J.Gvardiol' />
                <alias key='&quot;Jude Bellingham&quot;' value='J.Bellingham' />
                <alias key='&quot;Jules Koundé&quot;' value='J.Koundé' />
                <alias key='&quot;Juraj Kucka&quot;' value='J.Kucka' />
                <alias key='&quot;Jure Balkovec&quot;' value='J.Balkovec' />
                <alias key='&quot;Kaan Ayhan&quot;' value='K.Ayhan' />
                <alias key='&quot;Kacper Urbanski&quot;' value='K.Urbanski' />
                <alias key='&quot;Kai Havertz&quot;' value='K.Havertz' />
                <alias key='&quot;Kamil Grosicki&quot;' value='K.Grosicki' />
                <alias key='&quot;Karol Świderski&quot;' value='K.Świderski' />
                <alias key='&quot;Kasper Dolberg&quot;' value='K.Dolberg' />
                <alias key='&quot;Kasper Schmeichel&quot;' value='K.Schmeichel' />
                <alias key='&quot;Kenan Yildiz&quot;' value='K.Yildiz' />
                <alias key='&quot;Kenneth McLean&quot;' value='K.McLean' />
                <alias key='&quot;Kevin Csoboth&quot;' value='K.Csoboth' />
                <alias key='&quot;Kevin Danso&quot;' value='K.Danso' />
                <alias key='&quot;Kevin De Bruyne&quot;' value='K.De Bruyne' />
                <alias key='&quot;Khvicha Kvaratskhelia&quot;' value='K.Kvaratskhelia' />
                <alias key='&quot;Kieran Tierney&quot;' value='K.Tierney' />
                <alias key='&quot;Kieran Trippier&quot;' value='K.Trippier' />
                <alias key='&quot;Kingsley Coman&quot;' value='K.Coman' />
                <alias key='&quot;Klaus Gjasula&quot;' value='K.Gjasula' />
                <alias key='&quot;Kléper Laveran Lima Ferreira&quot;' value='Pepe' />
                <alias key='&quot;Kobbie Mainoo&quot;' value='K.Mainoo' />
                <alias key='&quot;Koen Casteels&quot;' value='K.Casteels' />
                <alias key='&quot;Konrad Laimer&quot;' value='K.Laimer' />
                <alias key='&quot;Kristjan Asllani&quot;' value='K.Asllani' />
                <alias key='&quot;Krzysztof Piątek&quot;' value='K.Piątek' />
                <alias key='&quot;Kwadwo Duah&quot;' value='K.Duah' />
                <alias key='&quot;Kyle Walker&quot;' value='K.Walker' />
                <alias key='&quot;Kylian Mbappé Lottin&quot;' value='K.Mbappé' />
                <alias key='&quot;Ladislav Krejčí&quot;' value='L.Krejčí' />
                <alias key='&quot;Lamine Yamal Nasraoui Ebana&quot;' value='L.Yamal' />
                <alias key='&quot;Lasha Dvali&quot;' value='L.Dvali' />
                <alias key='&quot;László Bénes&quot;' value='L.Bénes' />
                <alias key='&quot;László Kleinheisler&quot;' value='L.Kleinheisler' />
                <alias key='&quot;Lawrence Shankland&quot;' value='L.Shankland' />
                <alias key='&quot;Lazar Samardžić&quot;' value='L.Samardžić' />
                <alias key='&quot;Leandro Trossard&quot;' value='L.Trossard' />
                <alias key='&quot;Leo Sauer&quot;' value='L.Sauer' />
                <alias key='&quot;Leonidas Stergiou&quot;' value='L.Stergiou' />
                <alias key='&quot;Leopold Querfeld&quot;' value='L.Querfeld' />
                <alias key='&quot;Leroy Sané&quot;' value='L.Sané' />
                <alias key='&quot;Lewis Morgan&quot;' value='L.Morgan' />
                <alias key='&quot;Lorenzo Pellegrini&quot;' value='L.Pellegrini' />
                <alias key='&quot;Lovro Majer&quot;' value='L.Majer' />
                <alias key='&quot;Ľubomír Tupta&quot;' value='Ľ.Tupta' />
                <alias key='&quot;Luka Ivanušec&quot;' value='L.Ivanušec' />
                <alias key='&quot;Luka Jović&quot;' value='L.Jović' />
                <alias key='&quot;Luka Lochoshvili&quot;' value='L.Lochoshvili' />
                <alias key='&quot;Luka Modrić&quot;' value='L.Modrić' />
                <alias key='&quot;Luka Sučić&quot;' value='L.Sučić' />
                <alias key='&quot;Lukáš Haraslín&quot;' value='L.Haraslín' />
                <alias key='&quot;Lukáš Provod&quot;' value='L.Provod' />
                <alias key='&quot;Łukasz Skorupski&quot;' value='Ł.Skorupski' />
                <alias key='&quot;Luke Shaw&quot;' value='L.Shaw' />
                <alias key='&quot;Lutsharel Geertruida&quot;' value='L.Geertruida' />
                <alias key='&quot;Maksym Talovierov&quot;' value='M.Talovierov' />
                <alias key='&quot;Manuel Neuer&quot;' value='M.Neuer' />
                <alias key='&quot;Manuel Obafemi Akanji&quot;' value='M.Akanji' />
                <alias key='&quot;Marc Cucurella Saseta&quot;' value='M.Cucurella' />
                <alias key='&quot;Marc Guehi&quot;' value='M.Guehi' />
                <alias key='&quot;Marcel Sabitzer&quot;' value='M.Sabitzer' />
                <alias key='&quot;Marcelo Brozović&quot;' value='M.Brozović' />
                <alias key='&quot;Marcus Thuram&quot;' value='M.Thuram' />
                <alias key='&quot;Marin Pongracic&quot;' value='M.Pongracic' />
                <alias key='&quot;Mario Mitaj&quot;' value='M.Mitaj' />
                <alias key='&quot;Mario Pašalić&quot;' value='M.Pašalić' />
                <alias key='&quot;Marius Mihai Marin&quot;' value='M.Marin' />
                <alias key='&quot;Marko Arnautović&quot;' value='M.Arnautović' />
                <alias key='&quot;Martin Ádám&quot;' value='M.Ádám' />
                <alias key='&quot;Martin Baturina&quot;' value='M.Baturina' />
                <alias key='&quot;Martin Dúbravka&quot;' value='M.Dúbravka' />
                <alias key='&quot;Martín Zubimendi Ibáñez&quot;' value='M.Zubimendi' />
                <alias key='&quot;Márton Dárdai&quot;' value='M.Dárdai' />
                <alias key='&quot;Matěj Jurásek&quot;' value='M.Jurásek' />
                <alias key='&quot;Matěj Kovář&quot;' value='M.Kovář' />
                <alias key='&quot;Mateo Kovačić&quot;' value='M.Kovačić' />
                <alias key='&quot;Mateo Retegui&quot;' value='M.Retegui' />
                <alias key='&quot;Matheus Luiz Nunes&quot;' value='M.Nunes' />
                <alias key='&quot;Matteo Darmian&quot;' value='M.Darmian' />
                <alias key='&quot;Mattia Zaccagni&quot;' value='M.Zaccagni' />
                <alias key='&quot;Matúš Bero&quot;' value='M.Bero' />
                <alias key='&quot;Maximilian Beier&quot;' value='M.Beier' />
                <alias key='&quot;Maximilian Mittelstädt&quot;' value='M.Mittelstädt' />
                <alias key='&quot;Maximilian Wöber&quot;' value='M.Wöber' />
                <alias key='&quot;Medon Berisha&quot;' value='M.Berisha' />
                <alias key='&quot;Mehmet Zeki Çelik&quot;' value='M.Çelik' />
                <alias key='&quot;Memphis Depay&quot;' value='M.Depay' />
                <alias key='&quot;Merih Demiral&quot;' value='M.Demiral' />
                <alias key='&quot;Mert Müldür&quot;' value='M.Müldür' />
                <alias key='&quot;Michael Gregoritsch&quot;' value='M.Gregoritsch' />
                <alias key='&quot;Michael Ijemuan Folorunsho&quot;' value='M.Folorunsho' />
                <alias key='&quot;Michał Skóraś&quot;' value='M.Skóraś' />
                <alias key='&quot;Michel Aebischer&quot;' value='M.Aebischer' />
                <alias key='&quot;Micky van de Ven&quot;' value='M.van de Ven' />
                <alias key='&quot;Mijat Gaćinović&quot;' value='M.Gaćinović' />
                <alias key='&quot;Mike Maignan&quot;' value='M.Maignan' />
                <alias key='&quot;Mikel Merino Zazón&quot;' value='M.Merino' />
                <alias key='&quot;Mikel Oyarzabal Ugarte&quot;' value='M.Oyarzabal' />
                <alias key='&quot;Mikkel Damsgaard&quot;' value='M.Damsgaard' />
                <alias key='&quot;Milan Škriniar&quot;' value='M.Škriniar' />
                <alias key='&quot;Milos Kerkez&quot;' value='M.Kerkez' />
                <alias key='&quot;Milos Veljkovic&quot;' value='M.Veljkovic' />
                <alias key='&quot;Mirlind Daku&quot;' value='M.Daku' />
                <alias key='&quot;Mohamed Zeki Amdouni&quot;' value='M.Amdouni' />
                <alias key='&quot;Mojmír Chytil&quot;' value='M.Chytil' />
                <alias key='&quot;Morten Hjulmand&quot;' value='M.Hjulmand' />
                <alias key='&quot;Muhammed Kerem Aktürkoğlu&quot;' value='M.Aktürkoğlu' />
                <alias key='&quot;Mykhailo Mudryk&quot;' value='M.Mudryk' />
                <alias key='&quot;Mykola Matvienko&quot;' value='M.Matvienko' />
                <alias key='&quot;Mykola Shaparenko&quot;' value='M.Shaparenko' />
                <alias key='&quot;N&apos;Golo Kanté&quot;' value='N.Kanté' />
                <alias key='&quot;Nathan Aké&quot;' value='N.Aké' />
                <alias key='&quot;Nedim Bajrami&quot;' value='N.Bajrami' />
                <alias key='&quot;Nélson Cabral Semedo&quot;' value='N.Semedo' />
                <alias key='&quot;Nemanja Gudelj&quot;' value='N.Gudelj' />
                <alias key='&quot;Nicholas Williams Arthuer&quot;' value='N.Williams' />
                <alias key='&quot;Niclas Füllkrug&quot;' value='N.Füllkrug' />
                <alias key='&quot;Nico Schlotterbeck&quot;' value='N.Schlotterbeck' />
                <alias key='&quot;Nicola Zalewski&quot;' value='N.Zalewski' />
                <alias key='&quot;Nicolae Claudiu Stanciu&quot;' value='N.Stanciu' />
                <alias key='&quot;Nicolas Seiwald&quot;' value='N.Seiwald' />
                <alias key='&quot;Nicolò Barella&quot;' value='N.Barella' />
                <alias key='&quot;Nicolò Fagioli&quot;' value='N.Fagioli' />
                <alias key='&quot;Nicușor Silviu Bancu&quot;' value='N.Bancu' />
                <alias key='&quot;Nika Kvekveskiri&quot;' value='N.Kvekveskiri' />
                <alias key='&quot;Nikola Milenković&quot;' value='N.Milenković' />
                <alias key='&quot;Norbert Gyömbér&quot;' value='N.Gyömbér' />
                <alias key='&quot;Nuno Mendes&quot;' value='N.Mendes' />
                <alias key='&quot;Okay Yokuşlu&quot;' value='O.Yokuşlu' />
                <alias key='&quot;Oleksandr Svatok&quot;' value='O.Svatok' />
                <alias key='&quot;Oleksandr Tymchyk&quot;' value='O.Tymchyk' />
                <alias key='&quot;Oleksandr Zinchenko&quot;' value='O.Zinchenko' />
                <alias key='&quot;Oleksandr Zubkov&quot;' value='O.Zubkov' />
                <alias key='&quot;Olivier Giroud&quot;' value='O.Giroud' />
                <alias key='&quot;Ollie Watkins&quot;' value='O.Watkins' />
                <alias key='&quot;Ondrej Duda&quot;' value='O.Duda' />
                <alias key='&quot;Ondřej Lingr&quot;' value='O.Lingr' />
                <alias key='&quot;Orel Mangala&quot;' value='O.Mangala' />
                <alias key='&quot;Orkun Kökçü&quot;' value='O.Kökçü' />
                <alias key='&quot;Otar Kakabadze&quot;' value='O.Kakabadze' />
                <alias key='&quot;Otar Kiteishvili&quot;' value='O.Kiteishvili' />
                <alias key='&quot;Ousmane Dembélé&quot;' value='O.Dembélé' />
                <alias key='&quot;Pascal Groß&quot;' value='P.Groß' />
                <alias key='&quot;Patrick Pentz&quot;' value='P.Pentz' />
                <alias key='&quot;Patrick Wimmer&quot;' value='P.Wimmer' />
                <alias key='&quot;Patrik Schick&quot;' value='P.Schick' />
                <alias key='&quot;Pavel Šulc&quot;' value='P.Šulc' />
                <alias key='&quot;Paweł Dawidowicz&quot;' value='P.Dawidowicz' />
                <alias key='&quot;Pedro González López&quot;' value='Pedri' />
                <alias key='&quot;Pedro Lomba Neto&quot;' value='P.Neto' />
                <alias key='&quot;Petar Stojanović&quot;' value='P.Stojanović' />
                <alias key='&quot;Péter Gulácsi&quot;' value='P.Gulácsi' />
                <alias key='&quot;Peter Pekarík&quot;' value='P.Pekarík' />
                <alias key='&quot;Petr Ševčík&quot;' value='P.Ševčík' />
                <alias key='&quot;Phil Foden&quot;' value='P.Foden' />
                <alias key='&quot;Philipp Lienhart&quot;' value='P.Lienhart' />
                <alias key='&quot;Philipp Mwene&quot;' value='P.Mwene' />
                <alias key='&quot;Pierre-Emile Højbjerg&quot;' value='P.Højbjerg' />
                <alias key='&quot;Piotr Zieliński&quot;' value='P.Zieliński' />
                <alias key='&quot;Predrag Rajković&quot;' value='P.Rajković' />
                <alias key='&quot;Przemysław Frankowski&quot;' value='P.Frankowski' />
                <alias key='&quot;Qazim Laçi&quot;' value='Q.Laçi' />
                <alias key='&quot;Radu Drăgușin&quot;' value='R.Drăgușin' />
                <alias key='&quot;Rafael Alexandre Conceição Leão&quot;' value='R.Leão' />
                <alias key='&quot;Randal Kolo Muani&quot;' value='K.Muani' />
                <alias key='&quot;Rasmus Winther Højlund&quot;' value='R.Højlund' />
                <alias key='&quot;Răzvan Gabriel Marin&quot;' value='R.Marin' />
                <alias key='&quot;Remo Freuler&quot;' value='R.Freuler' />
                <alias key='&quot;Renato Steffen&quot;' value='R.Steffen' />
                <alias key='&quot;Rey Manaj&quot;' value='R.Manaj' />
                <alias key='&quot;Ricardo Iván Rodríguez Araya&quot;' value='R.Rodríguez' />
                <alias key='&quot;Riccardo Calafiori&quot;' value='R.Calafiori' />
                <alias key='&quot;Robert Andrich&quot;' value='R.Andrich' />
                <alias key='&quot;Róbert Boženík&quot;' value='R.Boženík' />
                <alias key='&quot;Robert Lewandowski&quot;' value='R.Lewandowski' />
                <alias key='&quot;Robin Aime Robert Le Normand&quot;' value='Le Normand' />
                <alias key='&quot;Robin Hranáč&quot;' value='R.Hranáč' />
                <alias key='&quot;Rodrigo Hernández Cascante&quot;' value='Rodri' />
                <alias key='&quot;Roland Sallai&quot;' value='R.Sallai' />
                <alias key='&quot;Roman Yaremchuk&quot;' value='R.Yaremchuk' />
                <alias key='&quot;Romano Schmid&quot;' value='R.Schmid' />
                <alias key='&quot;Romelu Lukaku Menama&quot;' value='R.Lukaku' />
                <alias key='&quot;Rúben Diogo Da Silva Neves&quot;' value='R.Neves' />
                <alias key='&quot;Rúben Santos Gato Alves Dias&quot;' value='R.Dias' />
                <alias key='&quot;Ruben Vargas&quot;' value='R.Vargas' />
                <alias key='&quot;Ruslan Malinovskiy&quot;' value='R.Malinovskiy' />
                <alias key='&quot;Ryan Christie&quot;' value='R.Christie' />
                <alias key='&quot;Ryan Porteous&quot;' value='R.Porteous' />
                <alias key='&quot;Saba Lobzhanidze&quot;' value='S.Lobzhanidze' />
                <alias key='&quot;Salih Özcan&quot;' value='S.Özcan' />
                <alias key='&quot;Samet Akaydin&quot;' value='S.Akaydin' />
                <alias key='&quot;Sandro Altunashvili&quot;' value='S.Altunashvili' />
                <alias key='&quot;Saša Lukić&quot;' value='S.Lukić' />
                <alias key='&quot;Scott McKenna&quot;' value='S.McKenna' />
                <alias key='&quot;Scott McTominay&quot;' value='S.McTominay' />
                <alias key='&quot;Sebastian Szymański&quot;' value='S.Szymański' />
                <alias key='&quot;Semih Kılıçsoy&quot;' value='S.Kılıçsoy' />
                <alias key='&quot;Sergej Milinković-Savić&quot;' value='Milinković-Savić' />
                <alias key='&quot;Serhii Sydorchuk&quot;' value='S.Sydorchuk' />
                <alias key='&quot;Silvan Widmer&quot;' value='S.Widmer' />
                <alias key='&quot;Solomon Kverkvelia&quot;' value='S.Kverkvelia' />
                <alias key='&quot;Srđan Mijailović&quot;' value='S.Mijailović' />
                <alias key='&quot;Stanislav Lobotka&quot;' value='S.Lobotka' />
                <alias key='&quot;Stefan de Vrij&quot;' value='S.de Vrij' />
                <alias key='&quot;Stefan Posch&quot;' value='S.Posch' />
                <alias key='&quot;Stephan El Shaarawy&quot;' value='S.El Shaarawy' />
                <alias key='&quot;Steven Bergwijn&quot;' value='S.Bergwijn' />
                <alias key='&quot;Steven Zuber&quot;' value='S.Zuber' />
                <alias key='&quot;Strahinja Pavlović&quot;' value='S.Pavlović' />
                <alias key='&quot;Stuart Armstrong&quot;' value='S.Armstrong' />
                <alias key='&quot;Taras Stepanenko&quot;' value='T.Stepanenko' />
                <alias key='&quot;Taras Wiktorowicz Romanczuk&quot;' value='T.Romanczuk' />
                <alias key='&quot;Taulant Sulejmanov&quot;' value='T.Sulejmanov' />
                <alias key='&quot;Theo Bernard François Hernández&quot;' value='T.Hernández' />
                <alias key='&quot;Thomas Delaney&quot;' value='T.Delaney' />
                <alias key='&quot;Thomas Müller&quot;' value='T.Müller' />
                <alias key='&quot;Thomas Strakosha&quot;' value='T.Strakosha' />
                <alias key='&quot;Tijjani Reijnders&quot;' value='T.Reijnders' />
                <alias key='&quot;Timi Elšnik&quot;' value='T.Elšnik' />
                <alias key='&quot;Timothy Castagne&quot;' value='T.Castagne' />
                <alias key='&quot;Tomáš Chorý&quot;' value='T.Chorý' />
                <alias key='&quot;Tomáš Holeš&quot;' value='T.Holeš' />
                <alias key='&quot;Tomáš Souček&quot;' value='T.Souček' />
                <alias key='&quot;Tomáš Suslov&quot;' value='T.Suslov' />
                <alias key='&quot;Toni Kroos&quot;' value='T.Kroos' />
                <alias key='&quot;Trent Alexander-Arnold&quot;' value='T.Alexander-Arnold' />
                <alias key='&quot;Unai Simón Mendibil&quot;' value='Unai Simón' />
                <alias key='&quot;Václav Černý&quot;' value='V.Černý' />
                <alias key='&quot;Valentin Mihai Mihăilă&quot;' value='V.Mihăilă' />
                <alias key='&quot;Vanja Drkušić&quot;' value='V.Drkušić' />
                <alias key='&quot;Vasile Mogoș&quot;' value='V.Mogoș' />
                <alias key='&quot;Veljko Birmančević&quot;' value='V.Birmančević' />
                <alias key='&quot;Victor Bernth Kristansen&quot;' value='V.Kristansen' />
                <alias key='&quot;Viktor Tsygankov&quot;' value='V.Tsygankov' />
                <alias key='&quot;Vincent Sierro&quot;' value='V.Sierro' />
                <alias key='&quot;Virgil van Dijk&quot;' value='Van Dijk' />
                <alias key='&quot;Vitalii Mykolenko&quot;' value='V.Mykolenko' />
                <alias key='&quot;Vitor Machado Ferreira&quot;' value='Vitinha' />
                <alias key='&quot;Vladimír Coufal&quot;' value='V.Coufal' />
                <alias key='&quot;Vladyslav Vanat&quot;' value='V.Vanat' />
                <alias key='&quot;Volodymyr Brazhko&quot;' value='V.Brazhko' />
                <alias key='&quot;Waldemar Anton&quot;' value='W.Anton' />
                <alias key='&quot;Willi Orban&quot;' value='W.Orban' />
                <alias key='&quot;William Saliba&quot;' value='W.Saliba' />
                <alias key='&quot;Wojciech Szczęsny&quot;' value='W.Szczęsny' />
                <alias key='&quot;Wout Faes&quot;' value='W.Faes' />
                <alias key='&quot;Wout Weghorst&quot;' value='W.Weghorst' />
                <alias key='&quot;Xavi Simons&quot;' value='X.Simons' />
                <alias key='&quot;Xherdan Shaqiri&quot;' value='X.Shaqiri' />
                <alias key='&quot;Yann Sommer&quot;' value='Y.Sommer' />
                <alias key='&quot;Yannick Ferreira Carrasco&quot;' value='Y.Carrasco' />
                <alias key='&quot;Ylber Ramadani&quot;' value='Y.Ramadani' />
                <alias key='&quot;Youri Tielemans&quot;' value='Y.Tielemans' />
                <alias key='&quot;Youssouf Fofana&quot;' value='Y.Fofana' />
                <alias key='&quot;Yukhym Konoplya&quot;' value='Y.Konoplya' />
                <alias key='&quot;Yunus Akgün&quot;' value='Y.Akgün' />
                <alias key='&quot;Yussuf Yurary Poulsen&quot;' value='Y.Poulsen' />
                <alias key='&quot;Yusuf Yazıcı&quot;' value='Y.Yazıcı' />
                <alias key='&quot;Žan Celar&quot;' value='Ž.Celar' />
                <alias key='&quot;Žan Karničnik&quot;' value='Ž.Karničnik' />
                <alias key='&quot;Žan Vipotnik&quot;' value='Ž.Vipotnik' />
                <alias key='&quot;Zeno Debast&quot;' value='Z.Debast' />
                <alias key='&quot;Zsolt Nagy&quot;' value='Z.Nagy' />
                <alias key='&quot;Zuriko Davitashvili&quot;' value='Z.Davitashvili' />
              </aliases>
            </column>
            <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2418714495562670080]' derivation='Sum' name='[sum:Calculation_2418714495562670080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LBP Attempted per90]' derivation='Sum' name='[sum:LBP Attempted per90:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minutes_played]' derivation='Sum' name='[sum:minutes_played:qk]' pivot='key' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Maksym Talovierov&quot;' />
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Michael Ijemuan Folorunsho&quot;' />
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Renato Steffen&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]'>
            <groupfilter function='member' level='[none:position:nk]' member='&quot;Goalkeeper&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:minutes_played:qk]' included-values='in-range'>
            <min>210</min>
          </filter>
          <slices>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:minutes_played:qk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[Exclusions (Player Name,Team Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='font-size' id='refline1' value='6' />
            <format attr='font-size' id='refline0' value='6' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#00000067' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]' />
              <text column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
              <lod column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' z-order='1' />
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]' z-order='2' />
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</run>
                <run fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Book' />
                <format attr='font-size' value='5' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.9502761363983154' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</rows>
        <cols>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</cols>
      </table>
      <simple-id uuid='{F9C83826-4AE1-46E0-8E4C-DE6456C4DF71}' />
    </worksheet>
    <worksheet name='Mid'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold' fontsize='18'>Line-Breaking Passes By Midfielders</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>EURO 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EURO2024_player_LBP' name='federated.1a86w5g0dhintc10j2guu0rcr9kk' />
          </datasources>
          <datasource-dependencies datasource='federated.1a86w5g0dhintc10j2guu0rcr9kk'>
            <column caption='Passes per90' datatype='real' name='[Calculation_2418714495562670080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='90*[Total Passes]/[minutes_played]' />
            </column>
            <column datatype='real' name='[LBP Attempted per90]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Passes]' role='measure' type='quantitative' />
            <column caption='Minutes Played' datatype='integer' name='[minutes_played]' role='measure' type='quantitative' />
            <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Abdülkerim Bardakcı&quot;' value='A.Bardakcı' />
                <alias key='&quot;Adam Buksa&quot;' value='A.Buksa' />
                <alias key='&quot;Adam Gnezda Čerin&quot;' value='A.Čerin' />
                <alias key='&quot;Adam Hložek&quot;' value='A.Hložek' />
                <alias key='&quot;Ádám Lang&quot;' value='Á.Lang' />
                <alias key='&quot;Ádám Nagy&quot;' value='Á.Nagy' />
                <alias key='&quot;Adam Obert&quot;' value='A.Obert' />
                <alias key='&quot;Adrián Rus&quot;' value='A.Rus' />
                <alias key='&quot;Adrien Rabiot&quot;' value='A.Rabiot' />
                <alias key='&quot;Alejandro Baena Rodríguez&quot;' value='Alex Baena' />
                <alias key='&quot;Alejandro Grimaldo García&quot;' value='Grimaldo' />
                <alias key='&quot;Aleksandar Mitrović&quot;' value='A.Mitrović' />
                <alias key='&quot;Alessandro Bastoni&quot;' value='A.Bastoni' />
                <alias key='&quot;Alexander Hartmann Bah&quot;' value='A.Bah' />
                <alias key='&quot;Alexander Prass&quot;' value='A.Prass' />
                <alias key='&quot;Alexandru Cicâldău&quot;' value='A.Cicâldău' />
                <alias key='&quot;Altay Bayındır&quot;' value='A.Bayındır' />
                <alias key='&quot;Álvaro Borja Morata Martín&quot;' value='Á.Morata' />
                <alias key='&quot;Amadou Onana&quot;' value='A.Onana' />
                <alias key='&quot;Anatolii Trubin&quot;' value='A.Trubin' />
                <alias key='&quot;András Schäfer&quot;' value='A.Schäfer' />
                <alias key='&quot;Andraž Šporar&quot;' value='A.Šporar' />
                <alias key='&quot;Andrea Cambiaso&quot;' value='A.Cambiaso' />
                <alias key='&quot;Andreas Christensen&quot;' value='A.Christensen' />
                <alias key='&quot;Andreas Skov Olsen&quot;' value='A.Olsen' />
                <alias key='&quot;Andrei Burcă Andonie&quot;' value='A.Burcă' />
                <alias key='&quot;Andrei Florin Ratiu&quot;' value='A.Ratiu' />
                <alias key='&quot;Andrej Kramarić&quot;' value='A.Kramarić' />
                <alias key='&quot;Andrew Robertson&quot;' value='A.Robertson' />
                <alias key='&quot;Andrija Živković&quot;' value='A.Živković' />
                <alias key='&quot;Andriy Lunin&quot;' value='A.Lunin' />
                <alias key='&quot;Andriy Yarmolenko&quot;' value='A.Yarmolenko' />
                <alias key='&quot;Angus Gunn&quot;' value='A.Gunn' />
                <alias key='&quot;Ante Budimir&quot;' value='A.Budimir' />
                <alias key='&quot;Anthony Gordon&quot;' value='A.Gordon' />
                <alias key='&quot;Anthony Ralston&quot;' value='A.Ralston' />
                <alias key='&quot;Antoine Griezmann&quot;' value='A.Griezmann' />
                <alias key='&quot;Antonín Barák&quot;' value='A.Barák' />
                <alias key='&quot;António João Pereira Albuquerque Tavares Silva&quot;' value='A.Silva' />
                <alias key='&quot;Antonio Rüdiger&quot;' value='A.Rüdiger' />
                <alias key='&quot;Anzor Mekvabishvili&quot;' value='A.Mekvabishvili' />
                <alias key='&quot;Arbër Hoxha&quot;' value='A.Hoxha' />
                <alias key='&quot;Arda Güler&quot;' value='A.Güler' />
                <alias key='&quot;Arlind Afrim Ajeti&quot;' value='A.Ajeti' />
                <alias key='&quot;Armando Broja&quot;' value='A.Broja' />
                <alias key='&quot;Artem Dovbyk&quot;' value='A.Dovbyk' />
                <alias key='&quot;Arthur Theate&quot;' value='A.Theate' />
                <alias key='&quot;Attila Fiola&quot;' value='A.Fiola' />
                <alias key='&quot;Attila Szalai&quot;' value='A.Szalai' />
                <alias key='&quot;Aurélien Djani Tchouaméni&quot;' value='A.Tchouaméni' />
                <alias key='&quot;Aymeric Laporte&quot;' value='A.Laporte' />
                <alias key='&quot;Ayoze Pérez Gutiérrez&quot;' value='A.Pérez' />
                <alias key='&quot;Barış Alper Yılmaz&quot;' value='B.Yılmaz' />
                <alias key='&quot;Barnabás Varga&quot;' value='B.Varga' />
                <alias key='&quot;Bart Verbruggen&quot;' value='B.Verbruggen' />
                <alias key='&quot;Bartosz Bereszyński&quot;' value='B.Bereszyński' />
                <alias key='&quot;Bartosz Salamon&quot;' value='B.Salamon' />
                <alias key='&quot;Bartosz Slisz&quot;' value='B.Slisz' />
                <alias key='&quot;Bendegúz Bolla&quot;' value='B.Bolla' />
                <alias key='&quot;Benjamin Henrichs&quot;' value='B.Henrichs' />
                <alias key='&quot;Benjamin Šeško&quot;' value='B.Šeško' />
                <alias key='&quot;Benjamin Verbič&quot;' value='B.Verbič' />
                <alias key='&quot;Berat Djimsiti&quot;' value='B.Djimsiti' />
                <alias key='&quot;Bernardo Mota Veiga de Carvalho e Silva&quot;' value='B.Silva' />
                <alias key='&quot;Billy Gilmour&quot;' value='B.Gilmour' />
                <alias key='&quot;Bogdan Racovițan&quot;' value='B.Racovițan' />
                <alias key='&quot;Borna Sosa&quot;' value='B.Sosa' />
                <alias key='&quot;Bradley Barcola&quot;' value='B.Barcola' />
                <alias key='&quot;Breel-Donald Embolo&quot;' value='B.Embolo' />
                <alias key='&quot;Bruno Miguel Borges Fernandes&quot;' value='B.Fernandes' />
                <alias key='&quot;Bruno Petković&quot;' value='B.Petković' />
                <alias key='&quot;Bryan Cristante&quot;' value='B.Cristante' />
                <alias key='&quot;Budu Zivzivadze&quot;' value='B.Zivzivadze' />
                <alias key='&quot;Bukayo Saka&quot;' value='B.Saka' />
                <alias key='&quot;Callum McGregor&quot;' value='C.McGregor' />
                <alias key='&quot;Callum Styles&quot;' value='C.Styles' />
                <alias key='&quot;Cenk Tosun&quot;' value='C.Tosun' />
                <alias key='&quot;Chris Führich&quot;' value='C.Führich' />
                <alias key='&quot;Christian Dannemann Eriksen&quot;' value='C.Eriksen' />
                <alias key='&quot;Christian Nørgaard&quot;' value='C.Nørgaard' />
                <alias key='&quot;Christoph Baumgartner&quot;' value='C.Baumgartner' />
                <alias key='&quot;Cody Mathès Gakpo&quot;' value='C.Gakpo' />
                <alias key='&quot;Cole Palmer&quot;' value='C.Palmer' />
                <alias key='&quot;Conor Gallagher&quot;' value='C.Gallagher' />
                <alias key='&quot;Cristiano Ronaldo dos Santos Aveiro&quot;' value='Cristiano Ronaldo' />
                <alias key='&quot;Daniel Carvajal Ramos&quot;' value='D.Carvajal' />
                <alias key='&quot;Dániel Gazdag&quot;' value='D.Gazdag' />
                <alias key='&quot;Daniel Olmo Carvajal&quot;' value='D.Olmo' />
                <alias key='&quot;Daniel Vivian Moreno&quot;' value='D.Vivian' />
                <alias key='&quot;Danilo Luís Hélio Pereira&quot;' value='Danilo Pereira' />
                <alias key='&quot;Darius Dumitru Olaru&quot;' value='D.Olaru' />
                <alias key='&quot;David Doudera&quot;' value='D.Doudera' />
                <alias key='&quot;Dávid Ďuriš&quot;' value='D.Ďuriš' />
                <alias key='&quot;Dávid Hancko&quot;' value='D.Hancko' />
                <alias key='&quot;David Jurásek&quot;' value='D.Jurásek' />
                <alias key='&quot;David Raum&quot;' value='D.Raum' />
                <alias key='&quot;David Raya Martin&quot;' value='David Raya' />
                <alias key='&quot;David Strelec&quot;' value='D.Strelec' />
                <alias key='&quot;Davide Frattesi&quot;' value='D.Frattesi' />
                <alias key='&quot;Dayotchanculle Upamecano&quot;' value='D.Upamecano' />
                <alias key='&quot;Declan Rice&quot;' value='D.Rice' />
                <alias key='&quot;Deian Cristian Sorescu&quot;' value='D.Sorescu' />
                <alias key='&quot;Denis Alibec&quot;' value='D.Alibec' />
                <alias key='&quot;Denis Lemi Zakaria Lako Lado&quot;' value='Zakaria' />
                <alias key='&quot;Denis Mihai Drăguş&quot;' value='D.Drăguş' />
                <alias key='&quot;Denis Vavro&quot;' value='D.Vavro' />
                <alias key='&quot;Deniz Undav&quot;' value='D.Undav' />
                <alias key='&quot;Dennis Man&quot;' value='D.Man' />
                <alias key='&quot;Denzel Dumfries&quot;' value='D.Dumfries' />
                <alias key='&quot;Diogo José Teixeira da Silva&quot;' value='Diogo Jota' />
                <alias key='&quot;Diogo Meireles Costa&quot;' value='Diogo Costa' />
                <alias key='&quot;Dodi Lukebakio&quot;' value='D.Lukebakio' />
                <alias key='&quot;Dominik Livaković&quot;' value='D.Livaković' />
                <alias key='&quot;Dominik Szoboszlai&quot;' value='D.Szoboszlai' />
                <alias key='&quot;Donyell Malen&quot;' value='D.Malen' />
                <alias key='&quot;Dušan Tadić&quot;' value='D.Tadić' />
                <alias key='&quot;Dušan Vlahović&quot;' value='D.Vlahović' />
                <alias key='&quot;Eberechi Eze&quot;' value='E.Eze' />
                <alias key='&quot;Eduardo Camavinga&quot;' value='E.Camavinga' />
                <alias key='&quot;Elseid Hysaj&quot;' value='E.Hysaj' />
                <alias key='&quot;Emre Can&quot;' value='E.Can' />
                <alias key='&quot;Endre Botka&quot;' value='E.Botka' />
                <alias key='&quot;Erik Janža&quot;' value='E.Janža' />
                <alias key='&quot;Ernest Muçi&quot;' value='E.Muçi' />
                <alias key='&quot;Ezri Konsa Ngoyo&quot;' value='E.Konsa' />
                <alias key='&quot;Fabian Lukas Schär&quot;' value='F.Schär' />
                <alias key='&quot;Fabian Rieder&quot;' value='F.Rieder' />
                <alias key='&quot;Fabián Ruiz Peña&quot;' value='Fabián Ruiz' />
                <alias key='&quot;Federico Chiesa&quot;' value='F.Chiesa' />
                <alias key='&quot;Federico Dimarco&quot;' value='F.Dimarco' />
                <alias key='&quot;Fehmi Mert Günok&quot;' value='F.Günok' />
                <alias key='&quot;Ferdi Erenay Kadıoğlu&quot;' value='Kadıoğlu' />
                <alias key='&quot;Fermin Lopez Marin&quot;' value='F.Lopez' />
                <alias key='&quot;Ferrán Torres García&quot;' value='F.Torres' />
                <alias key='&quot;Filip Kostić&quot;' value='F.Kostić' />
                <alias key='&quot;Filip Mladenović&quot;' value='F.Mladenović' />
                <alias key='&quot;Florian Grillitsch&quot;' value='F.Grillitsch' />
                <alias key='&quot;Florian Wirtz&quot;' value='F.Wirtz' />
                <alias key='&quot;Florin Constantin Niţă&quot;' value='F.Niţă' />
                <alias key='&quot;Florinel Teodor Coman&quot;' value='F.Coman' />
                <alias key='&quot;Francisco Fernandes Conceição&quot;' value='F.Conceição' />
                <alias key='&quot;George Alexandru Puşcaş&quot;' value='G.Puşcaş' />
                <alias key='&quot;Georges Mikautadze&quot;' value='G.Mikautadze' />
                <alias key='&quot;Georginio Wijnaldum&quot;' value='G.Wijnaldum' />
                <alias key='&quot;Georgiy Sudakov&quot;' value='G.Sudakov' />
                <alias key='&quot;Gernot Trauner&quot;' value='G.Trauner' />
                <alias key='&quot;Giacomo Raspadori&quot;' value='G.Raspadori' />
                <alias key='&quot;Gianluca Mancini&quot;' value='G.Mancini' />
                <alias key='&quot;Gianluca Scamacca&quot;' value='G.Scamacca' />
                <alias key='&quot;Gianluigi Donnarumma&quot;' value='G.Donnarumma' />
                <alias key='&quot;Giorgi Chakvetadze&quot;' value='G.Chakvetadze' />
                <alias key='&quot;Giorgi Gvelesiani&quot;' value='G.Gvelesiani' />
                <alias key='&quot;Giorgi Kochorashvili&quot;' value='G.Kochorashvili' />
                <alias key='&quot;Giorgi Kvilitaia&quot;' value='G.Kvilitaia' />
                <alias key='&quot;Giorgi Mamardashvili&quot;' value='G.Mamardashvili' />
                <alias key='&quot;Giovanni Di Lorenzo&quot;' value='Di Lorenzo' />
                <alias key='&quot;Gonçalo Bernardo Inácio&quot;' value='G.Inácio' />
                <alias key='&quot;Gonçalo Matias Ramos&quot;' value='G.Ramos' />
                <alias key='&quot;Granit Xhaka&quot;' value='G.Xhaka' />
                <alias key='&quot;Grant Campbell Hanley&quot;' value='G.Hanley' />
                <alias key='&quot;Guram Kashia&quot;' value='G.Kashia' />
                <alias key='&quot;Hakan Çalhanoğlu&quot;' value='H.Çalhanoğlu' />
                <alias key='&quot;Heorhii Tsitaishvili&quot;' value='H.Tsitaishvili' />
                <alias key='&quot;Ianis Hagi&quot;' value='I.Hagi' />
                <alias key='&quot;Ikoma Loïs Openda&quot;' value='Openda' />
                <alias key='&quot;İlkay Gündoğan&quot;' value='İ.Gündoğan' />
                <alias key='&quot;Illia Zabarnyi&quot;' value='I.Zabarnyi' />
                <alias key='&quot;İsmail Yüksek&quot;' value='İ.Yüksek' />
                <alias key='&quot;Iván Balliu Campeny&quot;' value='I.Campeny' />
                <alias key='&quot;Ivan Ilić&quot;' value='I.Ilić' />
                <alias key='&quot;Ivan Perišić&quot;' value='I.Perišić' />
                <alias key='&quot;Ivan Schranz&quot;' value='I.Schranz' />
                <alias key='&quot;Ivan Toney&quot;' value='I.Toney' />
                <alias key='&quot;Jack Hendry&quot;' value='J.Hendry' />
                <alias key='&quot;Jacob Bruun Larsen&quot;' value='J.Larsen' />
                <alias key='&quot;Jaka Bijol&quot;' value='J.Bijol' />
                <alias key='&quot;Jakub Moder&quot;' value='J.Moder' />
                <alias key='&quot;Jakub Piotr Kiwior&quot;' value='J.Kiwior' />
                <alias key='&quot;Jakub Piotrowski&quot;' value='J.Piotrowski' />
                <alias key='&quot;Jamal Musiala&quot;' value='J.Musiala' />
                <alias key='&quot;Jan Bednarek&quot;' value='J.Bednarek' />
                <alias key='&quot;Jan Kuchta&quot;' value='J.Kuchta' />
                <alias key='&quot;Jan Mlakar&quot;' value='J.Mlakar' />
                <alias key='&quot;Jan Oblak&quot;' value='J.Oblak' />
                <alias key='&quot;Jan Vertonghen&quot;' value='J.Vertonghen' />
                <alias key='&quot;Jannik Vestergaard&quot;' value='J.Vestergaard' />
                <alias key='&quot;Jarrod Bowen&quot;' value='J.Bowen' />
                <alias key='&quot;Jasir Asani&quot;' value='J.Asani' />
                <alias key='&quot;Jerdy Schouten&quot;' value='J.Schouten' />
                <alias key='&quot;Jeremie Frimpong&quot;' value='J.Frimpong' />
                <alias key='&quot;Jeremy Doku&quot;' value='J.Doku' />
                <alias key='&quot;Jesús Navas González&quot;' value='J.Navas' />
                <alias key='&quot;Jindřich Staněk&quot;' value='J.Staněk' />
                <alias key='&quot;Joachim Andersen&quot;' value='J.Andersen' />
                <alias key='&quot;Joakim Mæhle&quot;' value='J.Mæhle' />
                <alias key='&quot;João Félix Sequeira&quot;' value='João Félix' />
                <alias key='&quot;João Maria Lobo Alves Palhinha Gonçalves&quot;' value='Palhinha' />
                <alias key='&quot;João Pedro Cavaco Cancelo&quot;' value='J.Cancelo' />
                <alias key='&quot;Joey Veerman&quot;' value='J.Veerman' />
                <alias key='&quot;Johan Bakayoko&quot;' value='J.Bakayoko' />
                <alias key='&quot;John McGinn&quot;' value='J.McGinn' />
                <alias key='&quot;John Stones&quot;' value='J.Stones' />
                <alias key='&quot;Jon Gorenc Stankovič&quot;' value='J.Stankovič' />
                <alias key='&quot;Jonas Older Wind&quot;' value='J.Wind' />
                <alias key='&quot;Jonathan Tah&quot;' value='J.Tah' />
                <alias key='&quot;Jordan Pickford&quot;' value='J.Pickford' />
                <alias key='&quot;Jorge Luiz Frello Filho&quot;' value='Jorginho' />
                <alias key='&quot;José Diogo Dalot Teixeira&quot;' value='D.Dalot' />
                <alias key='&quot;José Ignacio Fernández Iglesias&quot;' value='Nacho' />
                <alias key='&quot;José Luis Sanmartín Mato&quot;' value='Joselu' />
                <alias key='&quot;Joshua Kimmich&quot;' value='J.Kimmich' />
                <alias key='&quot;Joshua Zirkzee&quot;' value='J.Zirkzee' />
                <alias key='&quot;Josip Iličić&quot;' value='J.Iličić' />
                <alias key='&quot;Josip Juranović&quot;' value='J.Juranović' />
                <alias key='&quot;Josip Stanišić&quot;' value='J.Stanišić' />
                <alias key='&quot;Josip Šutalo&quot;' value='J.Šutalo' />
                <alias key='&quot;Joško Gvardiol&quot;' value='J.Gvardiol' />
                <alias key='&quot;Jude Bellingham&quot;' value='J.Bellingham' />
                <alias key='&quot;Jules Koundé&quot;' value='J.Koundé' />
                <alias key='&quot;Juraj Kucka&quot;' value='J.Kucka' />
                <alias key='&quot;Jure Balkovec&quot;' value='J.Balkovec' />
                <alias key='&quot;Kaan Ayhan&quot;' value='K.Ayhan' />
                <alias key='&quot;Kacper Urbanski&quot;' value='K.Urbanski' />
                <alias key='&quot;Kai Havertz&quot;' value='K.Havertz' />
                <alias key='&quot;Kamil Grosicki&quot;' value='K.Grosicki' />
                <alias key='&quot;Karol Świderski&quot;' value='K.Świderski' />
                <alias key='&quot;Kasper Dolberg&quot;' value='K.Dolberg' />
                <alias key='&quot;Kasper Schmeichel&quot;' value='K.Schmeichel' />
                <alias key='&quot;Kenan Yildiz&quot;' value='K.Yildiz' />
                <alias key='&quot;Kenneth McLean&quot;' value='K.McLean' />
                <alias key='&quot;Kevin Csoboth&quot;' value='K.Csoboth' />
                <alias key='&quot;Kevin Danso&quot;' value='K.Danso' />
                <alias key='&quot;Kevin De Bruyne&quot;' value='K.De Bruyne' />
                <alias key='&quot;Khvicha Kvaratskhelia&quot;' value='K.Kvaratskhelia' />
                <alias key='&quot;Kieran Tierney&quot;' value='K.Tierney' />
                <alias key='&quot;Kieran Trippier&quot;' value='K.Trippier' />
                <alias key='&quot;Kingsley Coman&quot;' value='K.Coman' />
                <alias key='&quot;Klaus Gjasula&quot;' value='K.Gjasula' />
                <alias key='&quot;Kléper Laveran Lima Ferreira&quot;' value='Pepe' />
                <alias key='&quot;Kobbie Mainoo&quot;' value='K.Mainoo' />
                <alias key='&quot;Koen Casteels&quot;' value='K.Casteels' />
                <alias key='&quot;Konrad Laimer&quot;' value='K.Laimer' />
                <alias key='&quot;Kristjan Asllani&quot;' value='K.Asllani' />
                <alias key='&quot;Krzysztof Piątek&quot;' value='K.Piątek' />
                <alias key='&quot;Kwadwo Duah&quot;' value='K.Duah' />
                <alias key='&quot;Kyle Walker&quot;' value='K.Walker' />
                <alias key='&quot;Kylian Mbappé Lottin&quot;' value='K.Mbappé' />
                <alias key='&quot;Ladislav Krejčí&quot;' value='L.Krejčí' />
                <alias key='&quot;Lamine Yamal Nasraoui Ebana&quot;' value='L.Yamal' />
                <alias key='&quot;Lasha Dvali&quot;' value='L.Dvali' />
                <alias key='&quot;László Bénes&quot;' value='L.Bénes' />
                <alias key='&quot;László Kleinheisler&quot;' value='L.Kleinheisler' />
                <alias key='&quot;Lawrence Shankland&quot;' value='L.Shankland' />
                <alias key='&quot;Lazar Samardžić&quot;' value='L.Samardžić' />
                <alias key='&quot;Leandro Trossard&quot;' value='L.Trossard' />
                <alias key='&quot;Leo Sauer&quot;' value='L.Sauer' />
                <alias key='&quot;Leonidas Stergiou&quot;' value='L.Stergiou' />
                <alias key='&quot;Leopold Querfeld&quot;' value='L.Querfeld' />
                <alias key='&quot;Leroy Sané&quot;' value='L.Sané' />
                <alias key='&quot;Lewis Morgan&quot;' value='L.Morgan' />
                <alias key='&quot;Lorenzo Pellegrini&quot;' value='L.Pellegrini' />
                <alias key='&quot;Lovro Majer&quot;' value='L.Majer' />
                <alias key='&quot;Ľubomír Tupta&quot;' value='Ľ.Tupta' />
                <alias key='&quot;Luka Ivanušec&quot;' value='L.Ivanušec' />
                <alias key='&quot;Luka Jović&quot;' value='L.Jović' />
                <alias key='&quot;Luka Lochoshvili&quot;' value='L.Lochoshvili' />
                <alias key='&quot;Luka Modrić&quot;' value='L.Modrić' />
                <alias key='&quot;Luka Sučić&quot;' value='L.Sučić' />
                <alias key='&quot;Lukáš Haraslín&quot;' value='L.Haraslín' />
                <alias key='&quot;Lukáš Provod&quot;' value='L.Provod' />
                <alias key='&quot;Łukasz Skorupski&quot;' value='Ł.Skorupski' />
                <alias key='&quot;Luke Shaw&quot;' value='L.Shaw' />
                <alias key='&quot;Lutsharel Geertruida&quot;' value='L.Geertruida' />
                <alias key='&quot;Maksym Talovierov&quot;' value='M.Talovierov' />
                <alias key='&quot;Manuel Neuer&quot;' value='M.Neuer' />
                <alias key='&quot;Manuel Obafemi Akanji&quot;' value='M.Akanji' />
                <alias key='&quot;Marc Cucurella Saseta&quot;' value='M.Cucurella' />
                <alias key='&quot;Marc Guehi&quot;' value='M.Guehi' />
                <alias key='&quot;Marcel Sabitzer&quot;' value='M.Sabitzer' />
                <alias key='&quot;Marcelo Brozović&quot;' value='M.Brozović' />
                <alias key='&quot;Marcus Thuram&quot;' value='M.Thuram' />
                <alias key='&quot;Marin Pongracic&quot;' value='M.Pongracic' />
                <alias key='&quot;Mario Mitaj&quot;' value='M.Mitaj' />
                <alias key='&quot;Mario Pašalić&quot;' value='M.Pašalić' />
                <alias key='&quot;Marius Mihai Marin&quot;' value='M.Marin' />
                <alias key='&quot;Marko Arnautović&quot;' value='M.Arnautović' />
                <alias key='&quot;Martin Ádám&quot;' value='M.Ádám' />
                <alias key='&quot;Martin Baturina&quot;' value='M.Baturina' />
                <alias key='&quot;Martin Dúbravka&quot;' value='M.Dúbravka' />
                <alias key='&quot;Martín Zubimendi Ibáñez&quot;' value='M.Zubimendi' />
                <alias key='&quot;Márton Dárdai&quot;' value='M.Dárdai' />
                <alias key='&quot;Matěj Jurásek&quot;' value='M.Jurásek' />
                <alias key='&quot;Matěj Kovář&quot;' value='M.Kovář' />
                <alias key='&quot;Mateo Kovačić&quot;' value='M.Kovačić' />
                <alias key='&quot;Mateo Retegui&quot;' value='M.Retegui' />
                <alias key='&quot;Matheus Luiz Nunes&quot;' value='M.Nunes' />
                <alias key='&quot;Matteo Darmian&quot;' value='M.Darmian' />
                <alias key='&quot;Mattia Zaccagni&quot;' value='M.Zaccagni' />
                <alias key='&quot;Matúš Bero&quot;' value='M.Bero' />
                <alias key='&quot;Maximilian Beier&quot;' value='M.Beier' />
                <alias key='&quot;Maximilian Mittelstädt&quot;' value='M.Mittelstädt' />
                <alias key='&quot;Maximilian Wöber&quot;' value='M.Wöber' />
                <alias key='&quot;Medon Berisha&quot;' value='M.Berisha' />
                <alias key='&quot;Mehmet Zeki Çelik&quot;' value='M.Çelik' />
                <alias key='&quot;Memphis Depay&quot;' value='M.Depay' />
                <alias key='&quot;Merih Demiral&quot;' value='M.Demiral' />
                <alias key='&quot;Mert Müldür&quot;' value='M.Müldür' />
                <alias key='&quot;Michael Gregoritsch&quot;' value='M.Gregoritsch' />
                <alias key='&quot;Michael Ijemuan Folorunsho&quot;' value='M.Folorunsho' />
                <alias key='&quot;Michał Skóraś&quot;' value='M.Skóraś' />
                <alias key='&quot;Michel Aebischer&quot;' value='M.Aebischer' />
                <alias key='&quot;Micky van de Ven&quot;' value='M.van de Ven' />
                <alias key='&quot;Mijat Gaćinović&quot;' value='M.Gaćinović' />
                <alias key='&quot;Mike Maignan&quot;' value='M.Maignan' />
                <alias key='&quot;Mikel Merino Zazón&quot;' value='M.Merino' />
                <alias key='&quot;Mikel Oyarzabal Ugarte&quot;' value='M.Oyarzabal' />
                <alias key='&quot;Mikkel Damsgaard&quot;' value='M.Damsgaard' />
                <alias key='&quot;Milan Škriniar&quot;' value='M.Škriniar' />
                <alias key='&quot;Milos Kerkez&quot;' value='M.Kerkez' />
                <alias key='&quot;Milos Veljkovic&quot;' value='M.Veljkovic' />
                <alias key='&quot;Mirlind Daku&quot;' value='M.Daku' />
                <alias key='&quot;Mohamed Zeki Amdouni&quot;' value='M.Amdouni' />
                <alias key='&quot;Mojmír Chytil&quot;' value='M.Chytil' />
                <alias key='&quot;Morten Hjulmand&quot;' value='M.Hjulmand' />
                <alias key='&quot;Muhammed Kerem Aktürkoğlu&quot;' value='M.Aktürkoğlu' />
                <alias key='&quot;Mykhailo Mudryk&quot;' value='M.Mudryk' />
                <alias key='&quot;Mykola Matvienko&quot;' value='M.Matvienko' />
                <alias key='&quot;Mykola Shaparenko&quot;' value='M.Shaparenko' />
                <alias key='&quot;N&apos;Golo Kanté&quot;' value='N.Kanté' />
                <alias key='&quot;Nathan Aké&quot;' value='N.Aké' />
                <alias key='&quot;Nedim Bajrami&quot;' value='N.Bajrami' />
                <alias key='&quot;Nélson Cabral Semedo&quot;' value='N.Semedo' />
                <alias key='&quot;Nemanja Gudelj&quot;' value='N.Gudelj' />
                <alias key='&quot;Nicholas Williams Arthuer&quot;' value='N.Williams' />
                <alias key='&quot;Niclas Füllkrug&quot;' value='N.Füllkrug' />
                <alias key='&quot;Nico Schlotterbeck&quot;' value='N.Schlotterbeck' />
                <alias key='&quot;Nicola Zalewski&quot;' value='N.Zalewski' />
                <alias key='&quot;Nicolae Claudiu Stanciu&quot;' value='N.Stanciu' />
                <alias key='&quot;Nicolas Seiwald&quot;' value='N.Seiwald' />
                <alias key='&quot;Nicolò Barella&quot;' value='N.Barella' />
                <alias key='&quot;Nicolò Fagioli&quot;' value='N.Fagioli' />
                <alias key='&quot;Nicușor Silviu Bancu&quot;' value='N.Bancu' />
                <alias key='&quot;Nika Kvekveskiri&quot;' value='N.Kvekveskiri' />
                <alias key='&quot;Nikola Milenković&quot;' value='N.Milenković' />
                <alias key='&quot;Norbert Gyömbér&quot;' value='N.Gyömbér' />
                <alias key='&quot;Nuno Mendes&quot;' value='N.Mendes' />
                <alias key='&quot;Okay Yokuşlu&quot;' value='O.Yokuşlu' />
                <alias key='&quot;Oleksandr Svatok&quot;' value='O.Svatok' />
                <alias key='&quot;Oleksandr Tymchyk&quot;' value='O.Tymchyk' />
                <alias key='&quot;Oleksandr Zinchenko&quot;' value='O.Zinchenko' />
                <alias key='&quot;Oleksandr Zubkov&quot;' value='O.Zubkov' />
                <alias key='&quot;Olivier Giroud&quot;' value='O.Giroud' />
                <alias key='&quot;Ollie Watkins&quot;' value='O.Watkins' />
                <alias key='&quot;Ondrej Duda&quot;' value='O.Duda' />
                <alias key='&quot;Ondřej Lingr&quot;' value='O.Lingr' />
                <alias key='&quot;Orel Mangala&quot;' value='O.Mangala' />
                <alias key='&quot;Orkun Kökçü&quot;' value='O.Kökçü' />
                <alias key='&quot;Otar Kakabadze&quot;' value='O.Kakabadze' />
                <alias key='&quot;Otar Kiteishvili&quot;' value='O.Kiteishvili' />
                <alias key='&quot;Ousmane Dembélé&quot;' value='O.Dembélé' />
                <alias key='&quot;Pascal Groß&quot;' value='P.Groß' />
                <alias key='&quot;Patrick Pentz&quot;' value='P.Pentz' />
                <alias key='&quot;Patrick Wimmer&quot;' value='P.Wimmer' />
                <alias key='&quot;Patrik Schick&quot;' value='P.Schick' />
                <alias key='&quot;Pavel Šulc&quot;' value='P.Šulc' />
                <alias key='&quot;Paweł Dawidowicz&quot;' value='P.Dawidowicz' />
                <alias key='&quot;Pedro González López&quot;' value='Pedri' />
                <alias key='&quot;Pedro Lomba Neto&quot;' value='P.Neto' />
                <alias key='&quot;Petar Stojanović&quot;' value='P.Stojanović' />
                <alias key='&quot;Péter Gulácsi&quot;' value='P.Gulácsi' />
                <alias key='&quot;Peter Pekarík&quot;' value='P.Pekarík' />
                <alias key='&quot;Petr Ševčík&quot;' value='P.Ševčík' />
                <alias key='&quot;Phil Foden&quot;' value='P.Foden' />
                <alias key='&quot;Philipp Lienhart&quot;' value='P.Lienhart' />
                <alias key='&quot;Philipp Mwene&quot;' value='P.Mwene' />
                <alias key='&quot;Pierre-Emile Højbjerg&quot;' value='P.Højbjerg' />
                <alias key='&quot;Piotr Zieliński&quot;' value='P.Zieliński' />
                <alias key='&quot;Predrag Rajković&quot;' value='P.Rajković' />
                <alias key='&quot;Przemysław Frankowski&quot;' value='P.Frankowski' />
                <alias key='&quot;Qazim Laçi&quot;' value='Q.Laçi' />
                <alias key='&quot;Radu Drăgușin&quot;' value='R.Drăgușin' />
                <alias key='&quot;Rafael Alexandre Conceição Leão&quot;' value='R.Leão' />
                <alias key='&quot;Randal Kolo Muani&quot;' value='K.Muani' />
                <alias key='&quot;Rasmus Winther Højlund&quot;' value='R.Højlund' />
                <alias key='&quot;Răzvan Gabriel Marin&quot;' value='R.Marin' />
                <alias key='&quot;Remo Freuler&quot;' value='R.Freuler' />
                <alias key='&quot;Renato Steffen&quot;' value='R.Steffen' />
                <alias key='&quot;Rey Manaj&quot;' value='R.Manaj' />
                <alias key='&quot;Ricardo Iván Rodríguez Araya&quot;' value='R.Rodríguez' />
                <alias key='&quot;Riccardo Calafiori&quot;' value='R.Calafiori' />
                <alias key='&quot;Robert Andrich&quot;' value='R.Andrich' />
                <alias key='&quot;Róbert Boženík&quot;' value='R.Boženík' />
                <alias key='&quot;Robert Lewandowski&quot;' value='R.Lewandowski' />
                <alias key='&quot;Robin Aime Robert Le Normand&quot;' value='Le Normand' />
                <alias key='&quot;Robin Hranáč&quot;' value='R.Hranáč' />
                <alias key='&quot;Rodrigo Hernández Cascante&quot;' value='Rodri' />
                <alias key='&quot;Roland Sallai&quot;' value='R.Sallai' />
                <alias key='&quot;Roman Yaremchuk&quot;' value='R.Yaremchuk' />
                <alias key='&quot;Romano Schmid&quot;' value='R.Schmid' />
                <alias key='&quot;Romelu Lukaku Menama&quot;' value='R.Lukaku' />
                <alias key='&quot;Rúben Diogo Da Silva Neves&quot;' value='R.Neves' />
                <alias key='&quot;Rúben Santos Gato Alves Dias&quot;' value='R.Dias' />
                <alias key='&quot;Ruben Vargas&quot;' value='R.Vargas' />
                <alias key='&quot;Ruslan Malinovskiy&quot;' value='R.Malinovskiy' />
                <alias key='&quot;Ryan Christie&quot;' value='R.Christie' />
                <alias key='&quot;Ryan Porteous&quot;' value='R.Porteous' />
                <alias key='&quot;Saba Lobzhanidze&quot;' value='S.Lobzhanidze' />
                <alias key='&quot;Salih Özcan&quot;' value='S.Özcan' />
                <alias key='&quot;Samet Akaydin&quot;' value='S.Akaydin' />
                <alias key='&quot;Sandro Altunashvili&quot;' value='S.Altunashvili' />
                <alias key='&quot;Saša Lukić&quot;' value='S.Lukić' />
                <alias key='&quot;Scott McKenna&quot;' value='S.McKenna' />
                <alias key='&quot;Scott McTominay&quot;' value='S.McTominay' />
                <alias key='&quot;Sebastian Szymański&quot;' value='S.Szymański' />
                <alias key='&quot;Semih Kılıçsoy&quot;' value='S.Kılıçsoy' />
                <alias key='&quot;Sergej Milinković-Savić&quot;' value='Milinković-Savić' />
                <alias key='&quot;Serhii Sydorchuk&quot;' value='S.Sydorchuk' />
                <alias key='&quot;Silvan Widmer&quot;' value='S.Widmer' />
                <alias key='&quot;Solomon Kverkvelia&quot;' value='S.Kverkvelia' />
                <alias key='&quot;Srđan Mijailović&quot;' value='S.Mijailović' />
                <alias key='&quot;Stanislav Lobotka&quot;' value='S.Lobotka' />
                <alias key='&quot;Stefan de Vrij&quot;' value='S.de Vrij' />
                <alias key='&quot;Stefan Posch&quot;' value='S.Posch' />
                <alias key='&quot;Stephan El Shaarawy&quot;' value='S.El Shaarawy' />
                <alias key='&quot;Steven Bergwijn&quot;' value='S.Bergwijn' />
                <alias key='&quot;Steven Zuber&quot;' value='S.Zuber' />
                <alias key='&quot;Strahinja Pavlović&quot;' value='S.Pavlović' />
                <alias key='&quot;Stuart Armstrong&quot;' value='S.Armstrong' />
                <alias key='&quot;Taras Stepanenko&quot;' value='T.Stepanenko' />
                <alias key='&quot;Taras Wiktorowicz Romanczuk&quot;' value='T.Romanczuk' />
                <alias key='&quot;Taulant Sulejmanov&quot;' value='T.Sulejmanov' />
                <alias key='&quot;Theo Bernard François Hernández&quot;' value='T.Hernández' />
                <alias key='&quot;Thomas Delaney&quot;' value='T.Delaney' />
                <alias key='&quot;Thomas Müller&quot;' value='T.Müller' />
                <alias key='&quot;Thomas Strakosha&quot;' value='T.Strakosha' />
                <alias key='&quot;Tijjani Reijnders&quot;' value='T.Reijnders' />
                <alias key='&quot;Timi Elšnik&quot;' value='T.Elšnik' />
                <alias key='&quot;Timothy Castagne&quot;' value='T.Castagne' />
                <alias key='&quot;Tomáš Chorý&quot;' value='T.Chorý' />
                <alias key='&quot;Tomáš Holeš&quot;' value='T.Holeš' />
                <alias key='&quot;Tomáš Souček&quot;' value='T.Souček' />
                <alias key='&quot;Tomáš Suslov&quot;' value='T.Suslov' />
                <alias key='&quot;Toni Kroos&quot;' value='T.Kroos' />
                <alias key='&quot;Trent Alexander-Arnold&quot;' value='T.Alexander-Arnold' />
                <alias key='&quot;Unai Simón Mendibil&quot;' value='Unai Simón' />
                <alias key='&quot;Václav Černý&quot;' value='V.Černý' />
                <alias key='&quot;Valentin Mihai Mihăilă&quot;' value='V.Mihăilă' />
                <alias key='&quot;Vanja Drkušić&quot;' value='V.Drkušić' />
                <alias key='&quot;Vasile Mogoș&quot;' value='V.Mogoș' />
                <alias key='&quot;Veljko Birmančević&quot;' value='V.Birmančević' />
                <alias key='&quot;Victor Bernth Kristansen&quot;' value='V.Kristansen' />
                <alias key='&quot;Viktor Tsygankov&quot;' value='V.Tsygankov' />
                <alias key='&quot;Vincent Sierro&quot;' value='V.Sierro' />
                <alias key='&quot;Virgil van Dijk&quot;' value='Van Dijk' />
                <alias key='&quot;Vitalii Mykolenko&quot;' value='V.Mykolenko' />
                <alias key='&quot;Vitor Machado Ferreira&quot;' value='Vitinha' />
                <alias key='&quot;Vladimír Coufal&quot;' value='V.Coufal' />
                <alias key='&quot;Vladyslav Vanat&quot;' value='V.Vanat' />
                <alias key='&quot;Volodymyr Brazhko&quot;' value='V.Brazhko' />
                <alias key='&quot;Waldemar Anton&quot;' value='W.Anton' />
                <alias key='&quot;Willi Orban&quot;' value='W.Orban' />
                <alias key='&quot;William Saliba&quot;' value='W.Saliba' />
                <alias key='&quot;Wojciech Szczęsny&quot;' value='W.Szczęsny' />
                <alias key='&quot;Wout Faes&quot;' value='W.Faes' />
                <alias key='&quot;Wout Weghorst&quot;' value='W.Weghorst' />
                <alias key='&quot;Xavi Simons&quot;' value='X.Simons' />
                <alias key='&quot;Xherdan Shaqiri&quot;' value='X.Shaqiri' />
                <alias key='&quot;Yann Sommer&quot;' value='Y.Sommer' />
                <alias key='&quot;Yannick Ferreira Carrasco&quot;' value='Y.Carrasco' />
                <alias key='&quot;Ylber Ramadani&quot;' value='Y.Ramadani' />
                <alias key='&quot;Youri Tielemans&quot;' value='Y.Tielemans' />
                <alias key='&quot;Youssouf Fofana&quot;' value='Y.Fofana' />
                <alias key='&quot;Yukhym Konoplya&quot;' value='Y.Konoplya' />
                <alias key='&quot;Yunus Akgün&quot;' value='Y.Akgün' />
                <alias key='&quot;Yussuf Yurary Poulsen&quot;' value='Y.Poulsen' />
                <alias key='&quot;Yusuf Yazıcı&quot;' value='Y.Yazıcı' />
                <alias key='&quot;Žan Celar&quot;' value='Ž.Celar' />
                <alias key='&quot;Žan Karničnik&quot;' value='Ž.Karničnik' />
                <alias key='&quot;Žan Vipotnik&quot;' value='Ž.Vipotnik' />
                <alias key='&quot;Zeno Debast&quot;' value='Z.Debast' />
                <alias key='&quot;Zsolt Nagy&quot;' value='Z.Nagy' />
                <alias key='&quot;Zuriko Davitashvili&quot;' value='Z.Davitashvili' />
              </aliases>
            </column>
            <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2418714495562670080]' derivation='Sum' name='[sum:Calculation_2418714495562670080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LBP Attempted per90]' derivation='Sum' name='[sum:LBP Attempted per90:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minutes_played]' derivation='Sum' name='[sum:minutes_played:qk]' pivot='key' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Maksym Talovierov&quot;' />
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Michael Ijemuan Folorunsho&quot;' />
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Renato Steffen&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]'>
            <groupfilter function='member' level='[none:position:nk]' member='&quot;Midfield&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:minutes_played:qk]' included-values='in-range'>
            <min>210</min>
          </filter>
          <slices>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:minutes_played:qk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[Exclusions (Player Name,Team Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' field-type='quantitative' max='6.7529385655301954' min='-0.29999999999999999' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]' field-type='quantitative' max='97.620977270463442' min='9.0' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' value='44' />
            <format attr='height' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]' value='40' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='font-size' id='refline1' value='6' />
            <format attr='font-size' id='refline0' value='6' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#00000067' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]' />
              <text column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
              <lod column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' z-order='1' />
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]' z-order='2' />
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</run>
                <run fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Book' />
                <format attr='font-size' value='5' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.9502761363983154' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</rows>
        <cols>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tijjani Reijnders&quot;</value>
                <value>&quot;Netherlands&quot;</value>
                <value>45.362903225806448</value>
                <value>3.6299999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='1' y='10' />
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Roland Sallai&quot;</value>
                <value>&quot;Hungary&quot;</value>
                <value>23.007518796992482</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Scott McTominay&quot;</value>
                <value>&quot;Scotland&quot;</value>
                <value>15.0</value>
                <value>0.33000000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Jan Mlakar&quot;</value>
                <value>&quot;Slovenia&quot;</value>
                <value>16.58703071672355</value>
                <value>0.60999999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Fabian Rieder&quot;</value>
                <value>&quot;Switzerland&quot;</value>
                <value>29.724770642201836</value>
                <value>1.6499999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='-5' y='7' />
          </mark-label>
          <mark-label id='6'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Giorgi Kochorashvili&quot;</value>
                <value>&quot;Georgia&quot;</value>
                <value>40.25</value>
                <value>2.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.714286' y='9' />
          </mark-label>
          <mark-label id='7'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Robert Andrich&quot;</value>
                <value>&quot;Germany&quot;</value>
                <value>56.60377358490566</value>
                <value>2.8300000000000001</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.238095' y='7' />
          </mark-label>
          <mark-label id='8'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bruno Miguel Borges Fernandes&quot;</value>
                <value>&quot;Portugal&quot;</value>
                <value>58.873994638069703</value>
                <value>3.8599999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.380952' y='12' />
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Jude Bellingham&quot;</value>
                <value>&quot;England&quot;</value>
                <value>47.552238805970148</value>
                <value>1.0700000000000001</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.619048' y='-9' />
          </mark-label>
          <mark-label id='10' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ylber Ramadani&quot;</value>
                <value>&quot;Albania&quot;</value>
                <value>31.363636363636363</value>
                <value>0.68000000000000005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Orkun Kökçü&quot;</value>
                <value>&quot;Turkey&quot;</value>
                <value>43.981900452488688</value>
                <value>0.81000000000000005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bernardo Mota Veiga de Carvalho e Silva&quot;</value>
                <value>&quot;Portugal&quot;</value>
                <value>51.0</value>
                <value>0.85999999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='25' y='0.466667' />
          </mark-label>
          <mark-label id='13'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Amadou Onana&quot;</value>
                <value>&quot;Belgium&quot;</value>
                <value>48.75</value>
                <value>2.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='-8' y='-4' />
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mateo Kovačić&quot;</value>
                <value>&quot;Croatia&quot;</value>
                <value>65.784753363228702</value>
                <value>3.6299999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='24' y='0.809524' />
          </mark-label>
          <mark-label id='15'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Aurélien Djani Tchouaméni&quot;</value>
                <value>&quot;France&quot;</value>
                <value>65.872340425531917</value>
                <value>2.8700000000000001</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.47619' y='9' />
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;N&apos;Golo Kanté&quot;</value>
                <value>&quot;France&quot;</value>
                <value>52.485322896281801</value>
                <value>1.5899999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.571429' y='-6' />
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mykola Shaparenko&quot;</value>
                <value>&quot;Ukraine&quot;</value>
                <value>46.621621621621621</value>
                <value>2.4300000000000002</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.52381' y='7' />
          </mark-label>
          <mark-label id='18'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ondrej Duda&quot;</value>
                <value>&quot;Slovakia&quot;</value>
                <value>41.111111111111114</value>
                <value>1.1100000000000001</value>
              </tuple>
            </tuple-reference>
            <label-position x='-22' y='0.52381' />
          </mark-label>
          <mark-label id='19' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Stanislav Lobotka&quot;</value>
                <value>&quot;Slovakia&quot;</value>
                <value>50.53846153846154</value>
                <value>1.6200000000000001</value>
              </tuple>
            </tuple-reference>
            <label-position x='-17' y='-3' />
          </mark-label>
          <mark-label id='20'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Granit Xhaka&quot;</value>
                <value>&quot;Switzerland&quot;</value>
                <value>65.4375</value>
                <value>3.9399999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.47619' y='10' />
          </mark-label>
          <mark-label id='21'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Luka Modrić&quot;</value>
                <value>&quot;Croatia&quot;</value>
                <value>75.384615384615387</value>
                <value>3.46</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.47619' y='8' />
          </mark-label>
          <mark-label id='22'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vitor Machado Ferreira&quot;</value>
                <value>&quot;Portugal&quot;</value>
                <value>74.369747899159663</value>
                <value>3.0299999999999998</value>
              </tuple>
            </tuple-reference>
            <label-position x='23' y='0.566667' />
          </mark-label>
          <mark-label id='23'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Fabián Ruiz Peña&quot;</value>
                <value>&quot;Spain&quot;</value>
                <value>66.341911764705884</value>
                <value>3.4699999999999998</value>
              </tuple>
            </tuple-reference>
            <label-position x='35' y='0.483871' />
          </mark-label>
          <mark-label id='24'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Adrien Rabiot&quot;</value>
                <value>&quot;France&quot;</value>
                <value>50.943396226415096</value>
                <value>2.1800000000000002</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.428571' y='8' />
          </mark-label>
          <mark-label id='25'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Nicolas Seiwald&quot;</value>
                <value>&quot;Austria&quot;</value>
                <value>52.25</value>
                <value>2.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='19' y='3' />
          </mark-label>
          <mark-label id='26'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Hakan Çalhanoğlu&quot;</value>
                <value>&quot;Turkey&quot;</value>
                <value>56.123595505617978</value>
                <value>1.77</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.904762' y='8' />
          </mark-label>
          <mark-label id='27'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Kristjan Asllani&quot;</value>
                <value>&quot;Albania&quot;</value>
                <value>54.0</value>
                <value>1.6699999999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='8' y='-6' />
          </mark-label>
          <mark-label id='28'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;João Maria Lobo Alves Palhinha Gonçalves&quot;</value>
                <value>&quot;Portugal&quot;</value>
                <value>48.737541528239205</value>
                <value>1.2</value>
              </tuple>
            </tuple-reference>
            <label-position x='29' y='0.419355' />
          </mark-label>
          <mark-label id='29'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Christian Dannemann Eriksen&quot;</value>
                <value>&quot;Denmark&quot;</value>
                <value>43.706896551724135</value>
                <value>0.78000000000000003</value>
              </tuple>
            </tuple-reference>
            <label-position x='-25' y='0.266667' />
          </mark-label>
          <mark-label id='30'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Konrad Laimer&quot;</value>
                <value>&quot;Austria&quot;</value>
                <value>38.523985239852401</value>
                <value>1.99</value>
              </tuple>
            </tuple-reference>
            <label-position x='-20' y='0.571429' />
          </mark-label>
          <mark-label id='31' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Timi Elšnik&quot;</value>
                <value>&quot;Slovenia&quot;</value>
                <value>23.5</value>
                <value>1.25</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='32' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tomáš Souček&quot;</value>
                <value>&quot;Czech Republic&quot;</value>
                <value>24.666666666666668</value>
                <value>1.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='33' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Dennis Man&quot;</value>
                <value>&quot;Romania&quot;</value>
                <value>23.345864661654137</value>
                <value>1.02</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='34' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Juraj Kucka&quot;</value>
                <value>&quot;Slovakia&quot;</value>
                <value>27.514285714285716</value>
                <value>0.51000000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='35' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Xavi Simons&quot;</value>
                <value>&quot;Netherlands&quot;</value>
                <value>33.87308533916849</value>
                <value>0.58999999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='36' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Antoine Griezmann&quot;</value>
                <value>&quot;France&quot;</value>
                <value>36.22784810126582</value>
                <value>0.68000000000000005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='37' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Adam Gnezda Čerin&quot;</value>
                <value>&quot;Slovenia&quot;</value>
                <value>27.692307692307693</value>
                <value>0.46000000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='38' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Nicolae Claudiu Stanciu&quot;</value>
                <value>&quot;Romania&quot;</value>
                <value>22.181303116147308</value>
                <value>0.51000000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='39' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Răzvan Gabriel Marin&quot;</value>
                <value>&quot;Romania&quot;</value>
                <value>23.070422535211268</value>
                <value>0.51000000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='40' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Remo Freuler&quot;</value>
                <value>&quot;Switzerland&quot;</value>
                <value>38.175824175824175</value>
                <value>0.20000000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='41' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;András Schäfer&quot;</value>
                <value>&quot;Hungary&quot;</value>
                <value>35.666666666666664</value>
                <value>0.67000000000000004</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='42' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Callum McGregor&quot;</value>
                <value>&quot;Scotland&quot;</value>
                <value>35.121951219512198</value>
                <value>0.72999999999999998</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='43' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Daniel Olmo Carvajal&quot;</value>
                <value>&quot;Spain&quot;</value>
                <value>34.583333333333336</value>
                <value>0.62</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='44' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ruben Vargas&quot;</value>
                <value>&quot;Switzerland&quot;</value>
                <value>29.21311475409836</value>
                <value>0.29999999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='45' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Lukáš Provod&quot;</value>
                <value>&quot;Czech Republic&quot;</value>
                <value>24.827586206896552</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='46' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Giorgi Chakvetadze&quot;</value>
                <value>&quot;Georgia&quot;</value>
                <value>29.62962962962963</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='47' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Dominik Szoboszlai&quot;</value>
                <value>&quot;Hungary&quot;</value>
                <value>34.0</value>
                <value>0.33000000000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='48' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Marius Mihai Marin&quot;</value>
                <value>&quot;Romania&quot;</value>
                <value>23.023255813953487</value>
                <value>0.29999999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='49' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Petar Stojanović&quot;</value>
                <value>&quot;Slovenia&quot;</value>
                <value>25.268138801261831</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='50'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Marcelo Brozović&quot;</value>
                <value>&quot;Croatia&quot;</value>
                <value>68.799999999999997</value>
                <value>1.2</value>
              </tuple>
            </tuple-reference>
            <label-position x='2' y='-9' />
          </mark-label>
          <mark-label id='51'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:Calculation_2418714495562670080:qk]</field>
                  <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Pierre-Emile Højbjerg&quot;</value>
                <value>&quot;Denmark&quot;</value>
                <value>66.288951841359776</value>
                <value>1.78</value>
              </tuple>
            </tuple-reference>
            <label-position x='29' y='1' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{25241887-49CF-40A7-87E8-190F15A4C4DA}' />
    </worksheet>
    <worksheet name='Player'>
      <table>
        <view>
          <datasources>
            <datasource caption='EURO2024_player_LBP' name='federated.1a86w5g0dhintc10j2guu0rcr9kk' />
          </datasources>
          <datasource-dependencies datasource='federated.1a86w5g0dhintc10j2guu0rcr9kk'>
            <column datatype='real' name='[LBP Attempted per90]' role='measure' type='quantitative' />
            <column datatype='real' name='[LBP Attempts]' role='measure' type='quantitative' />
            <column datatype='real' name='[LBP Success Rate]' role='measure' type='quantitative' />
            <column caption='Minutes Played' datatype='integer' name='[minutes_played]' role='measure' type='quantitative' />
            <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Abdülkerim Bardakcı&quot;' value='A.Bardakcı' />
                <alias key='&quot;Adam Buksa&quot;' value='A.Buksa' />
                <alias key='&quot;Adam Gnezda Čerin&quot;' value='A.Čerin' />
                <alias key='&quot;Adam Hložek&quot;' value='A.Hložek' />
                <alias key='&quot;Ádám Lang&quot;' value='Á.Lang' />
                <alias key='&quot;Ádám Nagy&quot;' value='Á.Nagy' />
                <alias key='&quot;Adam Obert&quot;' value='A.Obert' />
                <alias key='&quot;Adrián Rus&quot;' value='A.Rus' />
                <alias key='&quot;Adrien Rabiot&quot;' value='A.Rabiot' />
                <alias key='&quot;Alejandro Baena Rodríguez&quot;' value='Alex Baena' />
                <alias key='&quot;Alejandro Grimaldo García&quot;' value='Grimaldo' />
                <alias key='&quot;Aleksandar Mitrović&quot;' value='A.Mitrović' />
                <alias key='&quot;Alessandro Bastoni&quot;' value='A.Bastoni' />
                <alias key='&quot;Alexander Hartmann Bah&quot;' value='A.Bah' />
                <alias key='&quot;Alexander Prass&quot;' value='A.Prass' />
                <alias key='&quot;Alexandru Cicâldău&quot;' value='A.Cicâldău' />
                <alias key='&quot;Altay Bayındır&quot;' value='A.Bayındır' />
                <alias key='&quot;Álvaro Borja Morata Martín&quot;' value='Á.Morata' />
                <alias key='&quot;Amadou Onana&quot;' value='A.Onana' />
                <alias key='&quot;Anatolii Trubin&quot;' value='A.Trubin' />
                <alias key='&quot;András Schäfer&quot;' value='A.Schäfer' />
                <alias key='&quot;Andraž Šporar&quot;' value='A.Šporar' />
                <alias key='&quot;Andrea Cambiaso&quot;' value='A.Cambiaso' />
                <alias key='&quot;Andreas Christensen&quot;' value='A.Christensen' />
                <alias key='&quot;Andreas Skov Olsen&quot;' value='A.Olsen' />
                <alias key='&quot;Andrei Burcă Andonie&quot;' value='A.Burcă' />
                <alias key='&quot;Andrei Florin Ratiu&quot;' value='A.Ratiu' />
                <alias key='&quot;Andrej Kramarić&quot;' value='A.Kramarić' />
                <alias key='&quot;Andrew Robertson&quot;' value='A.Robertson' />
                <alias key='&quot;Andrija Živković&quot;' value='A.Živković' />
                <alias key='&quot;Andriy Lunin&quot;' value='A.Lunin' />
                <alias key='&quot;Andriy Yarmolenko&quot;' value='A.Yarmolenko' />
                <alias key='&quot;Angus Gunn&quot;' value='A.Gunn' />
                <alias key='&quot;Ante Budimir&quot;' value='A.Budimir' />
                <alias key='&quot;Anthony Gordon&quot;' value='A.Gordon' />
                <alias key='&quot;Anthony Ralston&quot;' value='A.Ralston' />
                <alias key='&quot;Antoine Griezmann&quot;' value='A.Griezmann' />
                <alias key='&quot;Antonín Barák&quot;' value='A.Barák' />
                <alias key='&quot;António João Pereira Albuquerque Tavares Silva&quot;' value='A.Silva' />
                <alias key='&quot;Antonio Rüdiger&quot;' value='A.Rüdiger' />
                <alias key='&quot;Anzor Mekvabishvili&quot;' value='A.Mekvabishvili' />
                <alias key='&quot;Arbër Hoxha&quot;' value='A.Hoxha' />
                <alias key='&quot;Arda Güler&quot;' value='A.Güler' />
                <alias key='&quot;Arlind Afrim Ajeti&quot;' value='A.Ajeti' />
                <alias key='&quot;Armando Broja&quot;' value='A.Broja' />
                <alias key='&quot;Artem Dovbyk&quot;' value='A.Dovbyk' />
                <alias key='&quot;Arthur Theate&quot;' value='A.Theate' />
                <alias key='&quot;Attila Fiola&quot;' value='A.Fiola' />
                <alias key='&quot;Attila Szalai&quot;' value='A.Szalai' />
                <alias key='&quot;Aurélien Djani Tchouaméni&quot;' value='A.Tchouaméni' />
                <alias key='&quot;Aymeric Laporte&quot;' value='A.Laporte' />
                <alias key='&quot;Ayoze Pérez Gutiérrez&quot;' value='A.Pérez' />
                <alias key='&quot;Barış Alper Yılmaz&quot;' value='B.Yılmaz' />
                <alias key='&quot;Barnabás Varga&quot;' value='B.Varga' />
                <alias key='&quot;Bart Verbruggen&quot;' value='B.Verbruggen' />
                <alias key='&quot;Bartosz Bereszyński&quot;' value='B.Bereszyński' />
                <alias key='&quot;Bartosz Salamon&quot;' value='B.Salamon' />
                <alias key='&quot;Bartosz Slisz&quot;' value='B.Slisz' />
                <alias key='&quot;Bendegúz Bolla&quot;' value='B.Bolla' />
                <alias key='&quot;Benjamin Henrichs&quot;' value='B.Henrichs' />
                <alias key='&quot;Benjamin Šeško&quot;' value='B.Šeško' />
                <alias key='&quot;Benjamin Verbič&quot;' value='B.Verbič' />
                <alias key='&quot;Berat Djimsiti&quot;' value='B.Djimsiti' />
                <alias key='&quot;Bernardo Mota Veiga de Carvalho e Silva&quot;' value='B.Silva' />
                <alias key='&quot;Billy Gilmour&quot;' value='B.Gilmour' />
                <alias key='&quot;Bogdan Racovițan&quot;' value='B.Racovițan' />
                <alias key='&quot;Borna Sosa&quot;' value='B.Sosa' />
                <alias key='&quot;Bradley Barcola&quot;' value='B.Barcola' />
                <alias key='&quot;Breel-Donald Embolo&quot;' value='B.Embolo' />
                <alias key='&quot;Bruno Miguel Borges Fernandes&quot;' value='B.Fernandes' />
                <alias key='&quot;Bruno Petković&quot;' value='B.Petković' />
                <alias key='&quot;Bryan Cristante&quot;' value='B.Cristante' />
                <alias key='&quot;Budu Zivzivadze&quot;' value='B.Zivzivadze' />
                <alias key='&quot;Bukayo Saka&quot;' value='B.Saka' />
                <alias key='&quot;Callum McGregor&quot;' value='C.McGregor' />
                <alias key='&quot;Callum Styles&quot;' value='C.Styles' />
                <alias key='&quot;Cenk Tosun&quot;' value='C.Tosun' />
                <alias key='&quot;Chris Führich&quot;' value='C.Führich' />
                <alias key='&quot;Christian Dannemann Eriksen&quot;' value='C.Eriksen' />
                <alias key='&quot;Christian Nørgaard&quot;' value='C.Nørgaard' />
                <alias key='&quot;Christoph Baumgartner&quot;' value='C.Baumgartner' />
                <alias key='&quot;Cody Mathès Gakpo&quot;' value='C.Gakpo' />
                <alias key='&quot;Cole Palmer&quot;' value='C.Palmer' />
                <alias key='&quot;Conor Gallagher&quot;' value='C.Gallagher' />
                <alias key='&quot;Cristiano Ronaldo dos Santos Aveiro&quot;' value='Cristiano Ronaldo' />
                <alias key='&quot;Daniel Carvajal Ramos&quot;' value='D.Carvajal' />
                <alias key='&quot;Dániel Gazdag&quot;' value='D.Gazdag' />
                <alias key='&quot;Daniel Olmo Carvajal&quot;' value='D.Olmo' />
                <alias key='&quot;Daniel Vivian Moreno&quot;' value='D.Vivian' />
                <alias key='&quot;Danilo Luís Hélio Pereira&quot;' value='Danilo Pereira' />
                <alias key='&quot;Darius Dumitru Olaru&quot;' value='D.Olaru' />
                <alias key='&quot;David Doudera&quot;' value='D.Doudera' />
                <alias key='&quot;Dávid Ďuriš&quot;' value='D.Ďuriš' />
                <alias key='&quot;Dávid Hancko&quot;' value='D.Hancko' />
                <alias key='&quot;David Jurásek&quot;' value='D.Jurásek' />
                <alias key='&quot;David Raum&quot;' value='D.Raum' />
                <alias key='&quot;David Raya Martin&quot;' value='David Raya' />
                <alias key='&quot;David Strelec&quot;' value='D.Strelec' />
                <alias key='&quot;Davide Frattesi&quot;' value='D.Frattesi' />
                <alias key='&quot;Dayotchanculle Upamecano&quot;' value='D.Upamecano' />
                <alias key='&quot;Declan Rice&quot;' value='D.Rice' />
                <alias key='&quot;Deian Cristian Sorescu&quot;' value='D.Sorescu' />
                <alias key='&quot;Denis Alibec&quot;' value='D.Alibec' />
                <alias key='&quot;Denis Lemi Zakaria Lako Lado&quot;' value='Zakaria' />
                <alias key='&quot;Denis Mihai Drăguş&quot;' value='D.Drăguş' />
                <alias key='&quot;Denis Vavro&quot;' value='D.Vavro' />
                <alias key='&quot;Deniz Undav&quot;' value='D.Undav' />
                <alias key='&quot;Dennis Man&quot;' value='D.Man' />
                <alias key='&quot;Denzel Dumfries&quot;' value='D.Dumfries' />
                <alias key='&quot;Diogo José Teixeira da Silva&quot;' value='Diogo Jota' />
                <alias key='&quot;Diogo Meireles Costa&quot;' value='Diogo Costa' />
                <alias key='&quot;Dodi Lukebakio&quot;' value='D.Lukebakio' />
                <alias key='&quot;Dominik Livaković&quot;' value='D.Livaković' />
                <alias key='&quot;Dominik Szoboszlai&quot;' value='D.Szoboszlai' />
                <alias key='&quot;Donyell Malen&quot;' value='D.Malen' />
                <alias key='&quot;Dušan Tadić&quot;' value='D.Tadić' />
                <alias key='&quot;Dušan Vlahović&quot;' value='D.Vlahović' />
                <alias key='&quot;Eberechi Eze&quot;' value='E.Eze' />
                <alias key='&quot;Eduardo Camavinga&quot;' value='E.Camavinga' />
                <alias key='&quot;Elseid Hysaj&quot;' value='E.Hysaj' />
                <alias key='&quot;Emre Can&quot;' value='E.Can' />
                <alias key='&quot;Endre Botka&quot;' value='E.Botka' />
                <alias key='&quot;Erik Janža&quot;' value='E.Janža' />
                <alias key='&quot;Ernest Muçi&quot;' value='E.Muçi' />
                <alias key='&quot;Ezri Konsa Ngoyo&quot;' value='E.Konsa' />
                <alias key='&quot;Fabian Lukas Schär&quot;' value='F.Schär' />
                <alias key='&quot;Fabian Rieder&quot;' value='F.Rieder' />
                <alias key='&quot;Fabián Ruiz Peña&quot;' value='Fabián Ruiz' />
                <alias key='&quot;Federico Chiesa&quot;' value='F.Chiesa' />
                <alias key='&quot;Federico Dimarco&quot;' value='F.Dimarco' />
                <alias key='&quot;Fehmi Mert Günok&quot;' value='F.Günok' />
                <alias key='&quot;Ferdi Erenay Kadıoğlu&quot;' value='Kadıoğlu' />
                <alias key='&quot;Fermin Lopez Marin&quot;' value='F.Lopez' />
                <alias key='&quot;Ferrán Torres García&quot;' value='F.Torres' />
                <alias key='&quot;Filip Kostić&quot;' value='F.Kostić' />
                <alias key='&quot;Filip Mladenović&quot;' value='F.Mladenović' />
                <alias key='&quot;Florian Grillitsch&quot;' value='F.Grillitsch' />
                <alias key='&quot;Florian Wirtz&quot;' value='F.Wirtz' />
                <alias key='&quot;Florin Constantin Niţă&quot;' value='F.Niţă' />
                <alias key='&quot;Florinel Teodor Coman&quot;' value='F.Coman' />
                <alias key='&quot;Francisco Fernandes Conceição&quot;' value='F.Conceição' />
                <alias key='&quot;George Alexandru Puşcaş&quot;' value='G.Puşcaş' />
                <alias key='&quot;Georges Mikautadze&quot;' value='G.Mikautadze' />
                <alias key='&quot;Georginio Wijnaldum&quot;' value='G.Wijnaldum' />
                <alias key='&quot;Georgiy Sudakov&quot;' value='G.Sudakov' />
                <alias key='&quot;Gernot Trauner&quot;' value='G.Trauner' />
                <alias key='&quot;Giacomo Raspadori&quot;' value='G.Raspadori' />
                <alias key='&quot;Gianluca Mancini&quot;' value='G.Mancini' />
                <alias key='&quot;Gianluca Scamacca&quot;' value='G.Scamacca' />
                <alias key='&quot;Gianluigi Donnarumma&quot;' value='G.Donnarumma' />
                <alias key='&quot;Giorgi Chakvetadze&quot;' value='G.Chakvetadze' />
                <alias key='&quot;Giorgi Gvelesiani&quot;' value='G.Gvelesiani' />
                <alias key='&quot;Giorgi Kochorashvili&quot;' value='G.Kochorashvili' />
                <alias key='&quot;Giorgi Kvilitaia&quot;' value='G.Kvilitaia' />
                <alias key='&quot;Giorgi Mamardashvili&quot;' value='G.Mamardashvili' />
                <alias key='&quot;Giovanni Di Lorenzo&quot;' value='Di Lorenzo' />
                <alias key='&quot;Gonçalo Bernardo Inácio&quot;' value='G.Inácio' />
                <alias key='&quot;Gonçalo Matias Ramos&quot;' value='G.Ramos' />
                <alias key='&quot;Granit Xhaka&quot;' value='G.Xhaka' />
                <alias key='&quot;Grant Campbell Hanley&quot;' value='G.Hanley' />
                <alias key='&quot;Guram Kashia&quot;' value='G.Kashia' />
                <alias key='&quot;Hakan Çalhanoğlu&quot;' value='H.Çalhanoğlu' />
                <alias key='&quot;Heorhii Tsitaishvili&quot;' value='H.Tsitaishvili' />
                <alias key='&quot;Ianis Hagi&quot;' value='I.Hagi' />
                <alias key='&quot;Ikoma Loïs Openda&quot;' value='Openda' />
                <alias key='&quot;İlkay Gündoğan&quot;' value='İ.Gündoğan' />
                <alias key='&quot;Illia Zabarnyi&quot;' value='I.Zabarnyi' />
                <alias key='&quot;İsmail Yüksek&quot;' value='İ.Yüksek' />
                <alias key='&quot;Iván Balliu Campeny&quot;' value='I.Campeny' />
                <alias key='&quot;Ivan Ilić&quot;' value='I.Ilić' />
                <alias key='&quot;Ivan Perišić&quot;' value='I.Perišić' />
                <alias key='&quot;Ivan Schranz&quot;' value='I.Schranz' />
                <alias key='&quot;Ivan Toney&quot;' value='I.Toney' />
                <alias key='&quot;Jack Hendry&quot;' value='J.Hendry' />
                <alias key='&quot;Jacob Bruun Larsen&quot;' value='J.Larsen' />
                <alias key='&quot;Jaka Bijol&quot;' value='J.Bijol' />
                <alias key='&quot;Jakub Moder&quot;' value='J.Moder' />
                <alias key='&quot;Jakub Piotr Kiwior&quot;' value='J.Kiwior' />
                <alias key='&quot;Jakub Piotrowski&quot;' value='J.Piotrowski' />
                <alias key='&quot;Jamal Musiala&quot;' value='J.Musiala' />
                <alias key='&quot;Jan Bednarek&quot;' value='J.Bednarek' />
                <alias key='&quot;Jan Kuchta&quot;' value='J.Kuchta' />
                <alias key='&quot;Jan Mlakar&quot;' value='J.Mlakar' />
                <alias key='&quot;Jan Oblak&quot;' value='J.Oblak' />
                <alias key='&quot;Jan Vertonghen&quot;' value='J.Vertonghen' />
                <alias key='&quot;Jannik Vestergaard&quot;' value='J.Vestergaard' />
                <alias key='&quot;Jarrod Bowen&quot;' value='J.Bowen' />
                <alias key='&quot;Jasir Asani&quot;' value='J.Asani' />
                <alias key='&quot;Jerdy Schouten&quot;' value='J.Schouten' />
                <alias key='&quot;Jeremie Frimpong&quot;' value='J.Frimpong' />
                <alias key='&quot;Jeremy Doku&quot;' value='J.Doku' />
                <alias key='&quot;Jesús Navas González&quot;' value='J.Navas' />
                <alias key='&quot;Jindřich Staněk&quot;' value='J.Staněk' />
                <alias key='&quot;Joachim Andersen&quot;' value='J.Andersen' />
                <alias key='&quot;Joakim Mæhle&quot;' value='J.Mæhle' />
                <alias key='&quot;João Félix Sequeira&quot;' value='João Félix' />
                <alias key='&quot;João Maria Lobo Alves Palhinha Gonçalves&quot;' value='Palhinha' />
                <alias key='&quot;João Pedro Cavaco Cancelo&quot;' value='J.Cancelo' />
                <alias key='&quot;Joey Veerman&quot;' value='J.Veerman' />
                <alias key='&quot;Johan Bakayoko&quot;' value='J.Bakayoko' />
                <alias key='&quot;John McGinn&quot;' value='J.McGinn' />
                <alias key='&quot;John Stones&quot;' value='J.Stones' />
                <alias key='&quot;Jon Gorenc Stankovič&quot;' value='J.Stankovič' />
                <alias key='&quot;Jonas Older Wind&quot;' value='J.Wind' />
                <alias key='&quot;Jonathan Tah&quot;' value='J.Tah' />
                <alias key='&quot;Jordan Pickford&quot;' value='J.Pickford' />
                <alias key='&quot;Jorge Luiz Frello Filho&quot;' value='Jorginho' />
                <alias key='&quot;José Diogo Dalot Teixeira&quot;' value='D.Dalot' />
                <alias key='&quot;José Ignacio Fernández Iglesias&quot;' value='Nacho' />
                <alias key='&quot;José Luis Sanmartín Mato&quot;' value='Joselu' />
                <alias key='&quot;Joshua Kimmich&quot;' value='J.Kimmich' />
                <alias key='&quot;Joshua Zirkzee&quot;' value='J.Zirkzee' />
                <alias key='&quot;Josip Iličić&quot;' value='J.Iličić' />
                <alias key='&quot;Josip Juranović&quot;' value='J.Juranović' />
                <alias key='&quot;Josip Stanišić&quot;' value='J.Stanišić' />
                <alias key='&quot;Josip Šutalo&quot;' value='J.Šutalo' />
                <alias key='&quot;Joško Gvardiol&quot;' value='J.Gvardiol' />
                <alias key='&quot;Jude Bellingham&quot;' value='J.Bellingham' />
                <alias key='&quot;Jules Koundé&quot;' value='J.Koundé' />
                <alias key='&quot;Juraj Kucka&quot;' value='J.Kucka' />
                <alias key='&quot;Jure Balkovec&quot;' value='J.Balkovec' />
                <alias key='&quot;Kaan Ayhan&quot;' value='K.Ayhan' />
                <alias key='&quot;Kacper Urbanski&quot;' value='K.Urbanski' />
                <alias key='&quot;Kai Havertz&quot;' value='K.Havertz' />
                <alias key='&quot;Kamil Grosicki&quot;' value='K.Grosicki' />
                <alias key='&quot;Karol Świderski&quot;' value='K.Świderski' />
                <alias key='&quot;Kasper Dolberg&quot;' value='K.Dolberg' />
                <alias key='&quot;Kasper Schmeichel&quot;' value='K.Schmeichel' />
                <alias key='&quot;Kenan Yildiz&quot;' value='K.Yildiz' />
                <alias key='&quot;Kenneth McLean&quot;' value='K.McLean' />
                <alias key='&quot;Kevin Csoboth&quot;' value='K.Csoboth' />
                <alias key='&quot;Kevin Danso&quot;' value='K.Danso' />
                <alias key='&quot;Kevin De Bruyne&quot;' value='K.De Bruyne' />
                <alias key='&quot;Khvicha Kvaratskhelia&quot;' value='K.Kvaratskhelia' />
                <alias key='&quot;Kieran Tierney&quot;' value='K.Tierney' />
                <alias key='&quot;Kieran Trippier&quot;' value='K.Trippier' />
                <alias key='&quot;Kingsley Coman&quot;' value='K.Coman' />
                <alias key='&quot;Klaus Gjasula&quot;' value='K.Gjasula' />
                <alias key='&quot;Kléper Laveran Lima Ferreira&quot;' value='Pepe' />
                <alias key='&quot;Kobbie Mainoo&quot;' value='K.Mainoo' />
                <alias key='&quot;Koen Casteels&quot;' value='K.Casteels' />
                <alias key='&quot;Konrad Laimer&quot;' value='K.Laimer' />
                <alias key='&quot;Kristjan Asllani&quot;' value='K.Asllani' />
                <alias key='&quot;Krzysztof Piątek&quot;' value='K.Piątek' />
                <alias key='&quot;Kwadwo Duah&quot;' value='K.Duah' />
                <alias key='&quot;Kyle Walker&quot;' value='K.Walker' />
                <alias key='&quot;Kylian Mbappé Lottin&quot;' value='K.Mbappé' />
                <alias key='&quot;Ladislav Krejčí&quot;' value='L.Krejčí' />
                <alias key='&quot;Lamine Yamal Nasraoui Ebana&quot;' value='L.Yamal' />
                <alias key='&quot;Lasha Dvali&quot;' value='L.Dvali' />
                <alias key='&quot;László Bénes&quot;' value='L.Bénes' />
                <alias key='&quot;László Kleinheisler&quot;' value='L.Kleinheisler' />
                <alias key='&quot;Lawrence Shankland&quot;' value='L.Shankland' />
                <alias key='&quot;Lazar Samardžić&quot;' value='L.Samardžić' />
                <alias key='&quot;Leandro Trossard&quot;' value='L.Trossard' />
                <alias key='&quot;Leo Sauer&quot;' value='L.Sauer' />
                <alias key='&quot;Leonidas Stergiou&quot;' value='L.Stergiou' />
                <alias key='&quot;Leopold Querfeld&quot;' value='L.Querfeld' />
                <alias key='&quot;Leroy Sané&quot;' value='L.Sané' />
                <alias key='&quot;Lewis Morgan&quot;' value='L.Morgan' />
                <alias key='&quot;Lorenzo Pellegrini&quot;' value='L.Pellegrini' />
                <alias key='&quot;Lovro Majer&quot;' value='L.Majer' />
                <alias key='&quot;Ľubomír Tupta&quot;' value='Ľ.Tupta' />
                <alias key='&quot;Luka Ivanušec&quot;' value='L.Ivanušec' />
                <alias key='&quot;Luka Jović&quot;' value='L.Jović' />
                <alias key='&quot;Luka Lochoshvili&quot;' value='L.Lochoshvili' />
                <alias key='&quot;Luka Modrić&quot;' value='L.Modrić' />
                <alias key='&quot;Luka Sučić&quot;' value='L.Sučić' />
                <alias key='&quot;Lukáš Haraslín&quot;' value='L.Haraslín' />
                <alias key='&quot;Lukáš Provod&quot;' value='L.Provod' />
                <alias key='&quot;Łukasz Skorupski&quot;' value='Ł.Skorupski' />
                <alias key='&quot;Luke Shaw&quot;' value='L.Shaw' />
                <alias key='&quot;Lutsharel Geertruida&quot;' value='L.Geertruida' />
                <alias key='&quot;Maksym Talovierov&quot;' value='M.Talovierov' />
                <alias key='&quot;Manuel Neuer&quot;' value='M.Neuer' />
                <alias key='&quot;Manuel Obafemi Akanji&quot;' value='M.Akanji' />
                <alias key='&quot;Marc Cucurella Saseta&quot;' value='M.Cucurella' />
                <alias key='&quot;Marc Guehi&quot;' value='M.Guehi' />
                <alias key='&quot;Marcel Sabitzer&quot;' value='M.Sabitzer' />
                <alias key='&quot;Marcelo Brozović&quot;' value='M.Brozović' />
                <alias key='&quot;Marcus Thuram&quot;' value='M.Thuram' />
                <alias key='&quot;Marin Pongracic&quot;' value='M.Pongracic' />
                <alias key='&quot;Mario Mitaj&quot;' value='M.Mitaj' />
                <alias key='&quot;Mario Pašalić&quot;' value='M.Pašalić' />
                <alias key='&quot;Marius Mihai Marin&quot;' value='M.Marin' />
                <alias key='&quot;Marko Arnautović&quot;' value='M.Arnautović' />
                <alias key='&quot;Martin Ádám&quot;' value='M.Ádám' />
                <alias key='&quot;Martin Baturina&quot;' value='M.Baturina' />
                <alias key='&quot;Martin Dúbravka&quot;' value='M.Dúbravka' />
                <alias key='&quot;Martín Zubimendi Ibáñez&quot;' value='M.Zubimendi' />
                <alias key='&quot;Márton Dárdai&quot;' value='M.Dárdai' />
                <alias key='&quot;Matěj Jurásek&quot;' value='M.Jurásek' />
                <alias key='&quot;Matěj Kovář&quot;' value='M.Kovář' />
                <alias key='&quot;Mateo Kovačić&quot;' value='M.Kovačić' />
                <alias key='&quot;Mateo Retegui&quot;' value='M.Retegui' />
                <alias key='&quot;Matheus Luiz Nunes&quot;' value='M.Nunes' />
                <alias key='&quot;Matteo Darmian&quot;' value='M.Darmian' />
                <alias key='&quot;Mattia Zaccagni&quot;' value='M.Zaccagni' />
                <alias key='&quot;Matúš Bero&quot;' value='M.Bero' />
                <alias key='&quot;Maximilian Beier&quot;' value='M.Beier' />
                <alias key='&quot;Maximilian Mittelstädt&quot;' value='M.Mittelstädt' />
                <alias key='&quot;Maximilian Wöber&quot;' value='M.Wöber' />
                <alias key='&quot;Medon Berisha&quot;' value='M.Berisha' />
                <alias key='&quot;Mehmet Zeki Çelik&quot;' value='M.Çelik' />
                <alias key='&quot;Memphis Depay&quot;' value='M.Depay' />
                <alias key='&quot;Merih Demiral&quot;' value='M.Demiral' />
                <alias key='&quot;Mert Müldür&quot;' value='M.Müldür' />
                <alias key='&quot;Michael Gregoritsch&quot;' value='M.Gregoritsch' />
                <alias key='&quot;Michael Ijemuan Folorunsho&quot;' value='M.Folorunsho' />
                <alias key='&quot;Michał Skóraś&quot;' value='M.Skóraś' />
                <alias key='&quot;Michel Aebischer&quot;' value='M.Aebischer' />
                <alias key='&quot;Micky van de Ven&quot;' value='M.van de Ven' />
                <alias key='&quot;Mijat Gaćinović&quot;' value='M.Gaćinović' />
                <alias key='&quot;Mike Maignan&quot;' value='M.Maignan' />
                <alias key='&quot;Mikel Merino Zazón&quot;' value='M.Merino' />
                <alias key='&quot;Mikel Oyarzabal Ugarte&quot;' value='M.Oyarzabal' />
                <alias key='&quot;Mikkel Damsgaard&quot;' value='M.Damsgaard' />
                <alias key='&quot;Milan Škriniar&quot;' value='M.Škriniar' />
                <alias key='&quot;Milos Kerkez&quot;' value='M.Kerkez' />
                <alias key='&quot;Milos Veljkovic&quot;' value='M.Veljkovic' />
                <alias key='&quot;Mirlind Daku&quot;' value='M.Daku' />
                <alias key='&quot;Mohamed Zeki Amdouni&quot;' value='M.Amdouni' />
                <alias key='&quot;Mojmír Chytil&quot;' value='M.Chytil' />
                <alias key='&quot;Morten Hjulmand&quot;' value='M.Hjulmand' />
                <alias key='&quot;Muhammed Kerem Aktürkoğlu&quot;' value='M.Aktürkoğlu' />
                <alias key='&quot;Mykhailo Mudryk&quot;' value='M.Mudryk' />
                <alias key='&quot;Mykola Matvienko&quot;' value='M.Matvienko' />
                <alias key='&quot;Mykola Shaparenko&quot;' value='M.Shaparenko' />
                <alias key='&quot;N&apos;Golo Kanté&quot;' value='N.Kanté' />
                <alias key='&quot;Nathan Aké&quot;' value='N.Aké' />
                <alias key='&quot;Nedim Bajrami&quot;' value='N.Bajrami' />
                <alias key='&quot;Nélson Cabral Semedo&quot;' value='N.Semedo' />
                <alias key='&quot;Nemanja Gudelj&quot;' value='N.Gudelj' />
                <alias key='&quot;Nicholas Williams Arthuer&quot;' value='N.Williams' />
                <alias key='&quot;Niclas Füllkrug&quot;' value='N.Füllkrug' />
                <alias key='&quot;Nico Schlotterbeck&quot;' value='N.Schlotterbeck' />
                <alias key='&quot;Nicola Zalewski&quot;' value='N.Zalewski' />
                <alias key='&quot;Nicolae Claudiu Stanciu&quot;' value='N.Stanciu' />
                <alias key='&quot;Nicolas Seiwald&quot;' value='N.Seiwald' />
                <alias key='&quot;Nicolò Barella&quot;' value='N.Barella' />
                <alias key='&quot;Nicolò Fagioli&quot;' value='N.Fagioli' />
                <alias key='&quot;Nicușor Silviu Bancu&quot;' value='N.Bancu' />
                <alias key='&quot;Nika Kvekveskiri&quot;' value='N.Kvekveskiri' />
                <alias key='&quot;Nikola Milenković&quot;' value='N.Milenković' />
                <alias key='&quot;Norbert Gyömbér&quot;' value='N.Gyömbér' />
                <alias key='&quot;Nuno Mendes&quot;' value='N.Mendes' />
                <alias key='&quot;Okay Yokuşlu&quot;' value='O.Yokuşlu' />
                <alias key='&quot;Oleksandr Svatok&quot;' value='O.Svatok' />
                <alias key='&quot;Oleksandr Tymchyk&quot;' value='O.Tymchyk' />
                <alias key='&quot;Oleksandr Zinchenko&quot;' value='O.Zinchenko' />
                <alias key='&quot;Oleksandr Zubkov&quot;' value='O.Zubkov' />
                <alias key='&quot;Olivier Giroud&quot;' value='O.Giroud' />
                <alias key='&quot;Ollie Watkins&quot;' value='O.Watkins' />
                <alias key='&quot;Ondrej Duda&quot;' value='O.Duda' />
                <alias key='&quot;Ondřej Lingr&quot;' value='O.Lingr' />
                <alias key='&quot;Orel Mangala&quot;' value='O.Mangala' />
                <alias key='&quot;Orkun Kökçü&quot;' value='O.Kökçü' />
                <alias key='&quot;Otar Kakabadze&quot;' value='O.Kakabadze' />
                <alias key='&quot;Otar Kiteishvili&quot;' value='O.Kiteishvili' />
                <alias key='&quot;Ousmane Dembélé&quot;' value='O.Dembélé' />
                <alias key='&quot;Pascal Groß&quot;' value='P.Groß' />
                <alias key='&quot;Patrick Pentz&quot;' value='P.Pentz' />
                <alias key='&quot;Patrick Wimmer&quot;' value='P.Wimmer' />
                <alias key='&quot;Patrik Schick&quot;' value='P.Schick' />
                <alias key='&quot;Pavel Šulc&quot;' value='P.Šulc' />
                <alias key='&quot;Paweł Dawidowicz&quot;' value='P.Dawidowicz' />
                <alias key='&quot;Pedro González López&quot;' value='Pedri' />
                <alias key='&quot;Pedro Lomba Neto&quot;' value='P.Neto' />
                <alias key='&quot;Petar Stojanović&quot;' value='P.Stojanović' />
                <alias key='&quot;Péter Gulácsi&quot;' value='P.Gulácsi' />
                <alias key='&quot;Peter Pekarík&quot;' value='P.Pekarík' />
                <alias key='&quot;Petr Ševčík&quot;' value='P.Ševčík' />
                <alias key='&quot;Phil Foden&quot;' value='P.Foden' />
                <alias key='&quot;Philipp Lienhart&quot;' value='P.Lienhart' />
                <alias key='&quot;Philipp Mwene&quot;' value='P.Mwene' />
                <alias key='&quot;Pierre-Emile Højbjerg&quot;' value='P.Højbjerg' />
                <alias key='&quot;Piotr Zieliński&quot;' value='P.Zieliński' />
                <alias key='&quot;Predrag Rajković&quot;' value='P.Rajković' />
                <alias key='&quot;Przemysław Frankowski&quot;' value='P.Frankowski' />
                <alias key='&quot;Qazim Laçi&quot;' value='Q.Laçi' />
                <alias key='&quot;Radu Drăgușin&quot;' value='R.Drăgușin' />
                <alias key='&quot;Rafael Alexandre Conceição Leão&quot;' value='R.Leão' />
                <alias key='&quot;Randal Kolo Muani&quot;' value='K.Muani' />
                <alias key='&quot;Rasmus Winther Højlund&quot;' value='R.Højlund' />
                <alias key='&quot;Răzvan Gabriel Marin&quot;' value='R.Marin' />
                <alias key='&quot;Remo Freuler&quot;' value='R.Freuler' />
                <alias key='&quot;Renato Steffen&quot;' value='R.Steffen' />
                <alias key='&quot;Rey Manaj&quot;' value='R.Manaj' />
                <alias key='&quot;Ricardo Iván Rodríguez Araya&quot;' value='R.Rodríguez' />
                <alias key='&quot;Riccardo Calafiori&quot;' value='R.Calafiori' />
                <alias key='&quot;Robert Andrich&quot;' value='R.Andrich' />
                <alias key='&quot;Róbert Boženík&quot;' value='R.Boženík' />
                <alias key='&quot;Robert Lewandowski&quot;' value='R.Lewandowski' />
                <alias key='&quot;Robin Aime Robert Le Normand&quot;' value='Le Normand' />
                <alias key='&quot;Robin Hranáč&quot;' value='R.Hranáč' />
                <alias key='&quot;Rodrigo Hernández Cascante&quot;' value='Rodri' />
                <alias key='&quot;Roland Sallai&quot;' value='R.Sallai' />
                <alias key='&quot;Roman Yaremchuk&quot;' value='R.Yaremchuk' />
                <alias key='&quot;Romano Schmid&quot;' value='R.Schmid' />
                <alias key='&quot;Romelu Lukaku Menama&quot;' value='R.Lukaku' />
                <alias key='&quot;Rúben Diogo Da Silva Neves&quot;' value='R.Neves' />
                <alias key='&quot;Rúben Santos Gato Alves Dias&quot;' value='R.Dias' />
                <alias key='&quot;Ruben Vargas&quot;' value='R.Vargas' />
                <alias key='&quot;Ruslan Malinovskiy&quot;' value='R.Malinovskiy' />
                <alias key='&quot;Ryan Christie&quot;' value='R.Christie' />
                <alias key='&quot;Ryan Porteous&quot;' value='R.Porteous' />
                <alias key='&quot;Saba Lobzhanidze&quot;' value='S.Lobzhanidze' />
                <alias key='&quot;Salih Özcan&quot;' value='S.Özcan' />
                <alias key='&quot;Samet Akaydin&quot;' value='S.Akaydin' />
                <alias key='&quot;Sandro Altunashvili&quot;' value='S.Altunashvili' />
                <alias key='&quot;Saša Lukić&quot;' value='S.Lukić' />
                <alias key='&quot;Scott McKenna&quot;' value='S.McKenna' />
                <alias key='&quot;Scott McTominay&quot;' value='S.McTominay' />
                <alias key='&quot;Sebastian Szymański&quot;' value='S.Szymański' />
                <alias key='&quot;Semih Kılıçsoy&quot;' value='S.Kılıçsoy' />
                <alias key='&quot;Sergej Milinković-Savić&quot;' value='Milinković-Savić' />
                <alias key='&quot;Serhii Sydorchuk&quot;' value='S.Sydorchuk' />
                <alias key='&quot;Silvan Widmer&quot;' value='S.Widmer' />
                <alias key='&quot;Solomon Kverkvelia&quot;' value='S.Kverkvelia' />
                <alias key='&quot;Srđan Mijailović&quot;' value='S.Mijailović' />
                <alias key='&quot;Stanislav Lobotka&quot;' value='S.Lobotka' />
                <alias key='&quot;Stefan de Vrij&quot;' value='S.de Vrij' />
                <alias key='&quot;Stefan Posch&quot;' value='S.Posch' />
                <alias key='&quot;Stephan El Shaarawy&quot;' value='S.El Shaarawy' />
                <alias key='&quot;Steven Bergwijn&quot;' value='S.Bergwijn' />
                <alias key='&quot;Steven Zuber&quot;' value='S.Zuber' />
                <alias key='&quot;Strahinja Pavlović&quot;' value='S.Pavlović' />
                <alias key='&quot;Stuart Armstrong&quot;' value='S.Armstrong' />
                <alias key='&quot;Taras Stepanenko&quot;' value='T.Stepanenko' />
                <alias key='&quot;Taras Wiktorowicz Romanczuk&quot;' value='T.Romanczuk' />
                <alias key='&quot;Taulant Sulejmanov&quot;' value='T.Sulejmanov' />
                <alias key='&quot;Theo Bernard François Hernández&quot;' value='T.Hernández' />
                <alias key='&quot;Thomas Delaney&quot;' value='T.Delaney' />
                <alias key='&quot;Thomas Müller&quot;' value='T.Müller' />
                <alias key='&quot;Thomas Strakosha&quot;' value='T.Strakosha' />
                <alias key='&quot;Tijjani Reijnders&quot;' value='T.Reijnders' />
                <alias key='&quot;Timi Elšnik&quot;' value='T.Elšnik' />
                <alias key='&quot;Timothy Castagne&quot;' value='T.Castagne' />
                <alias key='&quot;Tomáš Chorý&quot;' value='T.Chorý' />
                <alias key='&quot;Tomáš Holeš&quot;' value='T.Holeš' />
                <alias key='&quot;Tomáš Souček&quot;' value='T.Souček' />
                <alias key='&quot;Tomáš Suslov&quot;' value='T.Suslov' />
                <alias key='&quot;Toni Kroos&quot;' value='T.Kroos' />
                <alias key='&quot;Trent Alexander-Arnold&quot;' value='T.Alexander-Arnold' />
                <alias key='&quot;Unai Simón Mendibil&quot;' value='Unai Simón' />
                <alias key='&quot;Václav Černý&quot;' value='V.Černý' />
                <alias key='&quot;Valentin Mihai Mihăilă&quot;' value='V.Mihăilă' />
                <alias key='&quot;Vanja Drkušić&quot;' value='V.Drkušić' />
                <alias key='&quot;Vasile Mogoș&quot;' value='V.Mogoș' />
                <alias key='&quot;Veljko Birmančević&quot;' value='V.Birmančević' />
                <alias key='&quot;Victor Bernth Kristansen&quot;' value='V.Kristansen' />
                <alias key='&quot;Viktor Tsygankov&quot;' value='V.Tsygankov' />
                <alias key='&quot;Vincent Sierro&quot;' value='V.Sierro' />
                <alias key='&quot;Virgil van Dijk&quot;' value='Van Dijk' />
                <alias key='&quot;Vitalii Mykolenko&quot;' value='V.Mykolenko' />
                <alias key='&quot;Vitor Machado Ferreira&quot;' value='Vitinha' />
                <alias key='&quot;Vladimír Coufal&quot;' value='V.Coufal' />
                <alias key='&quot;Vladyslav Vanat&quot;' value='V.Vanat' />
                <alias key='&quot;Volodymyr Brazhko&quot;' value='V.Brazhko' />
                <alias key='&quot;Waldemar Anton&quot;' value='W.Anton' />
                <alias key='&quot;Willi Orban&quot;' value='W.Orban' />
                <alias key='&quot;William Saliba&quot;' value='W.Saliba' />
                <alias key='&quot;Wojciech Szczęsny&quot;' value='W.Szczęsny' />
                <alias key='&quot;Wout Faes&quot;' value='W.Faes' />
                <alias key='&quot;Wout Weghorst&quot;' value='W.Weghorst' />
                <alias key='&quot;Xavi Simons&quot;' value='X.Simons' />
                <alias key='&quot;Xherdan Shaqiri&quot;' value='X.Shaqiri' />
                <alias key='&quot;Yann Sommer&quot;' value='Y.Sommer' />
                <alias key='&quot;Yannick Ferreira Carrasco&quot;' value='Y.Carrasco' />
                <alias key='&quot;Ylber Ramadani&quot;' value='Y.Ramadani' />
                <alias key='&quot;Youri Tielemans&quot;' value='Y.Tielemans' />
                <alias key='&quot;Youssouf Fofana&quot;' value='Y.Fofana' />
                <alias key='&quot;Yukhym Konoplya&quot;' value='Y.Konoplya' />
                <alias key='&quot;Yunus Akgün&quot;' value='Y.Akgün' />
                <alias key='&quot;Yussuf Yurary Poulsen&quot;' value='Y.Poulsen' />
                <alias key='&quot;Yusuf Yazıcı&quot;' value='Y.Yazıcı' />
                <alias key='&quot;Žan Celar&quot;' value='Ž.Celar' />
                <alias key='&quot;Žan Karničnik&quot;' value='Ž.Karničnik' />
                <alias key='&quot;Žan Vipotnik&quot;' value='Ž.Vipotnik' />
                <alias key='&quot;Zeno Debast&quot;' value='Z.Debast' />
                <alias key='&quot;Zsolt Nagy&quot;' value='Z.Nagy' />
                <alias key='&quot;Zuriko Davitashvili&quot;' value='Z.Davitashvili' />
              </aliases>
            </column>
            <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
            <column-instance column='[LBP Attempted per90]' derivation='Sum' name='[sum:LBP Attempted per90:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LBP Attempts]' derivation='Sum' name='[sum:LBP Attempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LBP Success Rate]' derivation='Sum' name='[sum:LBP Success Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minutes_played]' derivation='Sum' name='[sum:minutes_played:qk]' pivot='key' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Maksym Talovierov&quot;' />
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Michael Ijemuan Folorunsho&quot;' />
                <groupfilter function='member' level='[none:player_name:nk]' member='&quot;Renato Steffen&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]'>
            <groupfilter function='member' level='[none:position:nk]' member='&quot;Midfield&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempts:qk]' included-values='in-range'>
            <min>3.0</min>
          </filter>
          <filter class='quantitative' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:minutes_played:qk]' included-values='in-range'>
            <min>210</min>
          </filter>
          <slices>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:minutes_played:qk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempts:qk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[Exclusions (Player Name,Team Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Success Rate:qk]' field-type='quantitative' max='1.0611464968152866' min='0.20000000000000001' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' field-type='quantitative' max='6.6765623471882645' min='0.20000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]' />
              <text column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
              <lod column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' z-order='1' />
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Success Rate:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Success Rate:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Success Rate:qk]</rows>
        <cols>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</cols>
      </table>
      <simple-id uuid='{B2AB2916-36E6-496E-8A1C-E97EB8ECDC6F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='EURO2024_player_LBP' name='federated.1a86w5g0dhintc10j2guu0rcr9kk' />
          </datasources>
          <datasource-dependencies datasource='federated.1a86w5g0dhintc10j2guu0rcr9kk'>
            <column datatype='real' name='[LBP Attempted per90]' role='measure' type='quantitative' />
            <column datatype='real' name='[LBP Attempts]' role='measure' type='quantitative' />
            <column caption='LBP Received per90' datatype='real' name='[LBP_Received_per90]' role='measure' type='quantitative' />
            <column caption='Minutes Played' datatype='integer' name='[minutes_played]' role='measure' type='quantitative' />
            <column-instance column='[LBP Attempts]' derivation='None' name='[none:LBP Attempts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minutes_played]' derivation='None' name='[none:minutes_played:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Abdülkerim Bardakcı&quot;' value='A.Bardakcı' />
                <alias key='&quot;Adam Buksa&quot;' value='A.Buksa' />
                <alias key='&quot;Adam Gnezda Čerin&quot;' value='A.Čerin' />
                <alias key='&quot;Adam Hložek&quot;' value='A.Hložek' />
                <alias key='&quot;Ádám Lang&quot;' value='Á.Lang' />
                <alias key='&quot;Ádám Nagy&quot;' value='Á.Nagy' />
                <alias key='&quot;Adam Obert&quot;' value='A.Obert' />
                <alias key='&quot;Adrián Rus&quot;' value='A.Rus' />
                <alias key='&quot;Adrien Rabiot&quot;' value='A.Rabiot' />
                <alias key='&quot;Alejandro Baena Rodríguez&quot;' value='Alex Baena' />
                <alias key='&quot;Alejandro Grimaldo García&quot;' value='Grimaldo' />
                <alias key='&quot;Aleksandar Mitrović&quot;' value='A.Mitrović' />
                <alias key='&quot;Alessandro Bastoni&quot;' value='A.Bastoni' />
                <alias key='&quot;Alexander Hartmann Bah&quot;' value='A.Bah' />
                <alias key='&quot;Alexander Prass&quot;' value='A.Prass' />
                <alias key='&quot;Alexandru Cicâldău&quot;' value='A.Cicâldău' />
                <alias key='&quot;Altay Bayındır&quot;' value='A.Bayındır' />
                <alias key='&quot;Álvaro Borja Morata Martín&quot;' value='Á.Morata' />
                <alias key='&quot;Amadou Onana&quot;' value='A.Onana' />
                <alias key='&quot;Anatolii Trubin&quot;' value='A.Trubin' />
                <alias key='&quot;András Schäfer&quot;' value='A.Schäfer' />
                <alias key='&quot;Andraž Šporar&quot;' value='A.Šporar' />
                <alias key='&quot;Andrea Cambiaso&quot;' value='A.Cambiaso' />
                <alias key='&quot;Andreas Christensen&quot;' value='A.Christensen' />
                <alias key='&quot;Andreas Skov Olsen&quot;' value='A.Olsen' />
                <alias key='&quot;Andrei Burcă Andonie&quot;' value='A.Burcă' />
                <alias key='&quot;Andrei Florin Ratiu&quot;' value='A.Ratiu' />
                <alias key='&quot;Andrej Kramarić&quot;' value='A.Kramarić' />
                <alias key='&quot;Andrew Robertson&quot;' value='A.Robertson' />
                <alias key='&quot;Andrija Živković&quot;' value='A.Živković' />
                <alias key='&quot;Andriy Lunin&quot;' value='A.Lunin' />
                <alias key='&quot;Andriy Yarmolenko&quot;' value='A.Yarmolenko' />
                <alias key='&quot;Angus Gunn&quot;' value='A.Gunn' />
                <alias key='&quot;Ante Budimir&quot;' value='A.Budimir' />
                <alias key='&quot;Anthony Gordon&quot;' value='A.Gordon' />
                <alias key='&quot;Anthony Ralston&quot;' value='A.Ralston' />
                <alias key='&quot;Antoine Griezmann&quot;' value='A.Griezmann' />
                <alias key='&quot;Antonín Barák&quot;' value='A.Barák' />
                <alias key='&quot;António João Pereira Albuquerque Tavares Silva&quot;' value='A.Silva' />
                <alias key='&quot;Antonio Rüdiger&quot;' value='A.Rüdiger' />
                <alias key='&quot;Anzor Mekvabishvili&quot;' value='A.Mekvabishvili' />
                <alias key='&quot;Arbër Hoxha&quot;' value='A.Hoxha' />
                <alias key='&quot;Arda Güler&quot;' value='A.Güler' />
                <alias key='&quot;Arlind Afrim Ajeti&quot;' value='A.Ajeti' />
                <alias key='&quot;Armando Broja&quot;' value='A.Broja' />
                <alias key='&quot;Artem Dovbyk&quot;' value='A.Dovbyk' />
                <alias key='&quot;Arthur Theate&quot;' value='A.Theate' />
                <alias key='&quot;Attila Fiola&quot;' value='A.Fiola' />
                <alias key='&quot;Attila Szalai&quot;' value='A.Szalai' />
                <alias key='&quot;Aurélien Djani Tchouaméni&quot;' value='A.Tchouaméni' />
                <alias key='&quot;Aymeric Laporte&quot;' value='A.Laporte' />
                <alias key='&quot;Ayoze Pérez Gutiérrez&quot;' value='A.Pérez' />
                <alias key='&quot;Barış Alper Yılmaz&quot;' value='B.Yılmaz' />
                <alias key='&quot;Barnabás Varga&quot;' value='B.Varga' />
                <alias key='&quot;Bart Verbruggen&quot;' value='B.Verbruggen' />
                <alias key='&quot;Bartosz Bereszyński&quot;' value='B.Bereszyński' />
                <alias key='&quot;Bartosz Salamon&quot;' value='B.Salamon' />
                <alias key='&quot;Bartosz Slisz&quot;' value='B.Slisz' />
                <alias key='&quot;Bendegúz Bolla&quot;' value='B.Bolla' />
                <alias key='&quot;Benjamin Henrichs&quot;' value='B.Henrichs' />
                <alias key='&quot;Benjamin Šeško&quot;' value='B.Šeško' />
                <alias key='&quot;Benjamin Verbič&quot;' value='B.Verbič' />
                <alias key='&quot;Berat Djimsiti&quot;' value='B.Djimsiti' />
                <alias key='&quot;Bernardo Mota Veiga de Carvalho e Silva&quot;' value='B.Silva' />
                <alias key='&quot;Billy Gilmour&quot;' value='B.Gilmour' />
                <alias key='&quot;Bogdan Racovițan&quot;' value='B.Racovițan' />
                <alias key='&quot;Borna Sosa&quot;' value='B.Sosa' />
                <alias key='&quot;Bradley Barcola&quot;' value='B.Barcola' />
                <alias key='&quot;Breel-Donald Embolo&quot;' value='B.Embolo' />
                <alias key='&quot;Bruno Miguel Borges Fernandes&quot;' value='B.Fernandes' />
                <alias key='&quot;Bruno Petković&quot;' value='B.Petković' />
                <alias key='&quot;Bryan Cristante&quot;' value='B.Cristante' />
                <alias key='&quot;Budu Zivzivadze&quot;' value='B.Zivzivadze' />
                <alias key='&quot;Bukayo Saka&quot;' value='B.Saka' />
                <alias key='&quot;Callum McGregor&quot;' value='C.McGregor' />
                <alias key='&quot;Callum Styles&quot;' value='C.Styles' />
                <alias key='&quot;Cenk Tosun&quot;' value='C.Tosun' />
                <alias key='&quot;Chris Führich&quot;' value='C.Führich' />
                <alias key='&quot;Christian Dannemann Eriksen&quot;' value='C.Eriksen' />
                <alias key='&quot;Christian Nørgaard&quot;' value='C.Nørgaard' />
                <alias key='&quot;Christoph Baumgartner&quot;' value='C.Baumgartner' />
                <alias key='&quot;Cody Mathès Gakpo&quot;' value='C.Gakpo' />
                <alias key='&quot;Cole Palmer&quot;' value='C.Palmer' />
                <alias key='&quot;Conor Gallagher&quot;' value='C.Gallagher' />
                <alias key='&quot;Cristiano Ronaldo dos Santos Aveiro&quot;' value='Cristiano Ronaldo' />
                <alias key='&quot;Daniel Carvajal Ramos&quot;' value='D.Carvajal' />
                <alias key='&quot;Dániel Gazdag&quot;' value='D.Gazdag' />
                <alias key='&quot;Daniel Olmo Carvajal&quot;' value='D.Olmo' />
                <alias key='&quot;Daniel Vivian Moreno&quot;' value='D.Vivian' />
                <alias key='&quot;Danilo Luís Hélio Pereira&quot;' value='Danilo Pereira' />
                <alias key='&quot;Darius Dumitru Olaru&quot;' value='D.Olaru' />
                <alias key='&quot;David Doudera&quot;' value='D.Doudera' />
                <alias key='&quot;Dávid Ďuriš&quot;' value='D.Ďuriš' />
                <alias key='&quot;Dávid Hancko&quot;' value='D.Hancko' />
                <alias key='&quot;David Jurásek&quot;' value='D.Jurásek' />
                <alias key='&quot;David Raum&quot;' value='D.Raum' />
                <alias key='&quot;David Raya Martin&quot;' value='David Raya' />
                <alias key='&quot;David Strelec&quot;' value='D.Strelec' />
                <alias key='&quot;Davide Frattesi&quot;' value='D.Frattesi' />
                <alias key='&quot;Dayotchanculle Upamecano&quot;' value='D.Upamecano' />
                <alias key='&quot;Declan Rice&quot;' value='D.Rice' />
                <alias key='&quot;Deian Cristian Sorescu&quot;' value='D.Sorescu' />
                <alias key='&quot;Denis Alibec&quot;' value='D.Alibec' />
                <alias key='&quot;Denis Lemi Zakaria Lako Lado&quot;' value='Zakaria' />
                <alias key='&quot;Denis Mihai Drăguş&quot;' value='D.Drăguş' />
                <alias key='&quot;Denis Vavro&quot;' value='D.Vavro' />
                <alias key='&quot;Deniz Undav&quot;' value='D.Undav' />
                <alias key='&quot;Dennis Man&quot;' value='D.Man' />
                <alias key='&quot;Denzel Dumfries&quot;' value='D.Dumfries' />
                <alias key='&quot;Diogo José Teixeira da Silva&quot;' value='Diogo Jota' />
                <alias key='&quot;Diogo Meireles Costa&quot;' value='Diogo Costa' />
                <alias key='&quot;Dodi Lukebakio&quot;' value='D.Lukebakio' />
                <alias key='&quot;Dominik Livaković&quot;' value='D.Livaković' />
                <alias key='&quot;Dominik Szoboszlai&quot;' value='D.Szoboszlai' />
                <alias key='&quot;Donyell Malen&quot;' value='D.Malen' />
                <alias key='&quot;Dušan Tadić&quot;' value='D.Tadić' />
                <alias key='&quot;Dušan Vlahović&quot;' value='D.Vlahović' />
                <alias key='&quot;Eberechi Eze&quot;' value='E.Eze' />
                <alias key='&quot;Eduardo Camavinga&quot;' value='E.Camavinga' />
                <alias key='&quot;Elseid Hysaj&quot;' value='E.Hysaj' />
                <alias key='&quot;Emre Can&quot;' value='E.Can' />
                <alias key='&quot;Endre Botka&quot;' value='E.Botka' />
                <alias key='&quot;Erik Janža&quot;' value='E.Janža' />
                <alias key='&quot;Ernest Muçi&quot;' value='E.Muçi' />
                <alias key='&quot;Ezri Konsa Ngoyo&quot;' value='E.Konsa' />
                <alias key='&quot;Fabian Lukas Schär&quot;' value='F.Schär' />
                <alias key='&quot;Fabian Rieder&quot;' value='F.Rieder' />
                <alias key='&quot;Fabián Ruiz Peña&quot;' value='Fabián Ruiz' />
                <alias key='&quot;Federico Chiesa&quot;' value='F.Chiesa' />
                <alias key='&quot;Federico Dimarco&quot;' value='F.Dimarco' />
                <alias key='&quot;Fehmi Mert Günok&quot;' value='F.Günok' />
                <alias key='&quot;Ferdi Erenay Kadıoğlu&quot;' value='Kadıoğlu' />
                <alias key='&quot;Fermin Lopez Marin&quot;' value='F.Lopez' />
                <alias key='&quot;Ferrán Torres García&quot;' value='F.Torres' />
                <alias key='&quot;Filip Kostić&quot;' value='F.Kostić' />
                <alias key='&quot;Filip Mladenović&quot;' value='F.Mladenović' />
                <alias key='&quot;Florian Grillitsch&quot;' value='F.Grillitsch' />
                <alias key='&quot;Florian Wirtz&quot;' value='F.Wirtz' />
                <alias key='&quot;Florin Constantin Niţă&quot;' value='F.Niţă' />
                <alias key='&quot;Florinel Teodor Coman&quot;' value='F.Coman' />
                <alias key='&quot;Francisco Fernandes Conceição&quot;' value='F.Conceição' />
                <alias key='&quot;George Alexandru Puşcaş&quot;' value='G.Puşcaş' />
                <alias key='&quot;Georges Mikautadze&quot;' value='G.Mikautadze' />
                <alias key='&quot;Georginio Wijnaldum&quot;' value='G.Wijnaldum' />
                <alias key='&quot;Georgiy Sudakov&quot;' value='G.Sudakov' />
                <alias key='&quot;Gernot Trauner&quot;' value='G.Trauner' />
                <alias key='&quot;Giacomo Raspadori&quot;' value='G.Raspadori' />
                <alias key='&quot;Gianluca Mancini&quot;' value='G.Mancini' />
                <alias key='&quot;Gianluca Scamacca&quot;' value='G.Scamacca' />
                <alias key='&quot;Gianluigi Donnarumma&quot;' value='G.Donnarumma' />
                <alias key='&quot;Giorgi Chakvetadze&quot;' value='G.Chakvetadze' />
                <alias key='&quot;Giorgi Gvelesiani&quot;' value='G.Gvelesiani' />
                <alias key='&quot;Giorgi Kochorashvili&quot;' value='G.Kochorashvili' />
                <alias key='&quot;Giorgi Kvilitaia&quot;' value='G.Kvilitaia' />
                <alias key='&quot;Giorgi Mamardashvili&quot;' value='G.Mamardashvili' />
                <alias key='&quot;Giovanni Di Lorenzo&quot;' value='Di Lorenzo' />
                <alias key='&quot;Gonçalo Bernardo Inácio&quot;' value='G.Inácio' />
                <alias key='&quot;Gonçalo Matias Ramos&quot;' value='G.Ramos' />
                <alias key='&quot;Granit Xhaka&quot;' value='G.Xhaka' />
                <alias key='&quot;Grant Campbell Hanley&quot;' value='G.Hanley' />
                <alias key='&quot;Guram Kashia&quot;' value='G.Kashia' />
                <alias key='&quot;Hakan Çalhanoğlu&quot;' value='H.Çalhanoğlu' />
                <alias key='&quot;Heorhii Tsitaishvili&quot;' value='H.Tsitaishvili' />
                <alias key='&quot;Ianis Hagi&quot;' value='I.Hagi' />
                <alias key='&quot;Ikoma Loïs Openda&quot;' value='Openda' />
                <alias key='&quot;İlkay Gündoğan&quot;' value='İ.Gündoğan' />
                <alias key='&quot;Illia Zabarnyi&quot;' value='I.Zabarnyi' />
                <alias key='&quot;İsmail Yüksek&quot;' value='İ.Yüksek' />
                <alias key='&quot;Iván Balliu Campeny&quot;' value='I.Campeny' />
                <alias key='&quot;Ivan Ilić&quot;' value='I.Ilić' />
                <alias key='&quot;Ivan Perišić&quot;' value='I.Perišić' />
                <alias key='&quot;Ivan Schranz&quot;' value='I.Schranz' />
                <alias key='&quot;Ivan Toney&quot;' value='I.Toney' />
                <alias key='&quot;Jack Hendry&quot;' value='J.Hendry' />
                <alias key='&quot;Jacob Bruun Larsen&quot;' value='J.Larsen' />
                <alias key='&quot;Jaka Bijol&quot;' value='J.Bijol' />
                <alias key='&quot;Jakub Moder&quot;' value='J.Moder' />
                <alias key='&quot;Jakub Piotr Kiwior&quot;' value='J.Kiwior' />
                <alias key='&quot;Jakub Piotrowski&quot;' value='J.Piotrowski' />
                <alias key='&quot;Jamal Musiala&quot;' value='J.Musiala' />
                <alias key='&quot;Jan Bednarek&quot;' value='J.Bednarek' />
                <alias key='&quot;Jan Kuchta&quot;' value='J.Kuchta' />
                <alias key='&quot;Jan Mlakar&quot;' value='J.Mlakar' />
                <alias key='&quot;Jan Oblak&quot;' value='J.Oblak' />
                <alias key='&quot;Jan Vertonghen&quot;' value='J.Vertonghen' />
                <alias key='&quot;Jannik Vestergaard&quot;' value='J.Vestergaard' />
                <alias key='&quot;Jarrod Bowen&quot;' value='J.Bowen' />
                <alias key='&quot;Jasir Asani&quot;' value='J.Asani' />
                <alias key='&quot;Jerdy Schouten&quot;' value='J.Schouten' />
                <alias key='&quot;Jeremie Frimpong&quot;' value='J.Frimpong' />
                <alias key='&quot;Jeremy Doku&quot;' value='J.Doku' />
                <alias key='&quot;Jesús Navas González&quot;' value='J.Navas' />
                <alias key='&quot;Jindřich Staněk&quot;' value='J.Staněk' />
                <alias key='&quot;Joachim Andersen&quot;' value='J.Andersen' />
                <alias key='&quot;Joakim Mæhle&quot;' value='J.Mæhle' />
                <alias key='&quot;João Félix Sequeira&quot;' value='João Félix' />
                <alias key='&quot;João Maria Lobo Alves Palhinha Gonçalves&quot;' value='Palhinha' />
                <alias key='&quot;João Pedro Cavaco Cancelo&quot;' value='J.Cancelo' />
                <alias key='&quot;Joey Veerman&quot;' value='J.Veerman' />
                <alias key='&quot;Johan Bakayoko&quot;' value='J.Bakayoko' />
                <alias key='&quot;John McGinn&quot;' value='J.McGinn' />
                <alias key='&quot;John Stones&quot;' value='J.Stones' />
                <alias key='&quot;Jon Gorenc Stankovič&quot;' value='J.Stankovič' />
                <alias key='&quot;Jonas Older Wind&quot;' value='J.Wind' />
                <alias key='&quot;Jonathan Tah&quot;' value='J.Tah' />
                <alias key='&quot;Jordan Pickford&quot;' value='J.Pickford' />
                <alias key='&quot;Jorge Luiz Frello Filho&quot;' value='Jorginho' />
                <alias key='&quot;José Diogo Dalot Teixeira&quot;' value='D.Dalot' />
                <alias key='&quot;José Ignacio Fernández Iglesias&quot;' value='Nacho' />
                <alias key='&quot;José Luis Sanmartín Mato&quot;' value='Joselu' />
                <alias key='&quot;Joshua Kimmich&quot;' value='J.Kimmich' />
                <alias key='&quot;Joshua Zirkzee&quot;' value='J.Zirkzee' />
                <alias key='&quot;Josip Iličić&quot;' value='J.Iličić' />
                <alias key='&quot;Josip Juranović&quot;' value='J.Juranović' />
                <alias key='&quot;Josip Stanišić&quot;' value='J.Stanišić' />
                <alias key='&quot;Josip Šutalo&quot;' value='J.Šutalo' />
                <alias key='&quot;Joško Gvardiol&quot;' value='J.Gvardiol' />
                <alias key='&quot;Jude Bellingham&quot;' value='J.Bellingham' />
                <alias key='&quot;Jules Koundé&quot;' value='J.Koundé' />
                <alias key='&quot;Juraj Kucka&quot;' value='J.Kucka' />
                <alias key='&quot;Jure Balkovec&quot;' value='J.Balkovec' />
                <alias key='&quot;Kaan Ayhan&quot;' value='K.Ayhan' />
                <alias key='&quot;Kacper Urbanski&quot;' value='K.Urbanski' />
                <alias key='&quot;Kai Havertz&quot;' value='K.Havertz' />
                <alias key='&quot;Kamil Grosicki&quot;' value='K.Grosicki' />
                <alias key='&quot;Karol Świderski&quot;' value='K.Świderski' />
                <alias key='&quot;Kasper Dolberg&quot;' value='K.Dolberg' />
                <alias key='&quot;Kasper Schmeichel&quot;' value='K.Schmeichel' />
                <alias key='&quot;Kenan Yildiz&quot;' value='K.Yildiz' />
                <alias key='&quot;Kenneth McLean&quot;' value='K.McLean' />
                <alias key='&quot;Kevin Csoboth&quot;' value='K.Csoboth' />
                <alias key='&quot;Kevin Danso&quot;' value='K.Danso' />
                <alias key='&quot;Kevin De Bruyne&quot;' value='K.De Bruyne' />
                <alias key='&quot;Khvicha Kvaratskhelia&quot;' value='K.Kvaratskhelia' />
                <alias key='&quot;Kieran Tierney&quot;' value='K.Tierney' />
                <alias key='&quot;Kieran Trippier&quot;' value='K.Trippier' />
                <alias key='&quot;Kingsley Coman&quot;' value='K.Coman' />
                <alias key='&quot;Klaus Gjasula&quot;' value='K.Gjasula' />
                <alias key='&quot;Kléper Laveran Lima Ferreira&quot;' value='Pepe' />
                <alias key='&quot;Kobbie Mainoo&quot;' value='K.Mainoo' />
                <alias key='&quot;Koen Casteels&quot;' value='K.Casteels' />
                <alias key='&quot;Konrad Laimer&quot;' value='K.Laimer' />
                <alias key='&quot;Kristjan Asllani&quot;' value='K.Asllani' />
                <alias key='&quot;Krzysztof Piątek&quot;' value='K.Piątek' />
                <alias key='&quot;Kwadwo Duah&quot;' value='K.Duah' />
                <alias key='&quot;Kyle Walker&quot;' value='K.Walker' />
                <alias key='&quot;Kylian Mbappé Lottin&quot;' value='K.Mbappé' />
                <alias key='&quot;Ladislav Krejčí&quot;' value='L.Krejčí' />
                <alias key='&quot;Lamine Yamal Nasraoui Ebana&quot;' value='L.Yamal' />
                <alias key='&quot;Lasha Dvali&quot;' value='L.Dvali' />
                <alias key='&quot;László Bénes&quot;' value='L.Bénes' />
                <alias key='&quot;László Kleinheisler&quot;' value='L.Kleinheisler' />
                <alias key='&quot;Lawrence Shankland&quot;' value='L.Shankland' />
                <alias key='&quot;Lazar Samardžić&quot;' value='L.Samardžić' />
                <alias key='&quot;Leandro Trossard&quot;' value='L.Trossard' />
                <alias key='&quot;Leo Sauer&quot;' value='L.Sauer' />
                <alias key='&quot;Leonidas Stergiou&quot;' value='L.Stergiou' />
                <alias key='&quot;Leopold Querfeld&quot;' value='L.Querfeld' />
                <alias key='&quot;Leroy Sané&quot;' value='L.Sané' />
                <alias key='&quot;Lewis Morgan&quot;' value='L.Morgan' />
                <alias key='&quot;Lorenzo Pellegrini&quot;' value='L.Pellegrini' />
                <alias key='&quot;Lovro Majer&quot;' value='L.Majer' />
                <alias key='&quot;Ľubomír Tupta&quot;' value='Ľ.Tupta' />
                <alias key='&quot;Luka Ivanušec&quot;' value='L.Ivanušec' />
                <alias key='&quot;Luka Jović&quot;' value='L.Jović' />
                <alias key='&quot;Luka Lochoshvili&quot;' value='L.Lochoshvili' />
                <alias key='&quot;Luka Modrić&quot;' value='L.Modrić' />
                <alias key='&quot;Luka Sučić&quot;' value='L.Sučić' />
                <alias key='&quot;Lukáš Haraslín&quot;' value='L.Haraslín' />
                <alias key='&quot;Lukáš Provod&quot;' value='L.Provod' />
                <alias key='&quot;Łukasz Skorupski&quot;' value='Ł.Skorupski' />
                <alias key='&quot;Luke Shaw&quot;' value='L.Shaw' />
                <alias key='&quot;Lutsharel Geertruida&quot;' value='L.Geertruida' />
                <alias key='&quot;Maksym Talovierov&quot;' value='M.Talovierov' />
                <alias key='&quot;Manuel Neuer&quot;' value='M.Neuer' />
                <alias key='&quot;Manuel Obafemi Akanji&quot;' value='M.Akanji' />
                <alias key='&quot;Marc Cucurella Saseta&quot;' value='M.Cucurella' />
                <alias key='&quot;Marc Guehi&quot;' value='M.Guehi' />
                <alias key='&quot;Marcel Sabitzer&quot;' value='M.Sabitzer' />
                <alias key='&quot;Marcelo Brozović&quot;' value='M.Brozović' />
                <alias key='&quot;Marcus Thuram&quot;' value='M.Thuram' />
                <alias key='&quot;Marin Pongracic&quot;' value='M.Pongracic' />
                <alias key='&quot;Mario Mitaj&quot;' value='M.Mitaj' />
                <alias key='&quot;Mario Pašalić&quot;' value='M.Pašalić' />
                <alias key='&quot;Marius Mihai Marin&quot;' value='M.Marin' />
                <alias key='&quot;Marko Arnautović&quot;' value='M.Arnautović' />
                <alias key='&quot;Martin Ádám&quot;' value='M.Ádám' />
                <alias key='&quot;Martin Baturina&quot;' value='M.Baturina' />
                <alias key='&quot;Martin Dúbravka&quot;' value='M.Dúbravka' />
                <alias key='&quot;Martín Zubimendi Ibáñez&quot;' value='M.Zubimendi' />
                <alias key='&quot;Márton Dárdai&quot;' value='M.Dárdai' />
                <alias key='&quot;Matěj Jurásek&quot;' value='M.Jurásek' />
                <alias key='&quot;Matěj Kovář&quot;' value='M.Kovář' />
                <alias key='&quot;Mateo Kovačić&quot;' value='M.Kovačić' />
                <alias key='&quot;Mateo Retegui&quot;' value='M.Retegui' />
                <alias key='&quot;Matheus Luiz Nunes&quot;' value='M.Nunes' />
                <alias key='&quot;Matteo Darmian&quot;' value='M.Darmian' />
                <alias key='&quot;Mattia Zaccagni&quot;' value='M.Zaccagni' />
                <alias key='&quot;Matúš Bero&quot;' value='M.Bero' />
                <alias key='&quot;Maximilian Beier&quot;' value='M.Beier' />
                <alias key='&quot;Maximilian Mittelstädt&quot;' value='M.Mittelstädt' />
                <alias key='&quot;Maximilian Wöber&quot;' value='M.Wöber' />
                <alias key='&quot;Medon Berisha&quot;' value='M.Berisha' />
                <alias key='&quot;Mehmet Zeki Çelik&quot;' value='M.Çelik' />
                <alias key='&quot;Memphis Depay&quot;' value='M.Depay' />
                <alias key='&quot;Merih Demiral&quot;' value='M.Demiral' />
                <alias key='&quot;Mert Müldür&quot;' value='M.Müldür' />
                <alias key='&quot;Michael Gregoritsch&quot;' value='M.Gregoritsch' />
                <alias key='&quot;Michael Ijemuan Folorunsho&quot;' value='M.Folorunsho' />
                <alias key='&quot;Michał Skóraś&quot;' value='M.Skóraś' />
                <alias key='&quot;Michel Aebischer&quot;' value='M.Aebischer' />
                <alias key='&quot;Micky van de Ven&quot;' value='M.van de Ven' />
                <alias key='&quot;Mijat Gaćinović&quot;' value='M.Gaćinović' />
                <alias key='&quot;Mike Maignan&quot;' value='M.Maignan' />
                <alias key='&quot;Mikel Merino Zazón&quot;' value='M.Merino' />
                <alias key='&quot;Mikel Oyarzabal Ugarte&quot;' value='M.Oyarzabal' />
                <alias key='&quot;Mikkel Damsgaard&quot;' value='M.Damsgaard' />
                <alias key='&quot;Milan Škriniar&quot;' value='M.Škriniar' />
                <alias key='&quot;Milos Kerkez&quot;' value='M.Kerkez' />
                <alias key='&quot;Milos Veljkovic&quot;' value='M.Veljkovic' />
                <alias key='&quot;Mirlind Daku&quot;' value='M.Daku' />
                <alias key='&quot;Mohamed Zeki Amdouni&quot;' value='M.Amdouni' />
                <alias key='&quot;Mojmír Chytil&quot;' value='M.Chytil' />
                <alias key='&quot;Morten Hjulmand&quot;' value='M.Hjulmand' />
                <alias key='&quot;Muhammed Kerem Aktürkoğlu&quot;' value='M.Aktürkoğlu' />
                <alias key='&quot;Mykhailo Mudryk&quot;' value='M.Mudryk' />
                <alias key='&quot;Mykola Matvienko&quot;' value='M.Matvienko' />
                <alias key='&quot;Mykola Shaparenko&quot;' value='M.Shaparenko' />
                <alias key='&quot;N&apos;Golo Kanté&quot;' value='N.Kanté' />
                <alias key='&quot;Nathan Aké&quot;' value='N.Aké' />
                <alias key='&quot;Nedim Bajrami&quot;' value='N.Bajrami' />
                <alias key='&quot;Nélson Cabral Semedo&quot;' value='N.Semedo' />
                <alias key='&quot;Nemanja Gudelj&quot;' value='N.Gudelj' />
                <alias key='&quot;Nicholas Williams Arthuer&quot;' value='N.Williams' />
                <alias key='&quot;Niclas Füllkrug&quot;' value='N.Füllkrug' />
                <alias key='&quot;Nico Schlotterbeck&quot;' value='N.Schlotterbeck' />
                <alias key='&quot;Nicola Zalewski&quot;' value='N.Zalewski' />
                <alias key='&quot;Nicolae Claudiu Stanciu&quot;' value='N.Stanciu' />
                <alias key='&quot;Nicolas Seiwald&quot;' value='N.Seiwald' />
                <alias key='&quot;Nicolò Barella&quot;' value='N.Barella' />
                <alias key='&quot;Nicolò Fagioli&quot;' value='N.Fagioli' />
                <alias key='&quot;Nicușor Silviu Bancu&quot;' value='N.Bancu' />
                <alias key='&quot;Nika Kvekveskiri&quot;' value='N.Kvekveskiri' />
                <alias key='&quot;Nikola Milenković&quot;' value='N.Milenković' />
                <alias key='&quot;Norbert Gyömbér&quot;' value='N.Gyömbér' />
                <alias key='&quot;Nuno Mendes&quot;' value='N.Mendes' />
                <alias key='&quot;Okay Yokuşlu&quot;' value='O.Yokuşlu' />
                <alias key='&quot;Oleksandr Svatok&quot;' value='O.Svatok' />
                <alias key='&quot;Oleksandr Tymchyk&quot;' value='O.Tymchyk' />
                <alias key='&quot;Oleksandr Zinchenko&quot;' value='O.Zinchenko' />
                <alias key='&quot;Oleksandr Zubkov&quot;' value='O.Zubkov' />
                <alias key='&quot;Olivier Giroud&quot;' value='O.Giroud' />
                <alias key='&quot;Ollie Watkins&quot;' value='O.Watkins' />
                <alias key='&quot;Ondrej Duda&quot;' value='O.Duda' />
                <alias key='&quot;Ondřej Lingr&quot;' value='O.Lingr' />
                <alias key='&quot;Orel Mangala&quot;' value='O.Mangala' />
                <alias key='&quot;Orkun Kökçü&quot;' value='O.Kökçü' />
                <alias key='&quot;Otar Kakabadze&quot;' value='O.Kakabadze' />
                <alias key='&quot;Otar Kiteishvili&quot;' value='O.Kiteishvili' />
                <alias key='&quot;Ousmane Dembélé&quot;' value='O.Dembélé' />
                <alias key='&quot;Pascal Groß&quot;' value='P.Groß' />
                <alias key='&quot;Patrick Pentz&quot;' value='P.Pentz' />
                <alias key='&quot;Patrick Wimmer&quot;' value='P.Wimmer' />
                <alias key='&quot;Patrik Schick&quot;' value='P.Schick' />
                <alias key='&quot;Pavel Šulc&quot;' value='P.Šulc' />
                <alias key='&quot;Paweł Dawidowicz&quot;' value='P.Dawidowicz' />
                <alias key='&quot;Pedro González López&quot;' value='Pedri' />
                <alias key='&quot;Pedro Lomba Neto&quot;' value='P.Neto' />
                <alias key='&quot;Petar Stojanović&quot;' value='P.Stojanović' />
                <alias key='&quot;Péter Gulácsi&quot;' value='P.Gulácsi' />
                <alias key='&quot;Peter Pekarík&quot;' value='P.Pekarík' />
                <alias key='&quot;Petr Ševčík&quot;' value='P.Ševčík' />
                <alias key='&quot;Phil Foden&quot;' value='P.Foden' />
                <alias key='&quot;Philipp Lienhart&quot;' value='P.Lienhart' />
                <alias key='&quot;Philipp Mwene&quot;' value='P.Mwene' />
                <alias key='&quot;Pierre-Emile Højbjerg&quot;' value='P.Højbjerg' />
                <alias key='&quot;Piotr Zieliński&quot;' value='P.Zieliński' />
                <alias key='&quot;Predrag Rajković&quot;' value='P.Rajković' />
                <alias key='&quot;Przemysław Frankowski&quot;' value='P.Frankowski' />
                <alias key='&quot;Qazim Laçi&quot;' value='Q.Laçi' />
                <alias key='&quot;Radu Drăgușin&quot;' value='R.Drăgușin' />
                <alias key='&quot;Rafael Alexandre Conceição Leão&quot;' value='R.Leão' />
                <alias key='&quot;Randal Kolo Muani&quot;' value='K.Muani' />
                <alias key='&quot;Rasmus Winther Højlund&quot;' value='R.Højlund' />
                <alias key='&quot;Răzvan Gabriel Marin&quot;' value='R.Marin' />
                <alias key='&quot;Remo Freuler&quot;' value='R.Freuler' />
                <alias key='&quot;Renato Steffen&quot;' value='R.Steffen' />
                <alias key='&quot;Rey Manaj&quot;' value='R.Manaj' />
                <alias key='&quot;Ricardo Iván Rodríguez Araya&quot;' value='R.Rodríguez' />
                <alias key='&quot;Riccardo Calafiori&quot;' value='R.Calafiori' />
                <alias key='&quot;Robert Andrich&quot;' value='R.Andrich' />
                <alias key='&quot;Róbert Boženík&quot;' value='R.Boženík' />
                <alias key='&quot;Robert Lewandowski&quot;' value='R.Lewandowski' />
                <alias key='&quot;Robin Aime Robert Le Normand&quot;' value='Le Normand' />
                <alias key='&quot;Robin Hranáč&quot;' value='R.Hranáč' />
                <alias key='&quot;Rodrigo Hernández Cascante&quot;' value='Rodri' />
                <alias key='&quot;Roland Sallai&quot;' value='R.Sallai' />
                <alias key='&quot;Roman Yaremchuk&quot;' value='R.Yaremchuk' />
                <alias key='&quot;Romano Schmid&quot;' value='R.Schmid' />
                <alias key='&quot;Romelu Lukaku Menama&quot;' value='R.Lukaku' />
                <alias key='&quot;Rúben Diogo Da Silva Neves&quot;' value='R.Neves' />
                <alias key='&quot;Rúben Santos Gato Alves Dias&quot;' value='R.Dias' />
                <alias key='&quot;Ruben Vargas&quot;' value='R.Vargas' />
                <alias key='&quot;Ruslan Malinovskiy&quot;' value='R.Malinovskiy' />
                <alias key='&quot;Ryan Christie&quot;' value='R.Christie' />
                <alias key='&quot;Ryan Porteous&quot;' value='R.Porteous' />
                <alias key='&quot;Saba Lobzhanidze&quot;' value='S.Lobzhanidze' />
                <alias key='&quot;Salih Özcan&quot;' value='S.Özcan' />
                <alias key='&quot;Samet Akaydin&quot;' value='S.Akaydin' />
                <alias key='&quot;Sandro Altunashvili&quot;' value='S.Altunashvili' />
                <alias key='&quot;Saša Lukić&quot;' value='S.Lukić' />
                <alias key='&quot;Scott McKenna&quot;' value='S.McKenna' />
                <alias key='&quot;Scott McTominay&quot;' value='S.McTominay' />
                <alias key='&quot;Sebastian Szymański&quot;' value='S.Szymański' />
                <alias key='&quot;Semih Kılıçsoy&quot;' value='S.Kılıçsoy' />
                <alias key='&quot;Sergej Milinković-Savić&quot;' value='Milinković-Savić' />
                <alias key='&quot;Serhii Sydorchuk&quot;' value='S.Sydorchuk' />
                <alias key='&quot;Silvan Widmer&quot;' value='S.Widmer' />
                <alias key='&quot;Solomon Kverkvelia&quot;' value='S.Kverkvelia' />
                <alias key='&quot;Srđan Mijailović&quot;' value='S.Mijailović' />
                <alias key='&quot;Stanislav Lobotka&quot;' value='S.Lobotka' />
                <alias key='&quot;Stefan de Vrij&quot;' value='S.de Vrij' />
                <alias key='&quot;Stefan Posch&quot;' value='S.Posch' />
                <alias key='&quot;Stephan El Shaarawy&quot;' value='S.El Shaarawy' />
                <alias key='&quot;Steven Bergwijn&quot;' value='S.Bergwijn' />
                <alias key='&quot;Steven Zuber&quot;' value='S.Zuber' />
                <alias key='&quot;Strahinja Pavlović&quot;' value='S.Pavlović' />
                <alias key='&quot;Stuart Armstrong&quot;' value='S.Armstrong' />
                <alias key='&quot;Taras Stepanenko&quot;' value='T.Stepanenko' />
                <alias key='&quot;Taras Wiktorowicz Romanczuk&quot;' value='T.Romanczuk' />
                <alias key='&quot;Taulant Sulejmanov&quot;' value='T.Sulejmanov' />
                <alias key='&quot;Theo Bernard François Hernández&quot;' value='T.Hernández' />
                <alias key='&quot;Thomas Delaney&quot;' value='T.Delaney' />
                <alias key='&quot;Thomas Müller&quot;' value='T.Müller' />
                <alias key='&quot;Thomas Strakosha&quot;' value='T.Strakosha' />
                <alias key='&quot;Tijjani Reijnders&quot;' value='T.Reijnders' />
                <alias key='&quot;Timi Elšnik&quot;' value='T.Elšnik' />
                <alias key='&quot;Timothy Castagne&quot;' value='T.Castagne' />
                <alias key='&quot;Tomáš Chorý&quot;' value='T.Chorý' />
                <alias key='&quot;Tomáš Holeš&quot;' value='T.Holeš' />
                <alias key='&quot;Tomáš Souček&quot;' value='T.Souček' />
                <alias key='&quot;Tomáš Suslov&quot;' value='T.Suslov' />
                <alias key='&quot;Toni Kroos&quot;' value='T.Kroos' />
                <alias key='&quot;Trent Alexander-Arnold&quot;' value='T.Alexander-Arnold' />
                <alias key='&quot;Unai Simón Mendibil&quot;' value='Unai Simón' />
                <alias key='&quot;Václav Černý&quot;' value='V.Černý' />
                <alias key='&quot;Valentin Mihai Mihăilă&quot;' value='V.Mihăilă' />
                <alias key='&quot;Vanja Drkušić&quot;' value='V.Drkušić' />
                <alias key='&quot;Vasile Mogoș&quot;' value='V.Mogoș' />
                <alias key='&quot;Veljko Birmančević&quot;' value='V.Birmančević' />
                <alias key='&quot;Victor Bernth Kristansen&quot;' value='V.Kristansen' />
                <alias key='&quot;Viktor Tsygankov&quot;' value='V.Tsygankov' />
                <alias key='&quot;Vincent Sierro&quot;' value='V.Sierro' />
                <alias key='&quot;Virgil van Dijk&quot;' value='Van Dijk' />
                <alias key='&quot;Vitalii Mykolenko&quot;' value='V.Mykolenko' />
                <alias key='&quot;Vitor Machado Ferreira&quot;' value='Vitinha' />
                <alias key='&quot;Vladimír Coufal&quot;' value='V.Coufal' />
                <alias key='&quot;Vladyslav Vanat&quot;' value='V.Vanat' />
                <alias key='&quot;Volodymyr Brazhko&quot;' value='V.Brazhko' />
                <alias key='&quot;Waldemar Anton&quot;' value='W.Anton' />
                <alias key='&quot;Willi Orban&quot;' value='W.Orban' />
                <alias key='&quot;William Saliba&quot;' value='W.Saliba' />
                <alias key='&quot;Wojciech Szczęsny&quot;' value='W.Szczęsny' />
                <alias key='&quot;Wout Faes&quot;' value='W.Faes' />
                <alias key='&quot;Wout Weghorst&quot;' value='W.Weghorst' />
                <alias key='&quot;Xavi Simons&quot;' value='X.Simons' />
                <alias key='&quot;Xherdan Shaqiri&quot;' value='X.Shaqiri' />
                <alias key='&quot;Yann Sommer&quot;' value='Y.Sommer' />
                <alias key='&quot;Yannick Ferreira Carrasco&quot;' value='Y.Carrasco' />
                <alias key='&quot;Ylber Ramadani&quot;' value='Y.Ramadani' />
                <alias key='&quot;Youri Tielemans&quot;' value='Y.Tielemans' />
                <alias key='&quot;Youssouf Fofana&quot;' value='Y.Fofana' />
                <alias key='&quot;Yukhym Konoplya&quot;' value='Y.Konoplya' />
                <alias key='&quot;Yunus Akgün&quot;' value='Y.Akgün' />
                <alias key='&quot;Yussuf Yurary Poulsen&quot;' value='Y.Poulsen' />
                <alias key='&quot;Yusuf Yazıcı&quot;' value='Y.Yazıcı' />
                <alias key='&quot;Žan Celar&quot;' value='Ž.Celar' />
                <alias key='&quot;Žan Karničnik&quot;' value='Ž.Karničnik' />
                <alias key='&quot;Žan Vipotnik&quot;' value='Ž.Vipotnik' />
                <alias key='&quot;Zeno Debast&quot;' value='Z.Debast' />
                <alias key='&quot;Zsolt Nagy&quot;' value='Z.Nagy' />
                <alias key='&quot;Zuriko Davitashvili&quot;' value='Z.Davitashvili' />
              </aliases>
            </column>
            <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
            <column-instance column='[LBP Attempted per90]' derivation='Sum' name='[sum:LBP Attempted per90:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LBP_Received_per90]' derivation='Sum' name='[sum:LBP_Received_per90:qk]' pivot='key' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:LBP Attempts:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:minutes_played:qk]' included-values='in-range'>
            <min>210</min>
          </filter>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player_name:nk]' />
              <groupfilter function='member' level='[none:player_name:nk]' member='&quot;John McGinn&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]'>
            <groupfilter function='member' level='[none:position:nk]' member='&quot;Midfield&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:minutes_played:qk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[Exclusions (Player Name,Team Name)]</column>
            <column>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:LBP Attempts:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' value='41' />
            <format attr='width' field='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP_Received_per90:qk]' value='44' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]' />
              <lod column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]' z-order='1' />
            <reference-line axis-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP_Received_per90:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP_Received_per90:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP_Received_per90:qk]</rows>
        <cols>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[sum:LBP Attempted per90:qk]</cols>
      </table>
      <simple-id uuid='{8B2E0CC5-8F46-4906-A78C-569B6411C597}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold' fontsize='18'>Line-Breaking Passes By Teams</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>EURO 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EURO2024_team_LBP' name='federated.0w793r30yfe3nk1b5vwnb1nrctgu' />
          </datasources>
          <datasource-dependencies datasource='federated.0w793r30yfe3nk1b5vwnb1nrctgu'>
            <column datatype='real' name='[LBP Attempt per Match]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pass Per Match]' role='measure' type='quantitative' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[LBP Attempt per Match]' derivation='Sum' name='[sum:LBP Attempt per Match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pass Per Match]' derivation='Sum' name='[sum:Pass Per Match:qk]' pivot='key' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]' field-type='quantitative' max='714.46370883807469' min='200.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' field-type='quantitative' max='22.032963036728439' min='2.2000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]' value='47' />
            <format attr='width' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' value='44' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#00000067' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]' />
              <text column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]' />
              <lod column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]' z-order='1' />
            <reference-line axis-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' z-order='2' />
            <customized-label>
              <formatted-text>
                <run>-&lt;</run>
                <run>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-family' value='Tableau Semibold' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='3.6132595539093018' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</rows>
        <cols>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Scotland&quot;</value>
                <value>5.6699999999999999</value>
                <value>310.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='22' y='5' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Belgium&quot;</value>
                <value>13.75</value>
                <value>455.75</value>
              </tuple>
            </tuple-reference>
            <label-position x='21' y='7' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Serbia&quot;</value>
                <value>13.0</value>
                <value>465.32999999999998</value>
              </tuple>
            </tuple-reference>
            <label-position x='18' y='0.189189' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Croatia&quot;</value>
                <value>14.67</value>
                <value>517.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='23' y='0.189189' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</field>
                  <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Pass Per Match:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Austria&quot;</value>
                <value>19.25</value>
                <value>420.25</value>
              </tuple>
            </tuple-reference>
            <label-position x='24' y='0.216216' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{F33C093D-0657-49B1-808F-E41CE79893F1}' />
    </worksheet>
    <worksheet name='Sheet 5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='EURO2024_team_LBP' name='federated.0w793r30yfe3nk1b5vwnb1nrctgu' />
          </datasources>
          <datasource-dependencies datasource='federated.0w793r30yfe3nk1b5vwnb1nrctgu'>
            <column datatype='real' name='[LBP Attempt per Match]' role='measure' type='quantitative' />
            <column datatype='real' name='[Success Rate]' role='measure' type='quantitative' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[LBP Attempt per Match]' derivation='Sum' name='[sum:LBP Attempt per Match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Success Rate]' derivation='Sum' name='[sum:Success Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Success Rate:qk]' field-type='quantitative' max='1.0055534690963448' min='0.59999999999999998' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' field-type='quantitative' max='21.713217112180931' min='2.5' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Success Rate:qk]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#00000067' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]' />
              <lod column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Success Rate:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Success Rate:qk]' z-order='1' />
            <reference-line axis-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.7292816638946533' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:Success Rate:qk]</rows>
        <cols>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[sum:LBP Attempt per Match:qk]</cols>
      </table>
      <simple-id uuid='{CC5259B8-D0B8-4D80-A5FD-D0EF984930FB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='3' name='Mid' w='98828' x='586' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12760' id='5' is-centered='0' is-scaled='1' param='C:/Users/LINWEI~1/AppData/Local/Temp/TableauTemp/01eiglb0pr0fv717hg9so1x1lwef/Sheets1/Image/EURO 2024.jpeg' type-v2='bitmap' w='6223' x='93265' y='781' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='8' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='98' h='12760' id='5' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/LINWEI~1/AppData/Local/Temp/TableauTemp/01eiglb0pr0fv717hg9so1x1lwef/Sheets1/Image/EURO 2024.jpeg' type-v2='bitmap' w='6223' x='93265' y='781'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Mid' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1248DB7C-E209-44DA-9F5A-99C2A087DC36}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='3' name='Sheet 5' w='98828' x='586' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10938' id='5' is-centered='0' is-scaled='1' param='E:/downloads/euro-2024.png' type-v2='bitmap' w='4905' x='94436' y='1042' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='6' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Sheet 5' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='84' h='10938' id='5' is-centered='0' is-fixed='true' is-scaled='1' param='E:/downloads/euro-2024.png' type-v2='bitmap' w='4905' x='94436' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5CD48E77-523B-4768-9722-F077EFCDEBDF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50DDEA10-1DF4-44D8-AEFC-2C488F05B3D0}' />
    </window>
    <window class='worksheet' name='Mid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7043C3DD-BB56-442C-8C74-D02F650F872D}' />
    </window>
    <window class='worksheet' name='Center Backs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{231FAAA0-68C3-4BD1-901A-2BF04670CD9B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:LBP Attempted per90:qk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:LBP Attempts:qk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:minutes_played:qk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:player_name:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:position:nk]</field>
            <field>[federated.1a86w5g0dhintc10j2guu0rcr9kk].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB6501E8-9328-4DA2-9E0D-E95E9FA67CC8}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C55CF76-429F-4DC8-99F3-FEADE0BC26A8}' />
    </window>
    <window class='worksheet' name='Sheet 5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w793r30yfe3nk1b5vwnb1nrctgu].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A514D1A9-ADC1-4AFC-9787-AEF30C621815}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Mid'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{7161342A-6B3B-40F8-A386-AF15336CD7FF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{F2DDB31D-DA56-412D-87AD-27554FBAC10A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Center Backs' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      hISExCnK/wedCX9sI1+VBAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      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
      Y5ZepyMrdRopCXFsL6s8aJVGIcarzz77jPb29uNdjAnpiAkgIkDlzjvvZEvVXh6//07Wvr9p
      LMolvKCqroH4mEhioyJA07CvewsO1Yez7zlN04iNiiA+OpKquoaxL7AQHpBRQJ47Yh/Ad793
      CTl720mNC+HL4grmL5w/FuUSx2jQbqenr5/p+xbbcny6icFH/hfNbse09NwRr7W9+hq2x59C
      CQ/HePIikhNi+aKkjEG7XbYAFWISO2ICePHvTxMcHs6LNd18Z0EWL768np9d+p2xKJs4Bk2t
      HSTHxw132hsXLUS76QaMp58OrpH3+E3fuwAlLBTjooXA0JjulPhYmlo7yEz23QqLQojj64i3
      gDRTGBdfdilpsTGccsa3YaBtLMoljlFXTy9REWFfP6AomM4445CjuJR9z+2/dntURBhd3b0H
      vdZsNvPb3/6WW265hb179x5VmQYGBrj77ruP6j1CHImMAvLcEa8AooIUHn74caxWGw8//P9I
      z583FuUSx8hpacH+p/uxHWpIpwYM2kCBvp+sOOTe64qqYV9+OczKHfH4ypUrWbVqFREREbhc
      Lu666y6sViu33norjz76KB0dHVx33XWsWbMGu91OUVERGzduRKfT8ac//YnAwEA++ugj1q9f
      T1ZWFj/5yU98UwFiypBRQJ47YgI4/9Kf7fc/J19uKfVhcYS3aH39OP/7Ido3Lby372zf+eFH
      h37a7Ua78MLh/69evZrExESc+yaQnX/++Zx66ql88sknRERE8NRTT+FyufjVr37F008/TXl5
      OVdccQX//Oc/uf/++7n66qvRNI2KigrOPvts/P39efPNNyUBiGMmawF57iiXZ3Szc2cpJ8yb
      7ZvSCK/RpyQT/M7r6JSD7/Jpbhd9P1gOQMg/VqPoD/41UDUVP/fXlwbLlw+9vqSkhGeffZbp
      06cTExNDTEwMP/rRj4iJieGhhx7itddeIy8vj5qaGhYsWEBVVRW33XYbDQ1fjyp68MEHOeec
      c9izZ493v7QYVxxOJ5b2TqwOJzanC52iEOxvIioshLCQYK9NKpVRQJ47YgJY+9LTbK9oHP7/
      rJNOO+Tr+rpaaewYJDcrFZetn/KqOoLDI0mdluC90opRCwgOwj4tgZCgwOHHNLcbdLqhTmCd
      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
    </thumbnail>
    <thumbnail height='384' name='Mid' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Player' width='384'>
      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
      VRVTp07FYDDw6aefNnjvt956i4iICMrKynj99de55pprKCkp4csvv6Smpoavv/4agK+//hqH
      w+F/rcPlpGfML1ySup9L/X8yGVv/p0fdn3DLL7hcngafRwhBdm4B9917L2tXrkD1OqmbO65g
      cNcSteQrPPc9TElxySmPn0GvR2cyoRiNGAYPQistwzj2Utxff4Pp6qvAaEQxGRsdhQZgNBpQ
      TEYwGjBdNRnP8hUYx16KlpePYfgwFKMRncmE1kaPauUdgHTeqKysRKfTERQURHFxMYmJiec6
      pA6vvjKqEILIyEgGDx7MK6+80mAWstVq5fHHHyc7O5uPPvqI1NRURo8efdK+cnJySE1NJT4+
      ntraWv9zBJfLxcKFC6mpqcHlqqvvVV5ezltvvcWll15Kly5d+PLLL5kwYQJBQUGMHTuWl19+
      mSuvvJKvvvqKa665hv3793PDDTfgOTaKKzRI49P/eY0gY/NlEUprL8dg+G2D36maxgcffEDW
      wV+auMJXCNm6jeJPFxFz/73N3gVox46doiioOUdRgoJQ9+zBMKA/vu3bMQwfemx7868H8G3f
      iaFfH9Q9e1CiolCPZGFI693s61tK3gFI59zy5cvZsWMHUFcGYeHChSf1lx48eJBp06Y1u1D6
      +vXr2bJlC1VVVXz88cdnFMNrr71GTU3NmQcf4HQ6HV27diUzMxOj0UhkZORJI+zqSxCkpqZy
      9913s2HDBgD/usX1/7VYLP4TfL2Kigq+++47ZsyYwfXXX+8fLWU0GomJiSEnJwdN04iOjqa4
      uLhubkZtrX/Vv9TUVJYuXUrv3r0bPHg2GcOxewahR6BXGv+jQ+BQLybohBFatbVO1q9d0+xx
      UQDLyh+w1zqbbQfw1uc7eObjLbxxxESlMQglLAxvjYNPlVTmzNvKc59sw+lSG31ttd3F859u
      Y868rcwXyXjstShhYVTrzLyZa+WZj7fw5uIdGA1tM2RX3gFI55zdbsflcuF0Olm0aBGPPfbY
      SVdda9as4ZprrmHVqlXceOONQN1IE6fTiclkanIYZv2CGUIIbDYber0et9uNTqfzv9ZsNnPH
      HXcETImB1qQoCrfffjtvv/02P/30EwDdu3cH4MUXX+SWW27B6/WyePFiQkNDcTgcXHXVVQQH
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
      7zC4vSl8W6sovuVnrElPZ8KObcSvvXHPb5XCNhSxKVN6dnI+RWtNTX0Toy86n+CF5/XsYKVo
      MDv6Dga781wMPQWkBQMccfYZrJswntb5j+N4910cO3ZCLAYuF3ZODuZnjsT3+XOZMmPqAYeN
      9yEB+Lj+j3/D+nSLiNYo50HavD1Bjjt2NoZSaG2T5rFoCdtdJgCtdZdrWHT1vNjqdbh2VY8d
      xx6F+4S5QEdnXmeNwFkxBd/N13UspRyLE/3jX1AJk8C69Vifbqv/5EkzFM0nnciktJRuxdMZ
      U3fjPxT1JP5wNIrXvff4fiM1leCdd9B26ZV4zjsbUETvvo+Uu+9Eufaca6UUAZ+XSDTGso3r
      +ffal/j6zDOoKBvbcZerwbItmp97gY3rNhI45yzKSoq7NRy3vqmFvy/Ywor6eLduDJRSuGvr
      SPnb39lx3GyyOh7cfT4ajzuOrPy8Ls9Jd8+X1h0JMzh+bK9mFqfXNWDuWq/qUDUSrn3gkI3f
      53EzddpkWseU0tT4NXR7COJxcDohEMCfGiQrLRWXy7VXTfrT+lQDCART93m0vX4TD8z/gG99
      /QDzAJTR0fmgTZa8+RJ17jKOzuoIJR6P73XStdaY3WhztW2bRG0dKtExGcI5fRq+yy7d53nO
      MWNwfmtMxzFt7UT/8r+QMHE1NUFbO7Zlodv3njGntablsMPwn3ISCk0sFjtoPJ0xffLf4ca2
      bWzb7tb5j8cT+6xMaLe20n7ND/Fedgnmu4sAjfeyS2i7/DsE//g7jLzc3c+1LJsXPlzIT1bf
      z8rQNr42+/Q9ncIKDMNJsLGR0X+6g6b33mf5td9n/OTxB+w4tiyLdVt38NTKVnqy3ZpSioxF
      i9k0axadS+1prUmkp9H85S9RlBbs8hpIJBI4HI6DXh9aa0zLxDB61+ntcbtJJBLdvg6HQmeh
      cyjHeCCd31nL6uVmTYPE53biy8/d53HbtrEs66BlT7+vJWDFQ1Ru3n7Q50Vb63j++Zcpnjqb
      syeV7O6N/nSvu2VZ3bpLsmwb5XLudZenOz/8Jzp3Pz3Cp5N2OGj9wkUktlXtWkqvo4NFa2if
      OJ6WH/2QirLRPVp+IZlGAWkUjS1tuztPAZTHjWv2LKzVq1GpKQBYH6/BNXsW6hPnRGtNfXsL
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 5 (2)' width='384'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='EURO2024/ALB.png'>
        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
        TkSuQmCC
      </shape>
      <shape name='EURO2024/AUT.png'>
        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
        8DfK/wOOf/ydK4BflwAAAABJRU5ErkJggg==
      </shape>
      <shape name='EURO2024/BEL.png'>
        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
        RK5CYII=
      </shape>
      <shape name='EURO2024/CRO.png'>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAmRpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAUSX1s
        UYgSKJKFZuG2SAO0W5qkEiL6gaJqJVfrokfqFUq5lmMURbiaGb73ZgYzc3k99Vw8KQt26kG3
        Kfz98xcEWqbwW7Ql2z5Xj/rji1FfXz7di5cnwSS8vgKXUzI1faMsB1NTt0MypZDLbqcSZ89h
        DMEBYp9SmM0f4Pv2C8g7o0DkrZCgQQzWzKMRi/3wA/AJXWHCMA0RoQlhCaHg+KDLZmSV3BXl
        MZfzUvhobZ9gvN/vvX3gdeYBU8YYJj72feQQaHhuLZ9QO1wsCoUahNG91V0LZp/vutGmEC4t
        NP12exJuB+/QkCe6Bk+8x9QjuGnwgh7snareRg/3z73Cd2roRiOUg1+cpXqbugClOOH60dSH
        PqXAqlaNau3gsPSAdZUnn412A+R10Ylx/r0tUjiOWiZR4ZOY+SELbsrihlJGwyyOGCkCGpE4
        jxeBc6KLeNJxw2iz2RQlDfJVRukmY1mQsXLtB1lZ+iwPFu5tO1jeCrVw9SuXvMlNcqO47cx9
        19XLqtzW9ThYM4dBnoN3Wy50a7vh8f08ymOxyugfSpama8BhFok+K+HQN1FExKxSqBJVhYIo
        9BGLQ4ZkzJW/q6pVEEbwSJb/6X0VRjsi1RqtOaEoDIMYsUoEKKRhFFFeVUISiF1FUiRW21od
        9yyr7dGq9TzHpObtg5NFUlV8rC28yk3HreaX+C/IofErEZ/J4X/2dgm5Y5jN0xU653THqnXH
        a9yV/gEK8DfKGbOeZAAAIABJREFUeJztnXeYHMWZ/z9V3T09YWdz0q6kVY4gQAJMtBBggsGA
        hTHGBh/RBmwfPg6MwdxhbJw5G/swOBAcCcYYc8I2mCTAmBwEQtIqbdKuNs7uTp5O9fujZzaI
        XSV2Bfd77vs8o33U3dVdVW/V+9abqsSjz73E/xJUAwuAhcBMoA6oAEKAln/GBTJAH9ABNAHr
        gQ1A9z6u715Bf78rMA6CwDLgQGB/YA4wHagBivfwXXGgC2gBtgBvA2uAV4DcBNV3wvBBIshU
        4BjgI8Dh+AQwRz2hFMJ1EUqBAoT/ByGG78PwPSFQmlaMEMXAXOD4/Jty+AR6AXgSeBrYNolt
        22283wSJAicDp+Z/ZQAoReGvAJSUKCnxTBM3FMILBFC6BsK/PgyF8BQoD+G4SMtCy2SQuRzC
        8xCeVyCgCcxDiHnAvwAx4C/AI8DfgMS+aPxYEO+TDJkHXAB8HJiPEH7n2zYCcEMh3FAIJxLB
        DYUQCmQ6TaA/RqC/Hz0ex0jEkak0Wi6HsF0AlKHhmkG8SAg7WoJTXIxVVopVXoEXCqEEaJkM
        eiqFlsmgZTIoQBkGhToAjcCfgF8BG/d1x+xrgiwGLsUnRqRwUVoWStOwysvJVVWCkJg9vRQ1
        bqDknbUUbdpIqLUNs6sHfSCOnoijWdkh9pVnVAhUgU3hBoI40WKc0hJyNZVkpk8jOXceg4v3
        IzF/AVZVJcLzCPT2EojFEK6LFwiMrGsKuBv4GfDOvuqgfUWQGcA1wPn4AhvhOCgpcYui5Gqq
        UFISbm6l/NWXqXzqacrWvonZ0o5up1BouLqJFwjiBoN4RgA06RNCCPL08GWHUggUuB7SttAy
        WaSdRXOyCDwcI0K2oZ6B/Q+iZ8Vy+g85lPT0GQjPxezuRk8mwfNQ+hA3z+LPlu8BzZPdUZNN
        kADwr8BXgCqE8NmS55GrqSFTV4e5vZOqf6ym5u+PU/GP5wl3bUMhsMKluOEwTiiC0jQQAqE8
        hOsOy5hdIT9blJCgQLgOeiaFnk6jpwcQKDK10+g78kg6Tzie3qOPJVdbTaijA7Ory5ddhlH4
        Xg/wfeAngDU53TW5BDkYuBlYDoBSSNsmV1FBZvp0QtvamX7v76h7+E9E160HJLniCpxIGGXo
        IKQ/2pXafQLsCkKgRH5WKQ9pO+ipNIF4HwKPxKJFbPv4Sto+9Rky9VMJt7YQ6OvDK8gYH88A
        VwGvTkyldqjiJBHka8D1IIIoD2lZ2OXlpKZNJ7S9nYbf/YaG3/+OSHsb2UgZ2fJqlK4hHXvi
        On93IQSebiAdFzPWRTA1QKp+Oq3nnkvLuZ8lU1tHuK0FI9bvyxifMFngJuBbE16dCSZILfAL
        4GMIgXAchOuSmDcfpQlm33UHs267nXBHK9lIObmKSpTUkK4DymNYGOxrKBAST9N9WdLXSzAV
        I1nfQNNll7L1wksQrkt0YyNK03354g+cVcDngM6JqslEEuRY4E58AY60LKyKCpIzZlL93DPs
        //XrKXvtVTLhCrJVVUjlgee9968qBVrecuK6I1nL3r9SSpSQmN09hDN99C87hLdvvInuo4+m
        aGszgVjfyBVZM3AR8NR7/jATR5DPAT9FCB3PQ8vlSCxYgFKKhTd/l7m334ZrCxINs0AKpJXb
        dccpBXpeltjWOM8rVCAIXXkzVU01wsoy5kxTCoyAPxMdZ7e+7wVM8BTRlq1ohmLTZZez7qpr
        EUBx4wZc0wQpQSkH+AI+d3hPmAiCXAt8GxhaAQ0ctJTixnUccvnnKXvtVRKVU7GLonvAmhTK
        CCI7O5F2FmfKVIRQo2eUEHiagdzeTvm0IhAQa03iTalHujvIIilRSqBv34ZnBPFqaxH2OITb
        oR4FVmYkE0R7txFbdgiv3v5z4vMWUvrG60MruTyuA76zJ523I+SuH9kp/hP4NkIgLQs3FCJ2
        8CFM++N9rDhuOUVvvkPfjEU44fAIgZ3vhJ2MUGUEobmJsoNnUHLOcVT0bsTr7MEVBmgSpMBR
        klDzOsoXlnDHPc9yxz3PUr6whFDzOhzlP4MmcYWB19lDRc9GSs45lrKDZ0Bzk/+N8TBUN197
        l46NEw7TN2MR0TffZsVxy5n2x/vpP/hQ3FAIaQ3N4G/n+2SvoZ174SV7W/ZG4OsIgcxmsUtL
        SSxezOJv3shB1/w7lhElOWUqmmMh3jUrFK7jIgzTb8cI25UyTbxt7VQ2SO6+/h5+Uf4xFi+f
        Rn33O2gbNpENluBpBsXbGgmvPIofff9xvvhymFXtQUouu4gP976I9vIbZIqrUTmbaMcmig+s
        o+nKr3LdzC/Ss2IFR7x2D6m2BKK8DDGSfUmJkjqeZeObyIbrLJSHVB7Z0kpkKsPMB+8Fpdh2
        1ifREwn0ZNLXWWAF/kBfvTedurcEuQr4FkIgc1msyiqSc+ex9PMXs/D2WxmsbsAqLUUb4v3D
        DfN0HW0wSUW6h3Csk2xOofQAaDoEDNS2TqpqbF669WHO+p3Fi/c9yz3VH8b75Nks3T9CyRsv
        EW1vw7r+Us6//EFufiwFiS2QjvFYaxmbLv4SH6vqpnTVo0SiNs6/XcqPT/0m57/dwLN3PMnf
        Bio54dpzmPfM70l3ZBBlJT4XtRxk/wDlfa1E3DQ5V8eNhBGem6+/3wbpOtjREuxAhIbHVmG2
        tNBywYVo2Rx6PF4gynJ808s/97Rj90aGXAjciRBo2SzZqmoyDdM5+LKLmXHvPfTXz0HpOsKx
        d2BLCmWG0Lc2ETlsMY/953dZ+MwTzHr6QXi7kXRaJxWuosrYzqZf/J5lLywl8ew/YF41tGYg
        UkPV8Qv4gf4Up5QNsnLmZTz3mAciBpVdgAt9teBWcejJgoe3/pT13RpfzB7Bur+/jZbupHhm
        Of1bYlQsP46Xjl7P7M+dS49VTSTdSzjkwJLZNB23knUfPokTb7yW1Ivv4MyaichlRg0qlEIZ
        BsJ2KGvfTNOnP82rt91BuKUVs6cbLxgszPqLgLsmkyCH42uqhrQs7JJiEvMXcuiFn2XGA/fR
        N20eaNKXFzsKTE3DTuWoSTbz1D1/4Tjzo0xJJzkv2scJPS9y3CP3wOurefWr/82x/aeT+N2f
        WDAdpie7mJXrYka8A7t1GwtrS7nzS9/jb7EgX45+l4yM8PO+C0FofK7sLsIiyS1dF1M5dx7x
        B5/Gam+Fukq0gEk0G0czFH2bkyz81Ed4uvKv1NxyExx4DE+efjaryk7i571lZEvhKW8VKz51
        Gl1FMzAipr+kHgWFpxvgelS0baT57HN4+c5fE92wHmMwXlgW2/iz5YXJIEgd8AZCVAvHwQ2F
        iO+3P8suvZjZv/0Vsfp5INUY8sKvvCsMits2IL96GUtPv421D74AehUYUZgZZFlDkPNDm8jc
        8Xes+//CCXVxGhJdVDtxcNLgOmBq0Ouw8iN34V4S4+HSq3BcOOj1+7FVkDXLTsc04Ettl3Lr
        019CND6DUrOZ5TVilqRZX7o/phUn4iWIbUlz/KmLWXlGHb/ONvBSawCamviw8RQvdi9g2qeP
        YcOqz+N+5xfEpy1AU2MMMpRvJ/OgvH0Tm887n9d+dgcla9/2Tfu+AtkNHITvUt4l9sRBdSdC
        VAvPA6UYXLyYxV+/gTm//RWxqXNQukTaO7Ip8ut/A6NjO+YBU/neJ/6DtY82Q7iKYq0X13ZI
        bRnktVgtr5XO5+lVZ3FMagP0B4f1Dz1M2gwT08Mky3MM6LUcVfwqzAQ9AHM3bSdt6ZgLAAX7
        57ZBpo6a2gxfWvDfHPvSG3S9ZfFI+eH8ds4ZZI1iyqvSPLGmnSdmHQDxDugOcvchl3P+gU/y
        h7eXcfb//IFvrfwuN/z1LxjrO/HqauFd7RMIz8MzDPqnzWHub39FpraedTfcQPkrr/gOMSmr
        Ueou4KTd6eTdXfbeAJyEUshcjoGly2i45/cs/sG3GKhqQOn62MQAkBLXUZQwyJovf5Mbmyqg
        N8uK0jf45zGf4PGjPs60iA5ZAUaWtR86EYDXIvO5q+4krpl7IWcs/DLHLPkaRx94A8sOuomn
        p03n3nfOYnOzpHFzMY/3nMozsdN5e0M5LW3w481XILwk1alervvPR/jbWYdxjvYozkAJ+ze+
        RTotUEKjaFY5iD6QgqJIihmRPjCgtsRBJi1uaoqy5ss3UcIArqNAjtFdQiBtG6Xp9Fc1sN8P
        vsX0++5h4KClyFyuIEtOzPfhLrE7LGsp8FpheZucN5/Q9g5WHH0YjllEpqIaOa4mDUo3MJo3
        UfwvZ3DMFx7gmT+9CeYcrq6/ke+fejP0w0mP3MFjydOhboCGlhYanlzNmqqFDIZKQAvj6wMe
        SB2SOZhlwqyFVHc/j0U9A/IAkBpRdw1FqonttccRfPMfiOcS3PvtG1gyI84Vd13JS/Ea6no7
        sYssWvoqSS4+AKoioOIQmckcuZljy1/g8e1H0BSYCrEEyz9+IKt/ehbx3/wZe8Zcf7EyZkMV
        yggQ7OtGs5I8/eyLZOvqKGpsHCnklwGv76yzd8WyJHB7wVBoVVTgaZKDLzofbJd0fS2avSsz
        iMIzQtCxnanxfggaUNTLXR0fY8rqZpJOFc+mj4ZwG2QMWqrqaZl+JLiaz7Jz/Uy3k9Tl+qi1
        Yyzp2kS7N5c7FzfQXf5RtNgGfjnrNDQBn9/0HRKlpyKMLeQGJeFQhmklKWbO7OLBr1xDMhPA
        Cge47MZTeaf3Iv71C0ewrjPNE69vh74ONltVbO67FKJJ0DshGKU+GYOO7XiBEPmQirEhBMKx
        SVfWUtzcyCEXX8Azjz6BVVGBMThY0OZvx18YjWvE2xVBrgAOxfMdQ8lZs1lyzVWUr11D38zF
        aM6uo2iE42DVT4PHn+eG0+/lgUUXYb31In2llVy55jegDUBpn0/URBpKSlgmtnH4ljdZIjrZ
        L91BXaabaidByMtBzyDt3iLuElegMpJLan/GxQseAwFvpqbxk75bUGFJkZcmRRnPbZvOjLoB
        UlmdaQfEaXpL8tDrl3BcWRM/vvPTqBWn0rbiMP5oLOaBngAvr2/Da++FjiyBFQdwY+Od8MTz
        WDMWoTu79ktpTo74jPlUvP0mi775dd763s2Uv/qKH4whxKHAl4Ef7g1B6oD/AN9ym1iwgOrV
        q5nzs5+SqKhH29EUshPoeCRliLmP3s8nvvJZ7nmt2A9pq9wKrgfKAjfEMtFOd/kszkg3cv3b
        P4XKCBQ6Qbk+ywqAbWWJ2iniqpJQ0IUpfkui6z3oDKF5HlmlcVTkbfrXKb74+nnUlqRZ0fEm
        6xqrITqFc9tv4y/PPMg3fngvv5lWw5XLP8SVx5/GlhUr+KU8lJ8/0cZHSpLMuftekjKMPv6g
        Hg2l0BybREU9c372U7Z/9FT6ly6jeMN6PNMEuB64j3FWXTuTIT8HPofn4USjZKdMYflxxxBt
        bCQxfbYvxHcbCjfnUjXQzFP3/ZXj40cT2PgCuUAl6Bo4CuI5/niyxzf65lP291Ws/tW/QHUN
        G4IVbAxW0hyqpSlUTTcR2sLlvHTyiViqkqpYN/csOQ9huHzmjV/TVTKFgOxGf6aR6YNdfCi0
        kXajlFDGozI0yB8SHyZVWkabuIeprzzCJ9oHeBg4qbycYCzGeXPrWXb6KcQuvpyixg5qPv5R
        MpUNiIDOnvhrPMMg2rqFxIL5PPP4aoKd29GTCd967VuFP78nBJkPrEUIXVgWgwccwNz//jFL
        vn49/Q0LEZ6zx549T9MItzQSPvdU9rt0FdlHn+RzSwI82FmKm8px84oiejI2n1wtKQlm+cxD
        v+bNSB0by2bSa+tgC1/NytogPDhpCRTpkKqERBY8BaVhiPRC0oGHnwJPA8KgC6YGYlSEXN6y
        6wnqA3z/xk9wenGcaeuexX7yCVY1tXPrY6uJA6cB115wLkZpGZ0/+hmBaTPzVuo9gBAoqVPW
        sp41N97E5i9cQelba3yFUSkXWMQYYUbjEeR24FJh29jlFSgp+PAJxyETWbLVNUg7xx579zQN
        ZzBJterirt8/z0WNc7ikZD2fWlJKXVmENR0JPv/3DINhA8qj8GwrrG+GaBDMIJRFMEtD1BuK
        csMhunwJ0ahB0E6RFaWgIMgAWSNCPG6ReG4t/ZZOq6Ph9CegPwvpHMRbkDNr8Y45EiMc5rR5
        JZwyLcBHsluZ+tKjvPKnB6h/7g3Kv/ZNUr/8GfQOIMrKxtDUdwWFZ5gEu7twoyGee/wJhOth
        xGIFe9fP8UOidkmQGcAGFKa0LQaXLWX+N77Jwh9+l8GGhQgnV5h2ewzPCFLctBb+/XIWnHwr
        TX9+hejUACV2jm2dFlQWQzgCU2oJ93ay/+YtHFABC8wE8+0+pme7qbD7Ke7rIdLZCYm4rzy6
        jv8BTQfDhGiUVG0N8Ypq+owyWoPVNBrlbMgW8VrMYO3cOeSqqmBjK/T1g/IoW1DPUR+ayeVV
        aQ5PtKL98Ltkf/0b5MyF/jf2rsUozaSkZT3rr7qW9V+7nrLXXy+YVXL4wePNI0uMRZDvAF8V
        juNXGsXyY5ajpXPkKqvB29ORMuJjmobXP0jFFI2bb32aq1/RILYNRAnMmkrDtGKONPpYsf1N
        jlj/InPb1mN0tkJHO/T0QzqHchSONHA9iZsPMR0ZKCc8D83z0KSH7tkIXUDYhKoymFKPPaWB
        TVMX8M9Fh/F0/UE8b1fS0tQHW9og0Q8N+/FfHy/lyjPm0deZQ5SXDxN8byA1zJ5u3CKTZ55+
        FgCzp6cQ9/VdfAffEHZcZUWBcwCUrpOprWXet79FpLeTgeoGRDa906X4ruCh8EIhvMYmznn1
        Xq4//D/JrS/jrFkuH+9/nWMfX0XNy0/D2o2QsMgGQqQCEbxIFBWshbBE5APj1M7Cg4Twn1P5
        5zwP0e8it20maK1hkXU/i6IBLt5vHl2HruCpwz7GQ7MP4oHmWWhzyzjpga/jbWqDmpmQTvKe
        gi8EZIuLKe1qYfrdd9J47dcI9PcX7p6D79QaiiXecYacBfwBpXArynFi/Rx+6skEB2OkNRP5
        HmbHcAUF0rMpnjuLh75zJyWP/5UTHr0b0dKLla+ZAygMBCDz/xsbcox7gvH1LoGHng+Ot9Hx
        R2AAUA2VPHbS+SSPP5mV111C/6ateNLY48XLWPCkRtjNkS0p54VH/oZeXobWFyso1J8EHhiq
        4Q4EuRf4lBSCuJTUJZN8qKMVqyia92dPTMyUF4rgPvAg0VgrLJiPO+iQKa8EM4DQNH88Wjnc
        ju3guGMOUFldhYhG3y1sNQ2VSOB197y7kAJ0Da1uCgRMP/LUdSFnEYr1opVosL6RZHkD8pMr
        kZnMBLVZgJQEkgleqptGR1GUYs/D84l9H3muBKNZVj3w0UK9vdgAUw8+APmR5ezE+7zXsKNF
        ZNMZnC0bkbkM2lCvC7xMGjlzGtGbvj5ueevJJ7CeeRatpHTUdXdwgMBJxxE47vhxSkLmjjvw
        ujqRwTB+a0PkqopRZhjthI9jBkyM5Ue+1yaOialdfWx79U1U6VDe0Ufx+74dRhPkeKBYCkHO
        sohEI0ypLJuUSqlMBnQdtWkTqSu+mGdNRv6uxCWHVlGBeerHkDXVY74j8+Nbyax6GB2TYRYl
        ccgRWnPGuATxtneRuvoa3IEY2oiyHjYKKL79l7D/YlQ6jQiHJ7DVPqZUlhIpimBZFmYggKdU
        MX7f/xpGE+RYAIQgk7OYObUWfTi8ZWIhJFgWuC5aqBgRLUGY+XmoabB9OzIa3akslaEoGiAb
        ZgyHB0mJ1tKIDEV38m2QxVHIesja2iGWJzJZVCbuhzJZ1tim9gmArmlUV5TQtK0T0zQLMupY
        8gQpfDUIHAHgOC4oqK2smJQKjYIQhUCz0T/BrjtkRBrbqN/Ie+NBSv8bo8opP3Roh6CMyUBt
        ld+3jjMk/44gn6ZRaPVS8iGgrudiBg1Ki3cyyv4P7wml0ShmwMAdXrXOwKfBEEEOBHQBOI5D
        aVGUSGgyRPn/ASASClIajeI4TmEu6vg0GCLI/gAIgeN6lEYjvmI1mRhpupeab/Yo/BDs0rSf
        52yjyml6Pgt3546koXePLCu1fDaWmBDdY2cQQlAajeC43kj2uj8MC/UF4Gu1QgiKiiJjvGYC
        oRQiGERl0jipAWRqADFi2evioaVNZFHR+K+QHjagN60fdd0BAnJ8y6yIhHFTKdxMP9rWQQp6
        hkLhgb+6Gna5ThqKivxBr4a/swB8xbAKP8JujlKKnGXzoSWLqK0qn7za2Da5h1aBBk5T87sC
        JJSm+QpbOoly/HTmIeTzz2U4ggpHkKOi3fMR6+k0KpUCFGJEvyopQZeIcBShSX9FNXTTQ+kG
        2tw5YHuYp58Co5NAJxSdPTFeemsdZsAocKNNwJE6vu+jBsB1PQKGQSQSmrSKAL423d6BfszR
        mGeuHPMRr6eH3pmzUanEqNAYhe9srPjjwwTOPG3Msrk/PETs7JVojGZ6HiCLS6hs2uobDceA
        8+Zb2Kufy7POyUMkEiJgGLiuh65r4Cc7zdfxeVdUCoHreQTNAJHgJAt0pSBg7DRhR8XjaNEo
        SoSRlRW+g0hIVCaN6GoGYyc6kqGhA9qUWb4vJV9W9PQgIibe4CDaOARBKYQxMTasnSESDBIw
        dFKZLAGh4ykVBfbXyS93EeApD13TkHIfpZbtqtFC+L70Qr6HEMPm/51lXxXuuc7ossrbtY6y
        j3IcpRTomoZXqJP/3RkSP0QAEHieKkyf/8M+gK5reN6oATBF4m9x5EMpjP8jyD6Drms7zsgK
        HRiyoCkB2mTZr8bCztiHlMOsR+T9HgU9oXB/Z2X9gqPLgv/OnZWdbP1rBHRN21HVCo+IbVH5
        eu+DCgkBtoXYCfFFtBg3HkdlUqhU79B1Rd4+uzNer3x9hO6WUZc9QIgosrhkJ1WT+aDq3WnI
        e4Ovh8AIn4t4f7Zncl1EfR1OUxO5p56EbGZ04IQZQFk24av+HZHJ+gFyQ1AooXDWvoXT0gSp
        1Oh3RyKoRILoV65BIBnVs66DCgfJ/PwXYOi+VXfotR4EQ2hz5iLqp/hW4H3JLfLQGSLPCF/1
        JEM5DrJ+KvazzxK/9isjEsZ8eIBWVkZVT6+f5DkGBs/4BKmHH3xXUIADRM44k5KH/jj2xx2H
        nopK3Pjgu/QbBZT81y3ohx2GclzE5OmF/jeVynNIkf86SgfShQeEAneP44/2AkJCLocIhtCL
        ShHhYkQwr4xqGt72DmRZGV5fL7J6bAeVDIYxAG3GwlH+ENG8Hhkc3/Tj9fahlZcjbImsnTLk
        D1GZDCqX8OuRy/mm+EmG8+4YhbSOv2GkDyGwnX1AkJEo8NBCZKAaGi27Wd4bUXYPPzyq7ARu
        crObcOxCQukQ+nRge6GCUoqRTpN9h5GdsaedMlFlJyiAY0/gOO6OSvh2ib+Vat5hJnFcd0dl
        ZRKx7zthl9hHs8TzFI7rIvPbUOXRJIG1QMJTCk1KLNshlc1OcnUK7lJJfjE6rGPstk8iP7J2
        LLdbn1fvLpcPrPPrxaSPlVQ2i2U7aFIWwoESwFodf5PhTiCqaZKcZZNKZYiGJ9viK1GOhZuK
        I1LxUZzUBbReb1yBDqDSg9gALY2jrtuAmYqPW07W1uD29OKmk2jNQxGEQ6sslctNWoDDSKRS
        GSzbxgwUom3oAjboQC9+TNBcIQSO65LOTe7+wsIw8LZ1oFXXELni31CxAYSZX2MKgXIcCAfJ
        3P0rhKaPDoaTEiVALlpEtK4WsYPIC2oCUVZK9te/9S+MNEJKiXJdgudfAJkMYnjfK1TOQlSW
        Iaqr8No7EEcaTCbSuRyO6xIcXltvA3oLy/gNwDEFD1YymRrzJRMGTQPXRps1E/O8T4/5iIrF
        6KmfipfNvEtf8ICKVX8lcOrJY5a1Hn6EvjM+xo5qnQdo4SIqO9oRJWNvkG3/8wW8zVsmXSlM
        JlNDHtq87rcBhl24bwOgFLomGUgMPzxZkDNn4G7ein7k4WPe9+JxtGgxEhNZVpbn+xKVzeD1
        50NMx4FyHHRAltf58V55E7cXiyGiYbzBAbRxCOJubUafPXMCWjg+lIKBRApdGyXQ34bhIIc3
        8BPL0HWdgWSCVGZyBbusrsFrb0flxsm9cF1/AzPNAKPw0/2/wO5IXTGyjGH479qRBY6EZaHa
        2hBV48uuiUAqk2EgmUTX9UIrHHwajCJIM4AmNXJZm4F4clIrpc2ZDZEI3tatu3hyh0C4PVmW
        vqvczsu6Tc2ocNj3q08iBuIJclkLTQ6xxWZ2IEgWeB7yNnoBnb29O75nwiHr63BeennSv7O7
        sF98yY+Mn2SLd2dvHwhGOgOfx6fBKHnpb+KoFCEzQHdscNK1duPoo3Db2nFjA+M/JOS746dg
        551WuLdDzNawRfndM8Xtj+O1tWN8+Oi9a8xuwnFcumODhMzAyNk+tIHmSGPpk0DcU6rYDATo
        G0zS1RejvqZq0ionq6sIL5sH/3gcTjtr1D1RXo7X24tn51DJXsin2Sg83x8id7IKkhIXYPtW
        hpN6BB4e0gkhKyrfVUR7/nHCB82BcaLtJwpdfTHiyQwVJUUFhTCO3/fAuxN27gHOEUKgPBvL
        MxlIRSkKa0M2wImE0nWSgxkOXf17Fn71QrKPvYwwdF9fSCaw/vGcbxUekROvpERpBoEDDkBO
        m4bQRvo8FMr1cNtasd96C+HYo2K6VMBAmUHMo45GRopQrotyHYInH8mGb/+Clz58DkWlEX/b
        v4lEXvlPpl1KIwkCMoeQRmG5ey8wtPbf0Z3wZ+Acz1OUF4fpTWa5/Lq/kIw7UGGC7U28Jy1c
        ycxt8ML8R6nZvJ6O7/+3v2RtmEnlmjdhnOXp4LmfJXP1lejSYHikCBzPJnzuZyn57a/HLKf6
        B+hbcgDetlYcoO66K+nOxTnlfsXW59+AzBiZV+8FCjAE9FoUFRvcf9vhlBWFicWtAmd9aOTj
        OxLkUaBFCBr6ExaLG6J89qzZ3HbnFgKloVFRgBMBoTw0PU3TrP35zK2v8cQdZ1K5tYPePz6I
        aVuFg3Kc0KfWAAALL0lEQVTGhLQ83x9YVTfKHyK7WhDWTkKEBAjHwQEqz/4knLmSc8//M1tn
        H0IkMIgbCvmbkk0glACrz+Vfzp7N4ulRNrQkC8RoAR4b+eyOBInjT6GvOp6iK2Zx3ilTuffx
        LgYzLiWlgQnZjHoYGsJTFJdkeTIxnwu/9DB3/eYaKgX0P7gKlUqOq1Ejpe9pNM3RDqr83/Gg
        kgnszm4qzj6bwDev5nPn/pbHzf2JlmTRsgLdnFiTiZQwOGBR1hDlvFPq6YrlcDyF7pvd78Xv
        8+Hnx3jHz4GcJgVdsRxTq0zOObEOL2ajpJh4OSIlWi5HtCHM3ZkFfOmyPxH44meouPErkMxM
        7McAUlkqbvoa5hfP44rPP8Avs4soaoig53KonS0U9gbKj0P2YhbnnFhHfaVJVyyH5hMjh9/X
        ozAWQZqBuwUgpKC1K8t5J06hYkqIwX4LzZhoS6jCExp6OkF0TpRbB+Zz2uVPkTxoMXLexJsw
        5Py5pJYt4oxL/8pPBuZTNDeKkUrgCY2JHm2aIRkcsKicEuK8E6bQ2pVFyKE4/7sZ44CY8Xr3
        R4AT0AWxuENttcnnTpuK6szgoCZFb/KEjp5KUDwjwKrSIzjs0hd58tJrYds4x3QU8kMCpr+n
        uxGAgDl8SttYaH+N1Zdfy+GX/JOHS4+keKaJkUzgTULwjRDgoFCdGS45bRq1VSaxuENAF+Cb
        Sn40VrnxCLIRuMs/eECwrTPLBafVM29hCfG2NFKfDH+BwpM6WjpNSUWOxiVHc/zj5Vx24m1s
        uOVH0LF29NPxfmzAbdqE29Lk/5o2YQMqHhv96u1rafzxLVx+0k9Z8WgpG5YcTUmFjZZO48kR
        gTcTCKlL4m1p5i8s4YLT6mnryqJphTgs7mKcA8d2tl9WHb43sSxneSxoiPD6xjjnXP06Zk2I
        UFBO3pEfCnThkA6XkumFisbXOXN6gjM/Mo9jjppF4MgD4Y034PmXobkV0vnAmXAYZjbAkYfA
        gQdhPb+GZ57fwoNPNPJgU5Te+UsJVgki6QEcpU9a3YWETNYj153h/u8t5cD5xWxoTWH67L4f
        2I+92MAM4N+AHyoFtuOxbGEx/3HbRu66r4XSxSWQ8ybV0yk9F4IB+lUI+rKIzjYWBpMcVS05
        6Ig5zFswjUo3QUj3a5FxBH16MRvXt/HGC5t4rtNjgxXBq5kO5UHKZAZyVl5eTA4EgCkZeGeQ
        C89u4JuXz+O1xjiGJgus/krGYVewa4JI4AUBhzquoqRIp6rc5Iwvv8r65hTlsyK4uQldB48D
        3zeT0XRyngnxHAwmIJtA1xRF+WC6pOvhuAKCRb5CWWxiSouQa+e14smPtdJMSWxrikUzIjx0
        y8H0xHIMphx0KVDwMrvYBHO3t4kVArKWx7zpYbZ35zjpspdxinRKywO4ttoXbfUPmMRB6Tqu
        HsBGx/HAzUfJaFKgSzBw/FMZHMffbGZfxE8r0AxBfyxHIOXy6G0forY6wMbWNEFDFjjJLreJ
        3R3p/Dpwg1Jg6pLGljTzZkT4r6sW4nVmSeU8pL5vIsaVAFfoeC7IbA4zlyJipyh20xS7aSJ2
        CjOXQmZzeK7/7D4hBiB1QSrnobqy3HzVIubOCNPYnMbUh4hxA7sgBuz+ztbfAB4VAkxD8ubG
        BJ/4yBT+9ZI55DbGcT1/NbYvoYTAP0JyjN8+TCkAv+2uC7mNca64eC6fOL6WNzfGMQNDcuNR
        /D7cJfZk/XqRgu7CrhTrm1Nce8Fszlk5nfj6ASw1OfrJBx1CgKUU8Q0DfHrlNK69YDbrm1MI
        hL9riH+O+0W7+749IUgHcIZS2JomSGYcGpuT3Hz1IlZ+tJ7kukE8Ifb5THk/oWkCTwiS6wZZ
        eUo9/3X1YjY0J0lmnILOYQNnsJsnI8Cen0H1Avn9Zk1DMphyaN6e4SfX7cfZH60nvm4Q1wWp
        TbzN6wMF5bfRdRXxdYOcfUo9P/nqfmzdnmEw5RT0DfD7arfPDoG9O0/9bqBCKX4QNCR9A37U
        yC3XLwFT4/4HWwnOLyZsarjOvlgS73tohiSdc8k2Jjj7zGn86CuLaOrI0Ddg+SsqfzBejd9X
        e/buvTyD6p/4s2u5rgniaYdkxuXcU+twdcE/nuwiownCxQa4//9MFQFIU9Lfl8PZlubLn5/L
        TV+cx8aWFP0Je+Ty9hvkjxLcU7yXU9pW4zOmFYYuSGc9BpMOZ6yoZfa0MKuf7iLebxGsMn3H
        1v9yukgpICAZ2JqkyPa45Wv7ceHKBtY3pUimXYKBUcvbG/f2O++FIOCfR2UBx2mawHY8tvfm
        WH5IBScdWc3bawdo2hDHjWiYweE42v9NEAKkIUllHFJbkiybXcyvvrOUw5eWsaYxjuMpjGE9
        7Dre44HFE3r0qhDongc522Xe9CKQgp/evZnb/9yKZ2iUTg0jEbiT4ZufaChfVngoBtrSSNvj
        spXT+cL5s8GDja0JTEMrbIj3gTp6tYDhw4kVWI5HWUmAmXUhXng9xrdv38gbG+IwJURJqYFw
        1Qd2wggBShMM9tvQmeGghcVcd+k8Dl9aRlN7lv64RUCXhUHVzAfwcOICho7vFgIcR+F6MHd6
        GE3C7x5u547/aaOjKwNlJiWlAaQmUPbkWo13B0KA0CWeqxgcsCBmUTclyCWnTeMzp03F8RSb
        WlPoUqDrQ36ND/Tx3SPxNeB6AUFPgWV7lJUYTKsO0dmT5f7HOrjv0e10dmYQFQGiFSa6EHjO
        vieMwHcmOZ4iEcuhYha1tSHOObGOs0+cQnWVybauLP1xm4AxZArJ4MuKD/wB9yNxMHAz/sGK
        KAW261FeHGB6TZD2nix/enw7q57tYUNbPh+l1CAS1DA04aeWKcBTE0YkPyIlH7XmKWxXkcq6
        MGiDBwumh/nY8hrOPL6Wuqogrd1ZYoPWSF8G+AuZfwdem6Bqja7jJBIE/G3V/xX4ClAlBNiO
        wvOgujzAlAqTrv4cL73Rz99fjfHPd/rp687523GGdYIhiRnUh3Z1RfnJkrsre/xdaPMbIuBH
        C+WyDtmMB2kHHEVFjckRi8s4YVk5H1paTnVpgM6+LN0xCykFxjB76gG+D/wYP3NuUjDZBClg
        BnANcD75/WkdVyGFoCgkqSo3kUKwrTPDqxsGWL1mgMaNCbb25yDj+qM6ICGgoQckhu6fflAY
        7MOBpIVJ5RPNdhSO5YHlguX5p/CENGaVmyyYG2X5AaUcsqCU+toQnlL09OdIZjx/m6phm1wW
        +BXwPcaIEplo7CuCFLAY/1SZC4Ch7RYsx0OTgrKoQWWJgUTQG7fZ0JZiY1OSzW1p2nuzbBuw
        6U7ZWBkXt9DBo2ZLPrtWCrSAJBDSqCkymFpqUFcZZM7UMPNnFjF/eoSqYgNXKfriNrG4jesp
        f+U0jBS+6eNnwDuT3zU+9jVBCpiHP1tWAvMLWciO48uLkCkJmpKioEYooOEB6ZxHf8JiMOGQ
        yjjEUw6prEfOdrHyWRMBDYIBjYgpiUZ0IiGd0iKdsuIAIVMiBWRyLsmMS9byyOR8fcjQxMhM
        6EbgT/izYszIkMnE+0WQAqLAycCp+V8ZjNiYIf+vFAIpBGZAEgpIAoZASoEmhT8h8kzLw2dV
        rqfwPIVlKzKWR8722ZCX96sXmNEIQR0D/gI8AvyNEQes7Gu83wQZianACuA4/L3QpwPmyAcK
        nT0s1NW7E3dGBDMIwRDRdkAOP9D5BfzcjKfx05Lfd3yQCDISQfyAgAPxd02dg0+gGmCc6Otx
        EcdPym8BtuBnu64BXsEnzAcK788GZrtGIefx+RHXqvF3f14IzMQP5KsAQjCUku7iK219+F66
        JmA9fg54976o+HvF/wOcv4mZ8OV4lwAAAABJRU5ErkJggg==
      </shape>
      <shape name='EURO2024/CZE.png'>
        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
        UfCLxX8BglJHyXY3ZGwAAAAASUVORK5CYII=
      </shape>
      <shape name='EURO2024/DEN.png'>
        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
      </shape>
      <shape name='EURO2024/ENG.png'>
        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
      </shape>
      <shape name='EURO2024/ESP.png'>
        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
      </shape>
      <shape name='EURO2024/FRA.png'>
        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
      </shape>
      <shape name='EURO2024/GEO.png'>
        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
        7inj/wOt6GiZ/JvpoAAAAABJRU5ErkJggg==
      </shape>
      <shape name='EURO2024/GER.png'>
        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
        Vm5CvXXQAAAAAElFTkSuQmCC
      </shape>
      <shape name='EURO2024/HUN.png'>
        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
      </shape>
      <shape name='EURO2024/ITA.png'>
        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
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='EURO2024/NED.png'>
        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
        ezoKfrD8P2NmQG1cpdWLAAAAAElFTkSuQmCC
      </shape>
      <shape name='EURO2024/POL.png'>
        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
        u5oAAAAASUVORK5CYII=
      </shape>
      <shape name='EURO2024/POR.png'>
        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
        gHfvgXF/ZPx/Trn+HqMVD3kAAAAASUVORK5CYII=
      </shape>
      <shape name='EURO2024/ROU.png'>
        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
        YII=
      </shape>
      <shape name='EURO2024/SCO.png'>
        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
      </shape>
      <shape name='EURO2024/SRB.png'>
        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
      </shape>
      <shape name='EURO2024/SUI.png'>
        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
      </shape>
      <shape name='EURO2024/SVK.png'>
        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
      </shape>
      <shape name='EURO2024/SVN.png'>
        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
        SUVORK5CYII=
      </shape>
      <shape name='EURO2024/TUR.png'>
        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
      </shape>
      <shape name='EURO2024/UKR.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
